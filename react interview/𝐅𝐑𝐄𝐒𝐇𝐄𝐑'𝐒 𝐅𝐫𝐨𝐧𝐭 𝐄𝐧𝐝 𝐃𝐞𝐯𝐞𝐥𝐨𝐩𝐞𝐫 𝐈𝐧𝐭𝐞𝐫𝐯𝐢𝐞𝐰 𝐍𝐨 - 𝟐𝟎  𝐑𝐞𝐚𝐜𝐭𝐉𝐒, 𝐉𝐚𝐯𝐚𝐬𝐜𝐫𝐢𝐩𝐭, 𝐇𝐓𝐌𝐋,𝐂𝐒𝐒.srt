1
00:00:01,880 --> 00:00:03,520
so proin should we start with the
तो प्रिन क्या हमें शुरू करना चाहिए

2
00:00:03,520 --> 00:00:07,920
interview yes yes can okay uh so write a
साक्षात्कार हाँ हाँ ठीक कर सकते हैं उह इसलिए लिखें

3
00:00:07,920 --> 00:00:12,040
function okay and write any string you
ठीक है और आप किसी भी स्ट्रिंग को लिखें

4
00:00:12,040 --> 00:00:13,920
want write console log and write any
कंसोल लॉग लिखें और कोई भी लिखें

5
00:00:13,920 --> 00:00:18,960
string you want and call call it
स्ट्रिंग आप चाहते हैं और कॉल करें इसे कॉल करें

6
00:00:20,080 --> 00:00:23,400
outside okay or instead of okay you have
ठीक है या ठीक है के बजाय आपके पास है

7
00:00:23,400 --> 00:00:26,720
written string right uh write abc
लिखित स्ट्रिंग राइट उह लिखें एबीसी

8
00:00:26,720 --> 00:00:29,720
dot instead of in console log in console
कंसोल में कंसोल लॉग के बजाय डॉट

9
00:00:29,720 --> 00:00:31,920
log
लकड़ी का लट्ठा

10
00:00:31,920 --> 00:00:39,040
yes yes write abc dot okay uh write do
हाँ हाँ लिखो abc dot ठीक है उह लिखते हैं

11
00:00:39,040 --> 00:00:40,840
XY
ज़िंदगी

12
00:00:40,840 --> 00:00:46,000
z z and you have called the function uh
z z और आपने फ़ंक्शन उह कहा है

13
00:00:46,000 --> 00:00:48,879
after calling the function
फ़ंक्शन को कॉल करने के बाद

14
00:00:48,879 --> 00:00:54,600
right okay uh ABC do XY
ठीक है ठीक है उह एबीसी डू एक्सवाई

15
00:00:54,600 --> 00:00:58,719
Z okay equals to
Z ठीक है के बराबर है

16
00:00:58,719 --> 00:01:02,600
400 okay okay and after that write ABC
400 ठीक है ठीक है और उसके बाद एबीसी लिखें

17
00:01:02,600 --> 00:01:07,799
do XYZ is equals to 200 XY equals to 200
XYZ 200 XY के बराबर है 200 के बराबर है

18
00:01:07,799 --> 00:01:12,799
200 yes okay and call
200 हाँ ठीक है और कॉल करें

19
00:01:12,960 --> 00:01:17,040
again and tell me what will be the
फिर से और मुझे बताओ कि क्या होगा

20
00:01:17,040 --> 00:01:20,439
output okay
आउटपुट ठीक है

21
00:01:24,880 --> 00:01:26,479
so
इसलिए

22
00:01:26,479 --> 00:01:29,000
XY so here I think XY Z will be the
XY तो यहाँ मुझे लगता है कि xy z होगा

23
00:01:29,000 --> 00:01:32,000
methods of the function right so we are
फ़ंक्शन के तरीके सही हैं इसलिए हम हैं

24
00:01:32,000 --> 00:01:34,880
accessing ABC doxyz is equal to 400 ABC
ABC Doxyz एक्सेस करना 400 ABC के बराबर है

25
00:01:34,880 --> 00:01:37,840
doxyz equal to
के बराबर doxyz

26
00:01:38,119 --> 00:01:40,079
300
300

27
00:01:40,079 --> 00:01:42,360
not I think it will be undefined because
मुझे नहीं लगता कि यह अपरिभाषित होगा क्योंकि

28
00:01:42,360 --> 00:01:44,439
of the
की

29
00:01:44,439 --> 00:01:48,479
hting undefined uh it will print that's
अपरिभाषित उह हंग

30
00:01:48,479 --> 00:01:51,000
it yeah yeah because of the hting
यह हाँ हाँ के कारण हाँ

31
00:01:51,000 --> 00:01:53,719
because we did not assign any kind of uh
क्योंकि हमने किसी भी तरह का उह नहीं दिया

32
00:01:53,719 --> 00:01:56,880
so only only one time undefined it will
तो केवल एक ही समय अपरिभाषित होगा

33
00:01:56,880 --> 00:02:00,079
print you mean to say yeah here because
प्रिंट आप यहाँ हाँ कहने का मतलब है क्योंकि

34
00:02:00,079 --> 00:02:02,399
we are accessing only one time right
हम केवल एक समय सही पहुंच रहे हैं

35
00:02:02,399 --> 00:02:05,759
yeah so we are calling two times I guess
हाँ तो हम दो बार फोन कर रहे हैं मुझे लगता है

36
00:02:05,759 --> 00:02:07,320
yeah we are calling two times yeah we
हाँ, हम दो बार फोन कर रहे हैं हाँ हम

37
00:02:07,320 --> 00:02:09,758
are calling first here and second here
पहले यहाँ और दूसरे स्थान पर कॉल कर रहे हैं

38
00:02:09,758 --> 00:02:12,760
yeah so it will print one times
हाँ तो यह एक बार प्रिंट करेगा

39
00:02:12,760 --> 00:02:15,120
undefined you want to no one time
अपरिभाषित आप किसी को नहीं चाहते हैं

40
00:02:15,120 --> 00:02:16,680
undefined and second time you're calling
अपरिभाषित और दूसरी बार आप कॉल कर रहे हैं

41
00:02:16,680 --> 00:02:18,920
the function right yeah so uh it will
फ़ंक्शन सही हाँ तो उह यह होगा

42
00:02:18,920 --> 00:02:20,720
take 400 and again I think it will be
400 ले लो और फिर से मुझे लगता है कि यह होगा

43
00:02:20,720 --> 00:02:25,519
overd by to 200 oh yeah so okay so first
200 से 200 ओह हाँ, तो ठीक है तो पहले

44
00:02:25,519 --> 00:02:27,200
time undefined second time we'll get 200
समय अपरिभाषित दूसरी बार हम 200 प्राप्त करेंगे

45
00:02:27,200 --> 00:02:30,200
I think okay so undefined and 200 will
मुझे लगता है कि ठीक है इतना अपरिभाषित और 200 विल

46
00:02:30,200 --> 00:02:33,680
be the output you meant to say yeah okay
वह आउटपुट बनें जो आप कहते हैं कि हाँ ठीक है

47
00:02:33,680 --> 00:02:38,000
okay fine okay you can comment this
ठीक है ठीक है ठीक है आप यह टिप्पणी कर सकते हैं

48
00:02:40,120 --> 00:02:42,599
out if you want if you want you can
यदि आप चाहते हैं कि आप चाहते हैं कि आप कर सकते हैं

49
00:02:42,599 --> 00:02:46,080
remove as well it depends on you okay
निकालें और साथ ही यह आप पर निर्भर करता है ठीक है

50
00:02:46,080 --> 00:02:51,440
yeah uh so uh there are three uh phases
हाँ उह उह तीन उह चरण हैं

51
00:02:51,440 --> 00:02:54,519
of event propagation do you know no sir
घटना के प्रसार के बारे में क्या आप नहीं जानते हैं

52
00:02:54,519 --> 00:02:56,920
I'm not okay no worries no
मैं ठीक नहीं हूँ कोई चिंता नहीं

53
00:02:56,920 --> 00:03:00,599
worries okay
चिंता ठीक है

54
00:03:00,599 --> 00:03:01,599
okay
ठीक है

55
00:03:01,599 --> 00:03:07,640
uh write const numbers write an array
उह लिखें const नंबर एक सरणी लिखें

56
00:03:07,640 --> 00:03:10,159
with any write any four
किसी भी चार लिखने के साथ

57
00:03:10,159 --> 00:03:13,640
elements okay and and numbers you have
तत्व ठीक है और आपके पास संख्याएँ हैं

58
00:03:13,640 --> 00:03:15,680
written so number uh on the next line
अगली पंक्ति में इतना नंबर उह लिखा है

59
00:03:15,680 --> 00:03:17,959
write numbers of
की संख्या लिखें

60
00:03:17,959 --> 00:03:22,599
100 number Square yes write
100 नंबर वर्ग हाँ लिखें

61
00:03:22,599 --> 00:03:28,000
500 okay and uh print it console log of
500 ठीक है और उह प्रिंट इट कंसोल लॉग

62
00:03:28,000 --> 00:03:30,840
numbers and tell me what will be the out
नंबर और मुझे बताएं कि क्या होगा

63
00:03:30,840 --> 00:03:32,920
okay in this case uh we have an array of
ठीक है इस मामले में उह हमारे पास एक सरणी है

64
00:03:32,920 --> 00:03:37,200
1 2 3 4 yes and uh so now the length of
1 2 3 4 हाँ और उह तो अब की लंबाई

65
00:03:37,200 --> 00:03:39,599
the array is 0 1 to 3 like yeah the
सरणी 0 1 से 3 है जैसे हाँ

66
00:03:39,599 --> 00:03:41,680
length of the AR is four currently and
एआर की लंबाई वर्तमान में चार है और

67
00:03:41,680 --> 00:03:43,920
we are directly pushing the 500 into the
हम सीधे 500 में धकेल रहे हैं

68
00:03:43,920 --> 00:03:48,040
100th index so I think uh the the 100th
100 वां सूचकांक तो मुझे लगता है कि यूएच 100 वें

69
00:03:48,040 --> 00:03:50,159
Position will be assigned with 500 and
स्थिति को 500 और के साथ सौंपा जाएगा

70
00:03:50,159 --> 00:03:51,720
remaining uh elements will be empty
शेष यूएच तत्व खाली हो जाएंगे

71
00:03:51,720 --> 00:03:56,120
items I think I guess okay so do you do
आइटम मुझे लगता है कि मुझे लगता है कि ठीक है तो क्या आप करते हैं

72
00:03:56,120 --> 00:03:59,280
you think is it the right way putting at
आपको लगता है कि यह सही तरीका है

73
00:03:59,280 --> 00:04:00,760
100
100

74
00:04:00,760 --> 00:04:03,959
index 500
सूचकांक ५००

75
00:04:03,959 --> 00:04:07,879
value yeah but uh we are actually uh
मूल्य हाँ, लेकिन उह हम वास्तव में उह हैं

76
00:04:07,879 --> 00:04:10,319
just pushing the value beyond the limit
बस सीमा से परे मूल्य को धक्का देना

77
00:04:10,319 --> 00:04:13,560
yeah so is it valid yeah it's valid but
हाँ, तो यह मान्य है हाँ यह मान्य है लेकिन

78
00:04:13,560 --> 00:04:16,519
we'll get an empty items okay okay yeah
हम एक खाली आइटम प्राप्त करेंगे ठीक है ठीक है हाँ

79
00:04:16,519 --> 00:04:18,600
I just wanted to ask like whether it is
मैं सिर्फ यह पूछना चाहता था कि क्या यह है

80
00:04:18,600 --> 00:04:21,199
valid or not yeah it is valid but we'll
मान्य या नहीं, यह मान्य है लेकिन हम करेंगे

81
00:04:21,199 --> 00:04:24,080
get an empty items empty items at yeah
एक खाली आइटम प्राप्त करें खाली आइटम हाँ पर

82
00:04:24,080 --> 00:04:26,600
every position yeah from fifth position
पांचवीं स्थिति से हर स्थिति हाँ

83
00:04:26,600 --> 00:04:28,520
to from 99th position we'll get an empty
99 वें स्थान से हम एक खाली मिलेंगे

84
00:04:28,520 --> 00:04:31,240
items okay and uh in the 100 index we we
आइटम ठीक है और यूएच हम 100 सूचकांक में हम

85
00:04:31,240 --> 00:04:33,639
are assigning 500 so at the 100 index
100 सूचकांक पर 500 असाइन कर रहे हैं

86
00:04:33,639 --> 00:04:36,120
the array will be at the 500 value okay
सरणी 500 मान ठीक है

87
00:04:36,120 --> 00:04:38,639
so remaining all I think it will be
इसलिए मुझे लगता है कि यह सब होगा

88
00:04:38,639 --> 00:04:41,160
filled with an Mt okay okay fine fine
एक mt के साथ भरा ठीक है ठीक है ठीक है

89
00:04:41,160 --> 00:04:45,120
fine fine okay you can comment this all
ठीक है ठीक है आप यह सब टिप्पणी कर सकते हैं

90
00:04:45,120 --> 00:04:49,160
out and write console log
बाहर और कंसोल लॉग लिखें

91
00:04:49,160 --> 00:04:53,199
of okay uh type
ठीक है उह प्रकार

92
00:04:53,360 --> 00:04:57,080
of okay type
ठीक प्रकार का

93
00:04:58,440 --> 00:05:01,639
of okay
ठीक

94
00:05:02,199 --> 00:05:06,280
100 okay and what will be the
100 ठीक है और क्या होगा

95
00:05:06,280 --> 00:05:07,919
output
आउटपुट

96
00:05:07,919 --> 00:05:11,680
okay so here uh type of type of 100 uh
ठीक है तो यहाँ उह प्रकार के 100 उह के प्रकार

97
00:05:11,680 --> 00:05:16,039
actually a type of 100 is a number okay
वास्तव में 100 का एक प्रकार एक संख्या ठीक है

98
00:05:16,039 --> 00:05:18,680
and that number will be printed as a
और उस संख्या को एक के रूप में मुद्रित किया जाएगा

99
00:05:18,680 --> 00:05:21,560
string in the console I guess so we we
कंसोल में स्ट्रिंग मुझे लगता है कि हम तो हम

100
00:05:21,560 --> 00:05:25,000
should get a string as an output because
एक आउटपुट के रूप में एक स्ट्रिंग प्राप्त करना चाहिए क्योंकि

101
00:05:25,000 --> 00:05:28,199
uh if we currently if we for example if
उह अगर हम वर्तमान में यदि हम उदाहरण के लिए अगर

102
00:05:28,199 --> 00:05:30,280
we remove this and if we directly just
हम इसे हटा देते हैं और अगर हम सीधे बस

103
00:05:30,280 --> 00:05:33,199
consol the type of 100 yeah I guess it
100 के प्रकार को सांत्वना देता हूं, मुझे लगता है कि मुझे लगता है

104
00:05:33,199 --> 00:05:35,639
will will uh we we can see the output as
होगा उह हम आउटपुट के रूप में देख सकते हैं

105
00:05:35,639 --> 00:05:38,919
a number okay so again that number uh I
एक संख्या ठीक है तो फिर से उस नंबर uh i

106
00:05:38,919 --> 00:05:40,520
think it will be generated as a string
लगता है कि यह एक स्ट्रिंग के रूप में उत्पन्न होगा

107
00:05:40,520 --> 00:05:42,880
so again uh so the result of this will
तो फिर से उह तो इसका परिणाम होगा

108
00:05:42,880 --> 00:05:45,919
be a number as a string so again we are
एक स्ट्रिंग के रूप में एक संख्या हो तो हम फिर से हैं

109
00:05:45,919 --> 00:05:47,600
just taking the type of a string I think
बस मुझे लगता है कि एक स्ट्रिंग का प्रकार लेना

110
00:05:47,600 --> 00:05:49,319
it will be string sir the output will be
यह स्ट्रिंग सर होगा आउटपुट होगा

111
00:05:49,319 --> 00:05:52,039
string okay okay
स्ट्रिंग ठीक है ठीक है

112
00:05:52,039 --> 00:05:57,080
fine okay you can comment this
ठीक है ठीक है आप यह टिप्पणी कर सकते हैं

113
00:05:57,440 --> 00:06:01,600
out okay write an ARR
ठीक है एक गिरफ्तारी लिखो

114
00:06:01,600 --> 00:06:04,039
right with one element you have to write
एक तत्व के साथ आपको लिखना है

115
00:06:04,039 --> 00:06:09,599
an element as uh write any string you
उह के रूप में एक तत्व आप किसी भी स्ट्रिंग लिखते हैं

116
00:06:10,120 --> 00:06:12,720
want yeah and before that string write
हाँ चाहते हैं और उस स्ट्रिंग लिखने से पहले

117
00:06:12,720 --> 00:06:14,720
triple
ट्रिपल

118
00:06:14,720 --> 00:06:19,880
Dot and on next line print that ARR ER
डॉट और अगली पंक्ति पर प्रिंट उस गिरफ्तार एर

119
00:06:19,880 --> 00:06:23,080
and tell me what will be the
और मुझे बताओ कि क्या होगा

120
00:06:25,759 --> 00:06:29,360
out okay we have assigned a string to an
ठीक है, हमने एक स्ट्रिंग सौंपा है

121
00:06:29,360 --> 00:06:32,840
ARR and we are using this
गिरफ्तारी और हम इसका उपयोग कर रहे हैं

122
00:06:32,960 --> 00:06:35,160
operator I guess the output will be this
ऑपरेटर मुझे लगता है कि आउटपुट यह होगा

123
00:06:35,160 --> 00:06:37,400
only are you
केवल आप हैं

124
00:06:37,400 --> 00:06:41,919
sure I'm not sure but uh so these all so
यकीन है कि मुझे यकीन नहीं है, लेकिन उह इसलिए ये सब

125
00:06:41,919 --> 00:06:44,080
I'm assigning my name to my name here
मैं अपना नाम यहाँ अपना नाम सौंप रहा हूँ

126
00:06:44,080 --> 00:06:47,319
yeah are thinks this entire element was
हाँ लगता है कि यह पूरा तत्व था

127
00:06:47,319 --> 00:06:50,000
only one element okay and we are
केवल एक तत्व ठीक है और हम हैं

128
00:06:50,000 --> 00:06:53,720
currently spreading that element yeah
वर्तमान में उस तत्व को फैला रहा है हाँ

129
00:06:53,720 --> 00:06:55,680
destructuring yeah destructuring only
विनाशकारी हाँ केवल विनाशकारी

130
00:06:55,680 --> 00:06:58,039
that element because see if we uh do
वह तत्व क्योंकि देखें कि क्या हम उह करते हैं

131
00:06:58,039 --> 00:07:00,599
like this for example array might think
उदाहरण के लिए यह सरणी सोच सकता है

132
00:07:00,599 --> 00:07:02,280
a different characters are present in
एक अलग पात्र मौजूद हैं

133
00:07:02,280 --> 00:07:04,840
the array so but we are only assigning
सरणी तो लेकिन हम केवल असाइन कर रहे हैं

134
00:07:04,840 --> 00:07:07,160
the string as as only one element inside
अंदर केवल एक तत्व के रूप में स्ट्रिंग

135
00:07:07,160 --> 00:07:09,879
the array you have a word there yeah
सरणी आपके पास एक शब्द है हाँ हाँ

136
00:07:09,879 --> 00:07:11,360
exactly we have a word here inside the
वास्तव में हमारे यहाँ एक शब्द है

137
00:07:11,360 --> 00:07:13,160
array and we are just restructuring that
सरणी और हम सिर्फ पुनर्गठन कर रहे हैं

138
00:07:13,160 --> 00:07:17,639
array uh I guess uh the output uh yeah
सरणी उह मुझे लगता है कि उह उह हाँ

139
00:07:17,639 --> 00:07:20,960
we we'll get only this as an as a
हम इसे केवल एक के रूप में प्राप्त करेंगे

140
00:07:20,960 --> 00:07:23,560
result okay it can't
परिणाम ठीक है यह नहीं कर सकता

141
00:07:23,560 --> 00:07:25,599
destructure the string can't be
विनाशकारी स्ट्रिंग नहीं हो सकती

142
00:07:25,599 --> 00:07:29,520
destructured me to say yeah because uh
मुझे हाँ कहने के लिए विनाश किया क्योंकि उह

143
00:07:29,520 --> 00:07:32,639
we have only one word here right so I
हमारे पास यहाँ केवल एक शब्द है इसलिए मैं

144
00:07:32,639 --> 00:07:36,000
guess so if we have two elements for
ऐसा लगता है कि अगर हमारे पास दो तत्व हैं

145
00:07:36,000 --> 00:07:39,280
example uh it can be destructured but I
उदाहरण उह इसे विनाश किया जा सकता है लेकिन मैं

146
00:07:39,280 --> 00:07:40,639
I'm not aware whether it can be
मुझे पता नहीं है कि क्या यह हो सकता है

147
00:07:40,639 --> 00:07:42,639
destructured with the one element inside
अंदर एक तत्व के साथ विनाश किया गया

148
00:07:42,639 --> 00:07:46,360
an array okay run
एक सरणी ठीक है

149
00:07:50,080 --> 00:07:56,479
this oh okay yes yes yeah yeah okay do
यह ओह ठीक है हाँ हाँ हाँ ठीक है ठीक है

150
00:07:56,479 --> 00:07:58,240
you know about
आपको इसके बारे में पता है

151
00:07:58,240 --> 00:08:00,199
parent yes
माता -पिता हाँ

152
00:08:00,199 --> 00:08:03,000
what it does like it it basically
यह मूल रूप से इसे पसंद करता है

153
00:08:03,000 --> 00:08:06,879
converts uh into a number okay yeah then
उह को एक संख्या में परिवर्तित करता है ठीक है हाँ

154
00:08:06,879 --> 00:08:10,599
uh write console log
उह कंसोल लॉग लिखें

155
00:08:10,759 --> 00:08:14,159
of okay
ठीक

156
00:08:15,240 --> 00:08:20,360
parent as a string write uh 10 +
एक स्ट्रिंग के रूप में माता -पिता UH 10 + लिखते हैं

157
00:08:20,360 --> 00:08:25,440
2 10 no no inside that one string only
2 10 नहीं, केवल उस एक स्ट्रिंग के अंदर नहीं

158
00:08:25,440 --> 00:08:29,159
10 + 2 uh just copy this pass in console
10 + 2 उह बस कंसोल में इस पास को कॉपी करें

159
00:08:29,159 --> 00:08:32,958
l just copy this yes and again copy this
l बस इस हाँ को कॉपी करें और फिर से इसे कॉपी करें

160
00:08:32,958 --> 00:08:35,958
I will tell you one more okay for second
मैं आपको दूसरे के लिए एक और ठीक बताऊंगा

161
00:08:35,958 --> 00:08:39,000
one write 7
एक लिखें 7

162
00:08:39,679 --> 00:08:43,559
FM here
यहाँ एफएम

163
00:08:44,159 --> 00:08:49,800
yes write it capital if you can yep FM
हाँ, यदि आप fm कर सकते हैं तो इसे कैपिटल लिखें

164
00:08:49,800 --> 00:08:54,920
capital and and and write
राजधानी और और लिखें

165
00:08:57,200 --> 00:09:00,560
m7f and you told me it will be converted
M7F और आपने मुझे बताया कि यह परिवर्तित हो जाएगा

166
00:09:00,560 --> 00:09:03,760
into number okay so now tell me the
संख्या में ठीक है तो अब मुझे बताओ

167
00:09:03,760 --> 00:09:06,640
output of this
इस का उत्पादन

168
00:09:12,800 --> 00:09:15,720
three so we
तीन तो हम

169
00:09:15,720 --> 00:09:19,720
um actually we are uh involving the
उम वास्तव में हम उह शामिल कर रहे हैं

170
00:09:19,720 --> 00:09:22,959
expression inside only one string so
केवल एक स्ट्रिंग के अंदर अभिव्यक्ति

171
00:09:22,959 --> 00:09:26,160
this is not two uh these are strings but
यह दो उह नहीं हैं ये तार हैं लेकिन

172
00:09:26,160 --> 00:09:28,920
these are not a separate strings okay um
ये एक अलग तार नहीं हैं ठीक है उम

173
00:09:28,920 --> 00:09:30,040
we are actually
हम वास्तव में हैं

174
00:09:30,040 --> 00:09:34,040
uh see uh the thing is like uh this is
उह देखो उह बात उह की तरह है

175
00:09:34,040 --> 00:09:35,959
not a two different types of strings
दो अलग -अलग प्रकार के तार नहीं

176
00:09:35,959 --> 00:09:37,519
right so this is not a two strings we
ठीक है तो यह एक दो तार नहीं है

177
00:09:37,519 --> 00:09:39,959
are only uh calculating this expression
केवल इस अभिव्यक्ति की गणना कर रहे हैं

178
00:09:39,959 --> 00:09:42,440
inside one string okay so 10 as a string
एक स्ट्रिंग के अंदर ठीक है तो 10 एक स्ट्रिंग के रूप में

179
00:09:42,440 --> 00:09:46,480
plus as a string two as a string
एक स्ट्रिंग के रूप में एक स्ट्रिंग के रूप में प्लस

180
00:09:46,480 --> 00:09:48,880
so
इसलिए

181
00:09:48,880 --> 00:09:51,839
okay what will
ठीक है क्या होगा

182
00:09:51,839 --> 00:09:54,360
happen so I think it might take the last
इसलिए मुझे लगता है कि यह आखिरी लग सकता है

183
00:09:54,360 --> 00:09:56,720
value I guess it will take the last
मूल्य मुझे लगता है कि यह आखिरी लगेगा

184
00:09:56,720 --> 00:10:01,320
value no no I'm not sure okay
मूल्य नहीं नहीं मुझे यकीन नहीं है ठीक है

185
00:10:01,440 --> 00:10:03,079
yeah that's what I'm saying so okay
हाँ, मैं यही कह रहा हूं कि ठीक है

186
00:10:03,079 --> 00:10:05,279
first one you are not
पहले एक आप नहीं हैं

187
00:10:05,279 --> 00:10:07,720
sure yeah first one I'm not sure but uh
यकीन है कि हाँ पहले एक मुझे यकीन नहीं है, लेकिन उह

188
00:10:07,720 --> 00:10:11,680
I think the remaining two yeah alphabets
मुझे लगता है कि शेष दो हाँ अक्षर

189
00:10:11,680 --> 00:10:13,640
are un through
के माध्यम से संयुक्त राष्ट्र हैं

190
00:10:13,640 --> 00:10:16,120
inv so F
तो एफ

191
00:10:16,120 --> 00:10:19,120
and
और

192
00:10:20,640 --> 00:10:23,880
system can you zoom a little if you can
यदि आप कर सकते हैं तो सिस्टम थोड़ा ज़ूम कर सकता है

193
00:10:23,880 --> 00:10:30,200
a l yeah yep so
एक l हाँ हाँ तो

194
00:10:30,760 --> 00:10:32,720
okay first one you are not sure what
ठीक है पहले आप निश्चित नहीं हैं कि क्या

195
00:10:32,720 --> 00:10:35,399
about second
लगभग दूसरा

196
00:10:36,200 --> 00:10:38,760
one I think we'll get an error for both
मुझे लगता है कि हम दोनों के लिए एक त्रुटि प्राप्त करेंगे

197
00:10:38,760 --> 00:10:41,720
of these cases if I'm not
इन मामलों में से अगर मैं नहीं हूं

198
00:10:41,720 --> 00:10:43,920
wrong okay
गलत

199
00:10:43,920 --> 00:10:47,320
error yeah why because it can't be
त्रुटि हाँ क्यों क्योंकि यह नहीं हो सकता है

200
00:10:47,320 --> 00:10:50,920
converted into integer yeah because yeah
पूर्णांक में परिवर्तित हाँ क्योंकि हाँ

201
00:10:50,920 --> 00:10:53,160
because uh there are strings in Dred in
क्योंकि उह में ड्रेड में तार हैं

202
00:10:53,160 --> 00:10:55,560
this right the string can be converted
यह अधिकार स्ट्रिंग को परिवर्तित किया जा सकता है

203
00:10:55,560 --> 00:10:58,079
into number so but that that string uh
में संख्या में, लेकिन उस स्ट्रिंग उह

204
00:10:58,079 --> 00:11:00,200
should be uh
उह होना चाहिए

205
00:11:00,200 --> 00:11:03,639
convertible to a number because F and so
एक संख्या के लिए परिवर्तनीय क्योंकि f और so

206
00:11:03,639 --> 00:11:06,800
they are not converted into number yeah
वे संख्या हाँ में परिवर्तित नहीं हैं

207
00:11:06,800 --> 00:11:10,839
exactly so if a particular string can't
बिल्कुल ऐसा है अगर कोई विशेष स्ट्रिंग नहीं कर सकता

208
00:11:10,839 --> 00:11:15,480
be converted so you will receive
परिवर्तित हो ताकि आप प्राप्त करेंगे

209
00:11:15,480 --> 00:11:18,680
error not
त्रुटि नहीं

210
00:11:18,680 --> 00:11:21,600
[Music]
[संगीत]

211
00:11:21,600 --> 00:11:25,839
sure so suppose uh if you
अगर आप मान लीजिए तो उह अगर आप

212
00:11:25,839 --> 00:11:29,680
check whether you know is an right
जांचें कि क्या आप जानते हैं कि एक अधिकार है

213
00:11:29,680 --> 00:11:30,760
what's the role
क्या भूमिका है

214
00:11:30,760 --> 00:11:32,440
of
का

215
00:11:32,440 --> 00:11:36,560
so is n n is an N so yeah he is not a
तो n n एक n है तो हाँ वह एक नहीं है

216
00:11:36,560 --> 00:11:39,120
number yes so what it
नंबर हाँ तो यह क्या है

217
00:11:39,120 --> 00:11:41,639
does basically it checks whether the
मूल रूप से यह जांचता है कि क्या

218
00:11:41,639 --> 00:11:44,760
given expression is uh is a spring or
दी गई अभिव्यक्ति उह एक वसंत है या

219
00:11:44,760 --> 00:11:47,880
not basically if we try to access number
मूल रूप से नहीं अगर हम नंबर तक पहुंचने का प्रयास करते हैं

220
00:11:47,880 --> 00:11:50,920
okay okay yeah yeah so if I for example
ठीक है ठीक है हाँ, तो अगर मैं उदाहरण के लिए

221
00:11:50,920 --> 00:11:54,839
if I uh give uh so if I try to give this
अगर मैं उह को उह देता हूं तो अगर मैं इसे देने की कोशिश करता हूं

222
00:11:54,839 --> 00:11:57,680
uh for pass so we might get uh it's not
पास के लिए उह तो हम उह प्राप्त कर सकते हैं यह नहीं है

223
00:11:57,680 --> 00:11:59,800
a number because uh this this expression
एक संख्या क्योंकि यह यह अभिव्यक्ति है

224
00:11:59,800 --> 00:12:01,720
can't be converted to a number and we'll
एक नंबर में परिवर्तित नहीं किया जा सकता है और हम करेंगे

225
00:12:01,720 --> 00:12:04,040
get is's not a number for this
इसके लिए एक संख्या नहीं है

226
00:12:04,040 --> 00:12:07,360
expression okay you will get not a
अभिव्यक्ति ठीक है आपको नहीं मिलेगा

227
00:12:07,360 --> 00:12:10,440
number right he's not a number he's none
संख्या सही वह एक संख्या नहीं है वह कोई नहीं है

228
00:12:10,440 --> 00:12:14,480
is an N so if you put that provin in is
एक n है तो अगर आप उस प्रावन को डालते हैं

229
00:12:14,480 --> 00:12:17,079
an n and you print it so what it will
एक n और आप इसे प्रिंट करते हैं तो यह क्या होगा

230
00:12:17,079 --> 00:12:18,440
you will
आप करेंगे

231
00:12:18,440 --> 00:12:22,720
receive okay write it down is an
ठीक है लिखो यह नीचे लिखो एक है

232
00:12:23,760 --> 00:12:26,760
N don't put there don't that's a
N वहाँ मत डालो यह एक नहीं है

233
00:12:26,760 --> 00:12:27,800
separate
अलग

234
00:12:27,800 --> 00:12:31,519
question okay is a
सवाल ठीक है एक

235
00:12:31,519 --> 00:12:33,680
n okay uh
n ठीक है उह

236
00:12:33,680 --> 00:12:36,639
write
लिखना

237
00:12:36,639 --> 00:12:40,079
Prine and if you put that in console log
प्राइन और यदि आप इसे कंसोल लॉग में डालते हैं

238
00:12:40,079 --> 00:12:42,880
what you will
तुम क्या करोगे

239
00:12:43,519 --> 00:12:46,600
receive don't run it h yeah yeah I'll
प्राप्त मत करो यह हाँ हाँ हाँ मैं हूँ

240
00:12:46,600 --> 00:12:48,800
not answer
नहीं जवाब

241
00:12:48,800 --> 00:12:52,000
yeah we'll get true sir you will receive
हाँ, हम सच मिलेंगे सर आप प्राप्त करेंगे

242
00:12:52,000 --> 00:12:53,680
true
सत्य

243
00:12:53,680 --> 00:12:56,320
so now you can comment this out or you
तो अब आप इस पर टिप्पणी कर सकते हैं या आप

244
00:12:56,320 --> 00:12:59,920
can remove this out okay now what will
अब इसे हटा सकते हैं अब क्या होगा

245
00:12:59,920 --> 00:13:02,399
be the second what do you think you will
दूसरा हो जो आपको लगता है कि आप करेंगे

246
00:13:02,399 --> 00:13:05,959
receive error or if you try to convert
त्रुटि प्राप्त करें या यदि आप परिवर्तित करने का प्रयास करते हैं

247
00:13:05,959 --> 00:13:10,360
into a number it may not receive number
एक संख्या में इसे संख्या प्राप्त नहीं हो सकती है

248
00:13:10,360 --> 00:13:12,199
yeah because
हाँ क्योंकि

249
00:13:12,199 --> 00:13:16,120
F so if you can't convert it into a
F तो यदि आप इसे एक में परिवर्तित नहीं कर सकते हैं

250
00:13:16,120 --> 00:13:19,240
number then you will receive error or
नंबर तो आपको त्रुटि प्राप्त होगी या

251
00:13:19,240 --> 00:13:21,920
you may receive not a
आप प्राप्त नहीं कर सकते

252
00:13:21,920 --> 00:13:25,000
number yeah will get not a he he's not a
संख्या हाँ, वह नहीं मिलेगा वह एक नहीं है

253
00:13:25,000 --> 00:13:29,120
number he's n is an is a function where
संख्या वह n एक है एक फ़ंक्शन है जहां

254
00:13:29,120 --> 00:13:31,240
no no no we'll get not a number and then
नहीं नहीं नहीं हम एक नंबर नहीं मिलेंगे और फिर

255
00:13:31,240 --> 00:13:34,920
not a number so I'm not saying whether
कोई नंबर नहीं इसलिए मैं यह नहीं कह रहा हूं कि क्या

256
00:13:34,920 --> 00:13:37,520
you will receive uh this
आप इसे प्राप्त करेंगे

257
00:13:37,520 --> 00:13:39,160
[Music]
[संगीत]

258
00:13:39,160 --> 00:13:42,839
two n like it it won't receive a number
दो n जैसे यह एक नंबर प्राप्त नहीं करेगा

259
00:13:42,839 --> 00:13:46,399
I'm not saying but if you're saying that
मैं नहीं कह रहा हूँ, लेकिन अगर आप ऐसा कह रहे हैं

260
00:13:46,399 --> 00:13:49,160
you won't be able to receive the integer
आप पूर्णांक प्राप्त करने में सक्षम नहीं होंगे

261
00:13:49,160 --> 00:13:50,480
or a
या एक

262
00:13:50,480 --> 00:13:53,320
number yeah because see only seven is
संख्या हाँ क्योंकि केवल सात देखें

263
00:13:53,320 --> 00:13:55,519
involved it can be converted to number
इसमें शामिल इसे संख्या में परिवर्तित किया जा सकता है

264
00:13:55,519 --> 00:13:57,399
so I'm not talking about seven so coming
इसलिए मैं सात के आने के बारे में बात नहीं कर रहा हूं

265
00:13:57,399 --> 00:14:00,120
to talking coming to this F
इस च के पास आने के लिए

266
00:14:00,120 --> 00:14:03,680
and M so this cannot be converted into a
और एम तो यह एक में परिवर्तित नहीं किया जा सकता है

267
00:14:03,680 --> 00:14:06,000
number right so in that case what we
उस मामले में सही संख्या तो हम क्या करते हैं

268
00:14:06,000 --> 00:14:07,519
what what will be the output your asking
आपके पूछने का आउटपुट क्या होगा

269
00:14:07,519 --> 00:14:10,880
right yes you told me that it won't be
ठीक है हाँ तुमने मुझसे कहा था कि यह नहीं होगा

270
00:14:10,880 --> 00:14:13,720
able to convert into a number and you
एक नंबर और आप में परिवर्तित करने में सक्षम

271
00:14:13,720 --> 00:14:15,880
won't receive a number and that's why
एक नंबर प्राप्त नहीं होगा और इसीलिए

272
00:14:15,880 --> 00:14:19,360
you will receive error so what I wanted
आपको त्रुटि मिलेगी तो मैं क्या चाहता था

273
00:14:19,360 --> 00:14:22,399
to say is if you won't be able to
यह कहना है कि क्या आप नहीं कर पाएंगे

274
00:14:22,399 --> 00:14:25,680
convert into a number so it will receive
एक संख्या में परिवर्तित करें ताकि यह प्राप्त होगा

275
00:14:25,680 --> 00:14:26,600
an
एक

276
00:14:26,600 --> 00:14:29,880
N yeah okay so
N हाँ ठीक है तो

277
00:14:29,880 --> 00:14:32,000
but I'm not saying that it won't receive
लेकिन मैं यह नहीं कह रहा हूं कि यह प्राप्त नहीं होगा

278
00:14:32,000 --> 00:14:35,360
the number or not but as you told that
संख्या या नहीं, लेकिन जैसा कि आपने बताया था कि

279
00:14:35,360 --> 00:14:38,920
it won't receive a number so the
यह एक नंबर प्राप्त नहीं करेगा इसलिए

280
00:14:38,920 --> 00:14:42,079
resultant of that of not receiving a
परिणाम प्राप्त नहीं करने के परिणामस्वरूप

281
00:14:42,079 --> 00:14:46,759
number will be NN I wanted to say but
संख्या ऐसा होगा जो मैं कहना चाहता था लेकिन

282
00:14:46,759 --> 00:14:49,040
you were saying error but I wanted to
आप त्रुटि कह रहे थे लेकिन मैं चाहता था

283
00:14:49,040 --> 00:14:53,519
rectify that you will receive n now it's
सुधार करें कि आप अब n प्राप्त करेंगे

284
00:14:53,519 --> 00:14:55,399
up to you whether it will receive a
आपके ऊपर यह क्या प्राप्त होगा

285
00:14:55,399 --> 00:14:58,880
number or not you can tell me no because
नंबर या नहीं आप मुझे नहीं बता सकते हैं क्योंकि

286
00:14:58,880 --> 00:15:02,120
uh see if we for example if we try to
उह देखें कि क्या हम उदाहरण के लिए अगर हम करने की कोशिश करते हैं

287
00:15:02,120 --> 00:15:05,040
use parcent and if we give uh any value
Parcent का उपयोग करें और यदि हम उह कोई मूल्य देते हैं

288
00:15:05,040 --> 00:15:08,040
inside that parent parcent price to
उस माता -पिता की कीमत के अंदर

289
00:15:08,040 --> 00:15:10,480
convert the entire value into the number
संपूर्ण मान को संख्या में परिवर्तित करें

290
00:15:10,480 --> 00:15:12,759
or it gives a name because here seven
या यह एक नाम देता है क्योंकि यहाँ सात

291
00:15:12,759 --> 00:15:15,000
can be converted okay but F and N can't
ठीक किया जा सकता है ठीक है, लेकिन f और n नहीं कर सकते

292
00:15:15,000 --> 00:15:16,759
be converted so in this case we might
इस मामले में परिवर्तित हो सकता है

293
00:15:16,759 --> 00:15:18,079
get
पाना

294
00:15:18,079 --> 00:15:19,680
NN
एनएन

295
00:15:19,680 --> 00:15:22,560
okay okay and the third
ठीक है ठीक है और तीसरा

296
00:15:22,560 --> 00:15:25,440
one yeah third one is also same I guess
एक हाँ तीसरा भी एक ही है मुझे लगता है

297
00:15:25,440 --> 00:15:28,680
okay so second and third one will be NN
ठीक है तो दूसरा और तीसरा एक एनएन होगा

298
00:15:28,680 --> 00:15:30,680
okay and the first
ठीक है और पहला

299
00:15:30,680 --> 00:15:33,959
one yeah first one that's what not sure
एक हाँ पहले एक है कि क्या यकीन नहीं है

300
00:15:33,959 --> 00:15:36,680
yeah yeah I'm not sure okay
हाँ, मुझे यकीन नहीं है ठीक है

301
00:15:36,680 --> 00:15:40,920
so okay you can run this
तो ठीक है आप इसे चला सकते हैं

302
00:15:41,319 --> 00:15:46,519
out you can pull your terminal a bit up
बाहर आप अपने टर्मिनल को थोड़ा ऊपर खींच सकते हैं

303
00:15:46,519 --> 00:15:51,480
if you want you can drag s 10 79 yep
यदि आप चाहें तो आप S 10 79 YEP खींच सकते हैं

304
00:15:51,480 --> 00:15:54,160
okay yeah so I think it is just taking
ठीक है, तो मुझे लगता है कि यह सिर्फ ले रहा है

305
00:15:54,160 --> 00:15:56,800
the first values but what about the
पहले मान लेकिन क्या के बारे में

306
00:15:56,800 --> 00:15:59,880
second and third
दूसरा और तीसरा

307
00:15:59,880 --> 00:16:02,720
what's happening there yeah because see
क्या हो रहा है हाँ क्योंकि देखें

308
00:16:02,720 --> 00:16:05,720
now I got the uh now I got a clear bit
अब मुझे उह मिल गया

309
00:16:05,720 --> 00:16:09,000
idea yeah so uh uh previously I was
विचार हाँ तो उह उह पहले मैं था

310
00:16:09,000 --> 00:16:11,000
saying it might take the last value
यह कहते हुए कि यह अंतिम मूल्य ले सकता है

311
00:16:11,000 --> 00:16:13,560
right so in this case it is just trying
ठीक है तो इस मामले में यह सिर्फ कोशिश कर रहा है

312
00:16:13,560 --> 00:16:15,720
to access the first value so the first
पहले मान का उपयोग करने के लिए तो पहला

313
00:16:15,720 --> 00:16:18,240
digit is 10 here the first digit is
अंक 10 है यहाँ पहला अंक है

314
00:16:18,240 --> 00:16:20,959
seven yes so it is directly accessing
सात हाँ तो यह सीधे एक्सेस कर रहा है

315
00:16:20,959 --> 00:16:22,639
these both numbers and converting into a
ये दोनों संख्याएँ और एक में परिवर्तित हो रहे हैं

316
00:16:22,639 --> 00:16:25,279
number yes but in this case the M cannot
संख्या हाँ, लेकिन इस मामले में एम नहीं कर सकता

317
00:16:25,279 --> 00:16:27,519
be converted because the m is placed at
परिवर्तित हो क्योंकि m पर रखा गया है

318
00:16:27,519 --> 00:16:29,360
the starting right but in said that
शुरुआती अधिकार लेकिन कहा गया है कि

319
00:16:29,360 --> 00:16:31,839
there is seven right so yeah ins said
वहाँ सात सही है तो हाँ ins कहा कहा

320
00:16:31,839 --> 00:16:35,759
that so if if the first value I think if
ऐसा है कि अगर पहला मूल्य मुझे लगता है कि अगर

321
00:16:35,759 --> 00:16:37,240
the first value cannot be converted into
पहले मान को में परिवर्तित नहीं किया जा सकता है

322
00:16:37,240 --> 00:16:39,519
a number it it may give a name so the
एक संख्या यह एक नाम दे सकती है

323
00:16:39,519 --> 00:16:41,880
result yeah ised like that only here
परिणाम हाँ केवल यहाँ की तरह है

324
00:16:41,880 --> 00:16:43,600
okay yeah that that
ठीक है हाँ कि

325
00:16:43,600 --> 00:16:47,199
was yeah now I got a bit idea because
हाँ, अब मुझे थोड़ा विचार मिला क्योंकि

326
00:16:47,199 --> 00:16:49,199
previously I was thinking it might take
पहले मैं सोच रहा था कि यह ले सकता है

327
00:16:49,199 --> 00:16:51,720
the last value yeah so I'm wrong I'm
अंतिम मूल्य हाँ तो मैं गलत हूँ

328
00:16:51,720 --> 00:16:53,199
wrong with that it is taking the first
गलत है कि यह पहला ले रहा है

329
00:16:53,199 --> 00:16:55,160
value and it is whether that can be
मूल्य और यह है कि क्या हो सकता है

330
00:16:55,160 --> 00:16:57,639
converted into a number so if it is it
एक संख्या में परिवर्तित हो जाता है तो यह है

331
00:16:57,639 --> 00:16:59,639
may print the number so if not but it
संख्या प्रिंट कर सकते हैं तो नहीं, लेकिन यह नहीं है

332
00:16:59,639 --> 00:17:01,839
won't go to the remaining num so it only
शेष संख्या में नहीं जाएगा इसलिए यह केवल

333
00:17:01,839 --> 00:17:04,079
checks the first yeah okay you got it
पहले हाँ ठीक है, आपको मिल गया

334
00:17:04,079 --> 00:17:07,160
okay you can comment this
ठीक है आप यह टिप्पणी कर सकते हैं

335
00:17:09,439 --> 00:17:12,799
out okay uh write a console
ठीक है उह एक कंसोल लिखें

336
00:17:12,799 --> 00:17:17,880
log okay and inside that uh write an
ठीक है और उस उह के अंदर एक लिखें

337
00:17:17,880 --> 00:17:20,439
array whatever elements you want you can
आप जो भी तत्व चाहते हैं, उसे सरणी कर सकते हैं

338
00:17:20,439 --> 00:17:23,280
write three elements whatever yep okay
जो भी ठीक है, तीन तत्व लिखें

339
00:17:23,280 --> 00:17:27,039
fine uh do map apply this
ठीक है उह मानचित्र इसे लागू करें

340
00:17:27,039 --> 00:17:29,600
map do map
नक्शा मानचित्र

341
00:17:29,600 --> 00:17:33,679
uh write for
उह के लिए लिखो

342
00:17:33,679 --> 00:17:35,520
number
संख्या

343
00:17:35,520 --> 00:17:38,280
number uh
नंबर उह

344
00:17:38,280 --> 00:17:41,919
write if number greater
यदि संख्या अधिक हो तो लिखें

345
00:17:41,919 --> 00:17:44,559
than
बजाय

346
00:17:44,559 --> 00:17:46,480
zero
शून्य

347
00:17:46,480 --> 00:17:50,520
okay y uh and on the next line right
ठीक है y उह और अगली पंक्ति पर दाईं ओर

348
00:17:50,520 --> 00:17:53,919
return return num into
वापसी संख्या में वापसी

349
00:17:54,440 --> 00:17:59,880
two n into do okay and and and yep uh
दो n में ठीक है और और yep उह

350
00:17:59,880 --> 00:18:02,200
tell me what will be the output and why
मुझे बताएं कि आउटपुट क्या होगा और क्यों होगा

351
00:18:02,200 --> 00:18:06,640
yeah uh so uh see map basically uh gives
हाँ उह तो उह देखें मानचित्र मूल रूप से उह देता है

352
00:18:06,640 --> 00:18:09,679
a separate array so uh it will give the
एक अलग सरणी तो उह यह देगा

353
00:18:09,679 --> 00:18:12,600
another array so we are checking uh we
एक और सरणी तो हम उह की जाँच कर रहे हैं

354
00:18:12,600 --> 00:18:14,240
have one and two inside this array and
इस सरणी के अंदर एक और दो हैं और

355
00:18:14,240 --> 00:18:17,000
we are just mapping so if this each
हम सिर्फ मैपिंग कर रहे हैं अगर यह प्रत्येक

356
00:18:17,000 --> 00:18:19,159
element is greater than zero we are
तत्व शून्य से अधिक है हम हैं

357
00:18:19,159 --> 00:18:22,640
returning nothing so if this condition
अगर यह हालत है तो कुछ भी नहीं कर रहा है

358
00:18:22,640 --> 00:18:25,360
is false we are just multiplying the
क्या झूठ है हम सिर्फ गुणा कर रहे हैं

359
00:18:25,360 --> 00:18:28,280
number with two so because this this
दो के साथ नंबर इसलिए क्योंकि यह यह है

360
00:18:28,280 --> 00:18:30,080
condition is true we won't get anything
शर्त सच है हमें कुछ भी नहीं मिलेगा

361
00:18:30,080 --> 00:18:33,200
as output because this condition is
आउटपुट के रूप में क्योंकि यह स्थिति है

362
00:18:33,200 --> 00:18:36,039
true okay so this condition is true we
सच है ठीक है तो यह स्थिति सच है

363
00:18:36,039 --> 00:18:38,360
we are returning nothing here so if this
हम यहाँ कुछ भी नहीं कर रहे हैं तो अगर यह

364
00:18:38,360 --> 00:18:40,000
is false we are returning number into
क्या झूठ है हम नंबर लौट रहे हैं

365
00:18:40,000 --> 00:18:44,280
two okay so because see one and two are
दो ठीक है क्योंकि एक और दो देखें

366
00:18:44,280 --> 00:18:47,200
greater than zero at any yeah so this
किसी भी हाँ में शून्य से अधिक है तो यह

367
00:18:47,200 --> 00:18:49,840
condition will always false yeah so this
हालत हमेशा झूठी होगी हाँ तो यह

368
00:18:49,840 --> 00:18:51,360
is true we are nothing we are rning
क्या सच है हम कुछ भी नहीं हैं हम rning हैं

369
00:18:51,360 --> 00:18:54,720
nothing so we are just empty so if this
कुछ भी नहीं तो हम बस खाली हैं तो अगर यह

370
00:18:54,720 --> 00:18:56,400
condition is f it will go to the next
हालत एफ है यह अगले पर जाएगा

371
00:18:56,400 --> 00:18:58,200
line and it may print the number into
लाइन और यह संख्या को प्रिंट कर सकता है

372
00:18:58,200 --> 00:19:02,200
two okay so what will be the output now
दो ठीक है तो अब आउटपुट क्या होगा

373
00:19:02,200 --> 00:19:04,679
nothing we won anything sir so empty
कुछ भी नहीं हम कुछ भी जीता सर इतना खाली

374
00:19:04,679 --> 00:19:07,640
console I okay so if it doesn't return
कंसोल मैं ठीक है तो अगर यह वापस नहीं आता है

375
00:19:07,640 --> 00:19:10,159
anything so it will receive empty you
कुछ भी तो यह आपको खाली प्राप्त करेगा

376
00:19:10,159 --> 00:19:12,520
mean to
का मतलब

377
00:19:12,679 --> 00:19:17,280
say it doesn't return anything then
कहते हैं कि यह कुछ भी वापस नहीं करता है

378
00:19:17,280 --> 00:19:20,240
tried so you told me empty it will
कोशिश की तो तुमने मुझे खाली कहा यह होगा

379
00:19:20,240 --> 00:19:23,600
remain empty you understand yeah yeah
खाली रहें आप हाँ समझते हैं हाँ

380
00:19:23,600 --> 00:19:24,679
okay
ठीक है

381
00:19:24,679 --> 00:19:28,400
so okay there a question just hold on
तो ठीक है वहाँ एक सवाल बस पर पकड़

382
00:19:28,400 --> 00:19:30,840
just hold on you you can commment this
बस आप पर पकड़ आप इसे पूरा कर सकते हैं

383
00:19:30,840 --> 00:19:35,200
out yeah we will come to this and uh
हाँ, हम इस और उह के पास आएंगे

384
00:19:35,200 --> 00:19:36,760
write write a
लिखें लिखें

385
00:19:36,760 --> 00:19:42,520
function one second okay write any
एक सेकंड ठीक है किसी भी लिखें

386
00:19:42,640 --> 00:19:45,200
function okay and
कार्य ठीक है और

387
00:19:45,200 --> 00:19:47,520
write
लिखना

388
00:19:47,520 --> 00:19:53,039
return okay that's it and uh call this
ठीक है ठीक है कि यह है और उह इसे कॉल करें

389
00:19:53,039 --> 00:19:55,480
function and what you will receive the
कार्य और आप क्या प्राप्त करेंगे

390
00:19:55,480 --> 00:20:00,640
output WR conso one okay
आउटपुट wr conso एक ठीक है

391
00:20:02,360 --> 00:20:06,000
contr yeah okay
conty हाँ ठीक है

392
00:20:06,000 --> 00:20:10,200
yeah okay so this is a function and we
हाँ ठीक है तो यह एक समारोह है और हम

393
00:20:10,200 --> 00:20:12,640
are ning nothing else we might get
क्या हमें कुछ और नहीं मिल सकता है

394
00:20:12,640 --> 00:20:14,960
undefined sir
अपरिभाषित सर

395
00:20:14,960 --> 00:20:18,679
so so here it is returning nothing thing
तो यहाँ यह कुछ भी नहीं लौट रहा है

396
00:20:18,679 --> 00:20:20,200
and you are saying
और आप कह रहे हो

397
00:20:20,200 --> 00:20:23,159
undefined yeah yeah I guess see uh
अपरिभाषित हाँ हाँ मुझे लगता है कि उह देखें

398
00:20:23,159 --> 00:20:24,880
basically this is also a function right
मूल रूप से यह भी एक फ़ंक्शन सही है

399
00:20:24,880 --> 00:20:27,679
so yeah we might get undefined sir I'm
तो हाँ, हम अपरिभाषित सर हो सकते हैं

400
00:20:27,679 --> 00:20:29,440
sorry I'm sorry for that here also we
क्षमा करें, मुझे इसके लिए खेद है कि यहाँ भी हम

401
00:20:29,440 --> 00:20:32,520
might get undefined undefined are you
अपरिभाषित अपरिभाषित हो सकते हैं आप हैं

402
00:20:32,520 --> 00:20:34,960
sure because yeah yeah undefined yeah
यकीन है क्योंकि हाँ हाँ अपरिभाषित हाँ

403
00:20:34,960 --> 00:20:37,799
I'm sure okay so here in function you
मुझे यकीन है कि ठीक है तो यहाँ आप समारोह में हैं

404
00:20:37,799 --> 00:20:40,960
will receive undefined that because we
अपरिभाषित प्राप्त होगा क्योंकि हम

405
00:20:40,960 --> 00:20:42,600
are not rning any kind of thing right so
किसी भी तरह की बात नहीं है

406
00:20:42,600 --> 00:20:45,000
we are not rning anything so you will
हम कुछ भी नहीं कर रहे हैं इसलिए आप करेंगे

407
00:20:45,000 --> 00:20:48,720
rece we might get yeah okay okay you can
प्राप्ति हम हाँ ठीक हो सकते हैं ठीक है आप कर सकते हैं

408
00:20:48,720 --> 00:20:51,400
remove this out
इसे हटा दें

409
00:20:51,400 --> 00:20:54,600
then okay
फिर ठीक

410
00:20:54,600 --> 00:20:57,679
okay now you will receive what only
ठीक है अब आप केवल क्या प्राप्त करेंगे

411
00:20:57,679 --> 00:21:00,240
undefined that that's
अपरिभाषित कि यह है

412
00:21:00,240 --> 00:21:04,480
it undefined is a falsy value so if we
यह अपरिभाषित एक मिथ्या मूल्य है इसलिए अगर हम

413
00:21:04,480 --> 00:21:07,080
console. log undefined undefined is a
सांत्वना देना। लॉग अपरिभाषित अपरिभाषित एक है

414
00:21:07,080 --> 00:21:12,039
falsy Val so we might get false you will
गलत वैल इसलिए हम झूठे हो सकते हैं

415
00:21:12,039 --> 00:21:14,559
get the result okay yeah we'll get a
परिणाम प्राप्त करें ठीक है हाँ हम एक प्राप्त करेंगे

416
00:21:14,559 --> 00:21:18,360
result uh for sure we we might
परिणाम उह सुनिश्चित करें कि हम कर सकते हैं

417
00:21:18,360 --> 00:21:21,640
get so the code uh this condition is
इस शर्त को पूरा करें

418
00:21:21,640 --> 00:21:23,440
true we are returning
सच है कि हम लौट रहे हैं

419
00:21:23,440 --> 00:21:26,120
nothing yes sir we might get undefined
कुछ नहीं हाँ सर हम अपरिभाषित हो सकते हैं

420
00:21:26,120 --> 00:21:27,520
only
केवल

421
00:21:27,520 --> 00:21:31,520
one are you sure like only
क्या आप निश्चित हैं जैसे केवल

422
00:21:32,159 --> 00:21:34,080
undefined can you show me in the
अपरिभाषित आप मुझे दिखा सकते हैं

423
00:21:34,080 --> 00:21:36,880
comments what you will receive and then
टिप्पणियाँ क्या आप प्राप्त करेंगे और फिर

424
00:21:36,880 --> 00:21:37,559
I
मैं

425
00:21:37,559 --> 00:21:42,440
can so see basically uh we just the
तो मूल रूप से उह हम बस देख सकते हैं

426
00:21:42,440 --> 00:21:43,679
checking the whether the number is
क्या संख्या है की जाँच करना

427
00:21:43,679 --> 00:21:46,400
greater than zero so if that is if the
शून्य से अधिक तो अगर वह है तो

428
00:21:46,400 --> 00:21:47,799
if the number is greater than zero we
यदि संख्या शून्य से अधिक है तो हम

429
00:21:47,799 --> 00:21:50,520
are rning nothing okay nothing yeah so
कुछ भी नहीं ठीक है कुछ भी नहीं तो हाँ

430
00:21:50,520 --> 00:21:53,080
yeah if this condition is false the this
हाँ, अगर यह स्थिति गलत है

431
00:21:53,080 --> 00:21:56,480
statement might get printed but this
बयान मुद्रित हो सकता है लेकिन यह

432
00:21:56,480 --> 00:22:00,520
condition is true yeah in this case
इस मामले में शर्त सच है

433
00:22:02,200 --> 00:22:03,720
you might
आप शायद

434
00:22:03,720 --> 00:22:07,240
get returning
वापस आ जाना

435
00:22:07,720 --> 00:22:10,520
nothing for this what you will receive
इसके लिए कुछ भी नहीं जो आप प्राप्त करेंगे

436
00:22:10,520 --> 00:22:13,919
output yeah for this line for this line
इस लाइन के लिए इस लाइन के लिए आउटपुट हाँ

437
00:22:13,919 --> 00:22:17,679
no I want full console okay okay okay
नहीं, मैं पूर्ण कंसोल चाहता हूँ ठीक है ठीक है

438
00:22:17,679 --> 00:22:19,919
okay yeah yeah this line won't get
ठीक है हाँ, यह लाइन नहीं मिलेगी

439
00:22:19,919 --> 00:22:22,760
executed so we can just leave this line
निष्पादित तो हम बस इस लाइन को छोड़ सकते हैं

440
00:22:22,760 --> 00:22:26,159
so for this console
तो इस कंसोल के लिए

441
00:22:26,159 --> 00:22:30,679
DOL we returning nothing we might
हम कुछ भी नहीं कर सकते हैं

442
00:22:30,679 --> 00:22:34,640
get see first I thought uh we might get
पहले देखो मैंने सोचा कि उह हमें मिल सकता है

443
00:22:34,640 --> 00:22:38,000
an empty console
एक खाली कंसोल

444
00:22:41,039 --> 00:22:47,679
or okay I may EAS you out okay the array
या ठीक है मैं आपको ठीक कर सकता हूँ ठीक है सरणी

445
00:22:47,679 --> 00:22:48,919
has two
दो है

446
00:22:48,919 --> 00:22:53,799
elements okay okay what map will
तत्व ठीक है ठीक है क्या नक्शा होगा

447
00:22:53,799 --> 00:22:56,600
do it gives an another array it won't
क्या यह एक और सरणी देता है यह नहीं होगा

448
00:22:56,600 --> 00:22:59,400
mutate the original array map basically
मूल सरणी मानचित्र को मूल रूप से म्यूट करें

449
00:22:59,400 --> 00:23:02,559
tries to uh create an another array of
UH की कोशिश करता है एक और सरणी बनाने की कोशिश करता है

450
00:23:02,559 --> 00:23:06,559
that okay so on the first element what
यह ठीक है कि पहले तत्व पर क्या है

451
00:23:06,559 --> 00:23:08,840
it will happen it will return if num
यह होगा यदि यह संख्या वापस आ जाएगी

452
00:23:08,840 --> 00:23:12,080
greater than zero first it will take one
पहले शून्य से अधिक यह एक ले जाएगा

453
00:23:12,080 --> 00:23:13,760
yeah it will take one and it Compares
हाँ, यह एक ले जाएगा और यह तुलना करता है

454
00:23:13,760 --> 00:23:17,200
with zero zero greater than zero and it
शून्य शून्य से अधिक शून्य से अधिक है और यह

455
00:23:17,200 --> 00:23:18,720
will return
वापसी करेंगे

456
00:23:18,720 --> 00:23:20,400
nothing
कुछ नहीं

457
00:23:20,400 --> 00:23:25,080
yeah then that's it or
हाँ तो यह है या

458
00:23:25,080 --> 00:23:27,880
like only for the first element it will
केवल पहले तत्व के लिए यह होगा

459
00:23:27,880 --> 00:23:30,159
happen
होना

460
00:23:30,159 --> 00:23:32,880
no it checks for the entire number so
नहीं, यह पूरे नंबर के लिए जाँच करता है

461
00:23:32,880 --> 00:23:36,600
what now there are two elements I told
अब मैंने दो तत्वों को बताया है

462
00:23:36,600 --> 00:23:39,360
you that we might get one and two one
आप कि हमें एक और दो मिल सकते हैं

463
00:23:39,360 --> 00:23:40,159
and
और

464
00:23:40,159 --> 00:23:44,799
two no we might get this uh this array
दो नहीं, हम इस सरणी को यह उह प्राप्त कर सकते हैं

465
00:23:46,360 --> 00:23:49,520
right are
अधिकार हैं

466
00:23:51,159 --> 00:23:54,720
you greater than zero
आप शून्य से अधिक

467
00:23:54,720 --> 00:23:59,320
return return true true
रिटर्न ट्रू रिटर्न ट्रू

468
00:23:59,320 --> 00:24:03,919
you told me undefined right
आपने मुझे अपरिभाषित अधिकार बताया

469
00:24:04,039 --> 00:24:08,000
yeah so I told you undefined
हाँ तो मैंने आपको अपरिभाषित बताया

470
00:24:08,000 --> 00:24:11,559
yeah you are nearer but tell me the
हाँ, तुम निकट हो, लेकिन मुझे बताओ

471
00:24:11,559 --> 00:24:16,120
exact output now yeah undefined so if we
सटीक आउटपुट अब हाँ अपरिभाषित है तो हम

472
00:24:16,120 --> 00:24:18,480
go a little bit deep undefined is
थोड़ा गहराई से अपरिभाषित है

473
00:24:18,480 --> 00:24:21,480
considered as a faly value so faly is
माना जाता है कि एक मूल्य के रूप में माना जाता है

474
00:24:21,480 --> 00:24:24,159
zero nothing
शून्य कुछ भी नहीं

475
00:24:24,159 --> 00:24:26,039
but I'm
लेकिन मैं कर रहा हूँ

476
00:24:26,039 --> 00:24:28,880
not but we must get under Define because
नहीं, लेकिन हमें परिभाषित होना चाहिए क्योंकि

477
00:24:28,880 --> 00:24:30,919
we are not returning anything inide this
हम इसमें से कुछ भी नहीं लौटा रहे हैं

478
00:24:30,919 --> 00:24:34,200
yeah so
हां ऐसा

479
00:24:34,600 --> 00:24:38,159
yeah Define there are two elements that
हाँ परिभाषित करें दो तत्व हैं जो हैं

480
00:24:38,159 --> 00:24:43,360
I can say so if you undef UND yes
मैं ऐसा कह सकता हूं यदि आप undef undef YES

481
00:24:43,360 --> 00:24:48,039
yes undefined actually was yeah yeah it
हाँ अपरिभाषित वास्तव में हाँ यह हाँ था

482
00:24:48,039 --> 00:24:50,960
was undefined undefined yeah yeah so
अपरिभाषित अपरिभाषित हाँ हाँ तो

483
00:24:50,960 --> 00:24:53,480
we'll get the undefined printed same
हम अपरिभाषित मुद्रित समान होंगे

484
00:24:53,480 --> 00:24:55,200
equal to the length of the array right
सरणी की लंबाई के बराबर सही

485
00:24:55,200 --> 00:24:56,880
yeah
हाँ

486
00:24:56,880 --> 00:25:00,600
so no it will loop on each map will
तो नहीं यह प्रत्येक मानचित्र पर लूप होगा

487
00:25:00,600 --> 00:25:03,240
iterate on each yeah yeah exactly yeah
प्रत्येक हाँ, हाँ बिल्कुल हाँ

488
00:25:03,240 --> 00:25:05,960
it works same as a 4 each Loop
यह 4 प्रत्येक लूप के रूप में काम करता है

489
00:25:05,960 --> 00:25:08,919
yeah another another array but for won't
हाँ एक और सरणी लेकिन के लिए नहीं होगा

490
00:25:08,919 --> 00:25:11,200
for mutates the original array but map
मूल सरणी को म्यूट करने के लिए लेकिन नक्शा

491
00:25:11,200 --> 00:25:12,840
won't mutate the original array yeah
मूल सरणी हाँ को म्यूट नहीं करेंगे

492
00:25:12,840 --> 00:25:15,880
yeah okay
हाँ ठीक है

493
00:25:15,880 --> 00:25:18,600
fine okay write a
ठीक है ठीक है लिखो

494
00:25:18,600 --> 00:25:21,600
function
समारोह

495
00:25:21,840 --> 00:25:25,720
okay and write console log of whatever
ठीक है और जो भी हो का कंसोल लॉग लिखें

496
00:25:25,720 --> 00:25:29,200
you want XY Z yeah you can write
आप चाहते हैं कि XY Z हाँ आप लिख सकते हैं

497
00:25:29,200 --> 00:25:33,000
yep okay okay and write it in scope now
हाँ ठीक है ठीक है और इसे अब दायरे में लिखें

498
00:25:33,000 --> 00:25:36,000
write this function in
में इस फ़ंक्शन को लिखें

499
00:25:37,200 --> 00:25:39,960
scope how you saying sir I'm sorry like
गुंजाइश कैसे आप कह रहे हैं सर मुझे क्षमा करें

500
00:25:39,960 --> 00:25:42,520
how you written console log of proven in
आपने कैसे कंसोल लॉग ऑफ प्रोवेन लिखा है

501
00:25:42,520 --> 00:25:45,520
scope right similar function in
में सही समान कार्य

502
00:25:45,520 --> 00:25:48,159
scope okay you're trying to access this
स्कोप ठीक है आप इसे एक्सेस करने की कोशिश कर रहे हैं

503
00:25:48,159 --> 00:25:50,559
function another inside the another
दूसरे के अंदर एक और कार्य करें

504
00:25:50,559 --> 00:25:54,039
function no no no no no right Li okay
फ़ंक्शन नहीं नहीं नहीं नहीं नहीं सही ली ठीक है

505
00:25:54,039 --> 00:25:56,120
block scope okay block scope okay yes
ब्लॉक स्कोप ओके ब्लॉक स्कोप ठीक है हाँ

506
00:25:56,120 --> 00:25:59,120
yes
हाँ

507
00:25:59,320 --> 00:26:02,120
okay and yeah just call it outside and
ठीक है और हाँ बस इसे बाहर बुलाओ और

508
00:26:02,120 --> 00:26:04,960
tell me what will be the
मुझे बताओ कि क्या होगा

509
00:26:04,960 --> 00:26:09,200
output just call it
आउटपुट बस इसे कॉल करें

510
00:26:10,320 --> 00:26:13,799
nothing tell me what will be the
कुछ भी नहीं मुझे बताओ कि क्या होगा

511
00:26:13,799 --> 00:26:16,440
output I think we might get our function
आउटपुट मुझे लगता है कि हम अपना कार्य प्राप्त कर सकते हैं

512
00:26:16,440 --> 00:26:19,799
AB C is not
एब सी नहीं है

513
00:26:19,799 --> 00:26:24,080
declared because uh it is written inside
घोषित किया गया क्योंकि उह इसे अंदर लिखा गया है

514
00:26:24,080 --> 00:26:26,279
the function so this function has a high
फ़ंक्शन तो इस फ़ंक्शन में एक उच्च है

515
00:26:26,279 --> 00:26:28,679
priority inside the block scope and we
ब्लॉक स्कोप के अंदर प्राथमिकता और हम

516
00:26:28,679 --> 00:26:30,240
are accessing the function inside
अंदर फ़ंक्शन तक पहुँच रहे हैं

517
00:26:30,240 --> 00:26:33,279
outside the outside the scope
दायरे के बाहर

518
00:26:33,279 --> 00:26:37,440
actually okay so I'm pretty sure with
वास्तव में ठीक है इसलिए मुझे यकीन है

519
00:26:37,440 --> 00:26:38,760
the variables but I'm not sure with the
चर लेकिन मुझे यकीन नहीं है

520
00:26:38,760 --> 00:26:41,240
functions
कार्य

521
00:26:42,360 --> 00:26:46,200
actually so where where can be called
वास्तव में जहां कहा जा सकता है

522
00:26:46,200 --> 00:26:47,880
outside also but I'm not sure with the
बाहर भी, लेकिन मुझे यकीन नहीं है

523
00:26:47,880 --> 00:26:50,120
functions I think a function ABC is not
कार्य मुझे लगता है कि एक फ़ंक्शन एबीसी नहीं है

524
00:26:50,120 --> 00:26:53,159
declared will get as the output ABC is
घोषित किया जाएगा जैसा कि आउटपुट एबीसी है

525
00:26:53,159 --> 00:26:54,200
not
नहीं

526
00:26:54,200 --> 00:26:56,720
declared yeah because we are just
हाँ घोषित किया क्योंकि हम बस हैं

527
00:26:56,720 --> 00:26:58,840
accessing inside the block scope right
ब्लॉक स्कोप के अंदर पहुंच सही

528
00:26:58,840 --> 00:27:01,360
okay just because you are written
ठीक है सिर्फ इसलिए कि आप लिखे हैं

529
00:27:01,360 --> 00:27:04,320
writing in Block scope you are not able
ब्लॉक स्कोप में लिखना आप सक्षम नहीं हैं

530
00:27:04,320 --> 00:27:06,720
to access you to say so functions can be
आपको यह कहने के लिए एक्सेस करने के लिए कि फ़ंक्शन हो सकते हैं

531
00:27:06,720 --> 00:27:09,360
hoisted right yeah yeah functions can be
फहराया हाँ हाँ हाँ कार्य हो सकता है

532
00:27:09,360 --> 00:27:12,240
hoisted so it means functions can be
फहराया तो इसका मतलब है कि कार्य हो सकते हैं

533
00:27:12,240 --> 00:27:14,919
accessible outside of the block scope
ब्लॉक स्कोप के बाहर सुलभ

534
00:27:14,919 --> 00:27:18,000
also are you sure no so so no one second
इसके अलावा, आपको यकीन है कि ऐसा नहीं है कि कोई दूसरा नहीं है

535
00:27:18,000 --> 00:27:20,960
one second so we we'll not get the apcs
एक सेकंड तो हम APCs नहीं मिलेंगे

536
00:27:20,960 --> 00:27:22,279
not declared as the
के रूप में घोषित नहीं है

537
00:27:22,279 --> 00:27:24,360
output functions
आउटपुट फ़ंक्शन

538
00:27:24,360 --> 00:27:26,919
ABC so ABC is declared inside the
ABC SO ABC को अंदर घोषित किया जाता है

539
00:27:26,919 --> 00:27:30,200
bracket the scope and we just conso Lo
ब्रैकेट स्कोप और हम सिर्फ कॉन्सो लो

540
00:27:30,200 --> 00:27:34,440
PR so if you call outside outside
पीआर इसलिए यदि आप बाहर बाहर कॉल करते हैं

541
00:27:36,799 --> 00:27:40,279
ABC we might get PR as the output so not
एबीसी हम आउटपुट के रूप में पीआर प्राप्त कर सकते हैं इसलिए नहीं

542
00:27:40,279 --> 00:27:43,279
ABC is not decleared are you
एबीसी को घोषित नहीं किया गया है कि आप हैं

543
00:27:43,279 --> 00:27:46,600
sure yeah because functions are
यकीन है हाँ क्योंकि कार्य हैं

544
00:27:46,600 --> 00:27:49,720
hosted in
में होस्ट किया गया

545
00:27:49,720 --> 00:27:53,120
JavaScript so that scope it doesn't mean
जावास्क्रिप्ट ताकि यह गुंजाइश का मतलब न हो

546
00:27:53,120 --> 00:27:55,679
anything you me
कुछ भी तुम मुझे

547
00:27:55,679 --> 00:27:59,679
to yeah
हाँ, तो

548
00:27:59,720 --> 00:28:02,080
so it only behaves as a
तो यह केवल एक के रूप में व्यवहार करता है

549
00:28:02,080 --> 00:28:05,279
rare variable I
दुर्लभ चर मैं

550
00:28:05,279 --> 00:28:07,799
think so you are sure you meant to say
सोचो तो आप सुनिश्चित हैं कि आप कहने के लिए मतलब है

551
00:28:07,799 --> 00:28:11,720
Pro will get printed yeah I guess okay
प्रो मुद्रित हो जाएगा हाँ मुझे लगता है ठीक है

552
00:28:11,720 --> 00:28:13,960
okay fine fine
ठीक है ठीक है

553
00:28:13,960 --> 00:28:18,200
it's yeah that's right basically okay uh
यह हाँ है यह मूल रूप से ठीक है उह

554
00:28:18,200 --> 00:28:20,600
okay write you
ठीक है आप लिखो

555
00:28:20,600 --> 00:28:23,760
stct write
stct लिखें

556
00:28:23,760 --> 00:28:27,880
usct will this affect anything no sir it
USCT यह किसी भी सर को प्रभावित करेगा

557
00:28:27,880 --> 00:28:32,519
won't effect no are you sure yeah I'm
प्रभाव नहीं होगा, क्या आपको यकीन है कि हाँ मैं हूँ

558
00:28:32,519 --> 00:28:36,159
sure okay run this
यकीन है कि ठीक है यह चलाओ

559
00:28:38,760 --> 00:28:42,840
then okay do you know about the windows
तो ठीक है क्या आप खिड़कियों के बारे में जानते हैं

560
00:28:42,840 --> 00:28:47,760
scope window scope yeah yeah I have a
स्कोप विंडो स्कोप हाँ हाँ मेरे पास एक है

561
00:28:47,760 --> 00:28:50,559
basic idea see uh Windows scope is
मूल विचार देखें उह विंडोज स्कोप है

562
00:28:50,559 --> 00:28:54,200
nothing but basic if we assign a
अगर हम असाइन करते हैं तो कुछ भी नहीं है

563
00:28:54,200 --> 00:28:55,880
variable without any kind of keywords
किसी भी तरह के कीवर्ड के बिना चर

564
00:28:55,880 --> 00:28:58,159
and all so that we be directly going uh
और सब इसलिए कि हम सीधे उह जा रहे हैं

565
00:28:58,159 --> 00:29:00,120
going into the window object inside the
अंदर खिड़की की वस्तु में जा रहा है

566
00:29:00,120 --> 00:29:03,440
global scope I guess so okay okay so you
वैश्विक गुंजाइश मुझे लगता है कि ठीक है ठीक है तो आप

567
00:29:03,440 --> 00:29:06,080
meant to say they are hosted yeah they
कहने का मतलब है कि वे हाँ की मेजबानी कर रहे हैं

568
00:29:06,080 --> 00:29:07,840
directly uh going into the window object
सीधे उह विंडो ऑब्जेक्ट में जा रहे हैं

569
00:29:07,840 --> 00:29:10,000
that is global global scope yeah so they
यह वैश्विक वैश्विक गुंजाइश है, तो वे

570
00:29:10,000 --> 00:29:12,679
are hosted right yeah yeah so Global
होस्ट किया गया है हाँ हाँ तो वैश्विक

571
00:29:12,679 --> 00:29:17,360
scope uh it behaves like a w I guess it
स्कोप उह यह एक w की तरह व्यवहार करता है मुझे लगता है

572
00:29:17,360 --> 00:29:21,039
behaves like a where but it so there is
एक जहां की तरह व्यवहार करता है, लेकिन ऐसा है

573
00:29:21,039 --> 00:29:24,039
no difference you me to say where and if
कोई फर्क नहीं

574
00:29:24,039 --> 00:29:26,559
you write Windows
आप विंडोज लिखते हैं

575
00:29:26,559 --> 00:29:30,279
scope okay I'm asking this so you're
स्कोप ठीक है मैं यह पूछ रहा हूँ तो तुम हो

576
00:29:30,279 --> 00:29:32,679
asking whether it is hosted or not yeah
यह पूछना कि क्या यह होस्ट किया गया है या नहीं, हाँ

577
00:29:32,679 --> 00:29:35,440
in Windows SC y okay I'm not aware of
विंडोज़ sc y ठीक है, मुझे पता नहीं है

578
00:29:35,440 --> 00:29:37,960
that okay okay no it is okay you can
ठीक है ठीक है, यह ठीक है आप कर सकते हैं

579
00:29:37,960 --> 00:29:40,480
comment this
यह टिप्पणी करें

580
00:29:40,559 --> 00:29:44,640
out tell me what will be the
मुझे बताओ कि क्या होगा

581
00:29:44,919 --> 00:29:48,320
output see basically
आउटपुट मूल रूप से देखें

582
00:29:48,320 --> 00:29:53,200
uh we are using strip mode here yeah so
उह हम यहाँ स्ट्रिप मोड का उपयोग कर रहे हैं हाँ तो

583
00:29:53,200 --> 00:29:55,640
the same as we just discussed here I
वैसा ही जैसा हमने यहां चर्चा की थी

584
00:29:55,640 --> 00:29:58,640
think
सोचना

585
00:29:58,799 --> 00:30:00,840
strict mode so if we don't use strict
सख्त मोड तो अगर हम सख्त का उपयोग नहीं करते हैं

586
00:30:00,840 --> 00:30:03,399
mode this can be converted as a global
मोड यह एक वैश्विक के रूप में परिवर्तित किया जा सकता है

587
00:30:03,399 --> 00:30:06,080
variable with the V
वी के साथ चर

588
00:30:06,080 --> 00:30:08,240
keyword and
कीवर्ड और

589
00:30:08,240 --> 00:30:12,480
uh no with the V keyword it won't be but
उह नहीं वी कीवर्ड के साथ यह नहीं होगा लेकिन

590
00:30:12,480 --> 00:30:17,159
yeah Global yes yeah if we so if we W
हाँ वैश्विक हाँ हाँ अगर हम ऐसा अगर हम w

591
00:30:17,159 --> 00:30:19,159
because basically they are different
क्योंकि मूल रूप से वे अलग हैं

592
00:30:19,159 --> 00:30:21,640
where can be hosted exactly yes yes yes
कहाँ होस्ट किया जा सकता है बिल्कुल हाँ हाँ हाँ

593
00:30:21,640 --> 00:30:24,600
yeah where can be hosted but uh so here
हाँ, जहां होस्ट किया जा सकता है लेकिन उह यहाँ है

594
00:30:24,600 --> 00:30:26,120
we are not declaring anything so we are
हम कुछ भी घोषित नहीं कर रहे हैं इसलिए हम हैं

595
00:30:26,120 --> 00:30:28,720
not using where let or const yes so and
इसका उपयोग नहीं करते हैं, जहां चलो या कांस्टे तो और

596
00:30:28,720 --> 00:30:30,679
again we are using ustri so if we for
फिर से हम ustri का उपयोग कर रहे हैं तो अगर हम के लिए

597
00:30:30,679 --> 00:30:33,279
example if we want use ustri here yeah
उदाहरण यदि हम यहाँ ustri का उपयोग करना चाहते हैं तो हाँ

598
00:30:33,279 --> 00:30:36,080
so this can be converted as a global
तो यह एक वैश्विक के रूप में परिवर्तित किया जा सकता है

599
00:30:36,080 --> 00:30:38,039
yeah so A and B becomes as a global
हाँ तो ए और बी एक वैश्विक के रूप में बन जाता है

600
00:30:38,039 --> 00:30:41,399
scope but we are using UST here so we
स्कोप लेकिन हम यहाँ UST का उपयोग कर रहे हैं इसलिए हम

601
00:30:41,399 --> 00:30:44,320
might get
हो सकता है

602
00:30:47,200 --> 00:30:50,480
uh we might get an error sir you might
उह हमें एक त्रुटि मिल सकती है सर आप कर सकते हैं

603
00:30:50,480 --> 00:30:53,840
get an err are not de yeah
एक गलत नहीं है हाँ नहीं है

604
00:30:53,840 --> 00:30:58,519
adisha yeah why because of you stct yes
Adisha हाँ क्यों आप की वजह से हाँ

605
00:30:58,519 --> 00:31:01,679
so uh ustri strictly checks uh whether
तो उह ustri कड़ाई से जाँच करता है कि क्या

606
00:31:01,679 --> 00:31:04,639
so usts I think in UST mode this cannot
तो usts मुझे लगता है कि ust मोड में यह नहीं हो सकता है

607
00:31:04,639 --> 00:31:08,480
be converted AS Global I guess UST
वैश्विक के रूप में परिवर्तित होना मुझे लगता है कि ust

608
00:31:08,480 --> 00:31:12,559
cannot be converted as a global so UST
एक वैश्विक के रूप में परिवर्तित नहीं किया जा सकता है

609
00:31:12,559 --> 00:31:14,240
particularly checks whether the aable
विशेष रूप से जांचता है कि क्या aable

610
00:31:14,240 --> 00:31:16,679
variables are declared with any kind of
चर किसी भी तरह के साथ घोषित किए जाते हैं

611
00:31:16,679 --> 00:31:19,639
keyword yes yes yeah so it s for that
कीवर्ड हाँ हाँ हाँ तो यह उसके लिए है

612
00:31:19,639 --> 00:31:21,760
because so we are using ustri here and
क्योंकि हम यहाँ और USTRI का उपयोग कर रहे हैं और

613
00:31:21,760 --> 00:31:23,240
we we are not assigning any kind of
हम किसी भी तरह का असाइन नहीं कर रहे हैं

614
00:31:23,240 --> 00:31:28,320
keywords here besid A or B so UST
यहाँ कीवर्ड एक या बी के बगल में हैं

615
00:31:28,320 --> 00:31:33,799
you told me right they are not uh have
आपने मुझे बताया कि वे उह नहीं हैं

616
00:31:34,480 --> 00:31:38,880
any so UST checks basically uh UST
कोई भी ust मूल रूप से uh ust चेक करता है

617
00:31:38,880 --> 00:31:41,320
basically sees if any of the keyword is
मूल रूप से देखता है कि क्या कोई कीवर्ड है

618
00:31:41,320 --> 00:31:43,159
present or not so here there is there
यहाँ मौजूद है या नहीं यहाँ वहाँ है

619
00:31:43,159 --> 00:31:45,600
are we are not declaring these variables
क्या हम इन चर की घोषणा नहीं कर रहे हैं

620
00:31:45,600 --> 00:31:47,799
with any kind of keyword so we might get
किसी भी तरह के कीवर्ड के साथ इसलिए हमें मिल सकता है

621
00:31:47,799 --> 00:31:51,679
basically usct uh it allows you to have
मूल रूप से usct uh यह आपको करने की अनुमति देता है

622
00:31:51,679 --> 00:31:54,399
a right practice like you should be
एक सही अभ्यास जैसे आपको होना चाहिए

623
00:31:54,399 --> 00:31:58,519
having uh exactly yes yes with let where
उह के साथ हाँ हाँ के साथ हाँ कहाँ है

624
00:31:58,519 --> 00:32:01,200
yeah yeah let yes so it's a strict
हाँ हाँ, हाँ, यह एक सख्त है

625
00:32:01,200 --> 00:32:03,360
checking yeah it's a strict checking so
हाँ, यह एक सख्त जाँच है

626
00:32:03,360 --> 00:32:06,159
we might get an error here so as I told
जैसा कि मैंने बताया था, हमें यहां एक त्रुटि मिल सकती है

627
00:32:06,159 --> 00:32:09,519
so what about the values you are passing
तो आपके द्वारा पारित होने वाले मूल्यों के बारे में क्या

628
00:32:09,519 --> 00:32:14,960
through a comma b a comma B here
एक अल्पविराम बी के माध्यम से एक अल्पविराम बी यहाँ

629
00:32:16,720 --> 00:32:20,440
yes basically uh it gives high priority
हाँ मूल रूप से उह यह उच्च प्राथमिकता देता है

630
00:32:20,440 --> 00:32:23,960
for the inside uh inside a block scoped
अंदर के उह के लिए एक ब्लॉक स्कोप किया गया

631
00:32:23,960 --> 00:32:28,440
variables okay so this won't be taken as
चर ठीक है तो यह के रूप में नहीं लिया जाएगा

632
00:32:28,440 --> 00:32:30,039
the over return values because we
ओवर रिटर्न वैल्यूज़ क्योंकि हम

633
00:32:30,039 --> 00:32:32,360
already have so I'm Notting I'm not I'm
पहले से ही तो मैं नोट नहीं कर रहा हूँ मैं नहीं हूँ

634
00:32:32,360 --> 00:32:34,279
talking for example I'm talking without
उदाहरण के लिए बात कर रहा हूँ मैं बिना बात कर रहा हूँ

635
00:32:34,279 --> 00:32:36,159
the ustrip so for example we we can
उदाहरण के लिए हम हम कर सकते हैं

636
00:32:36,159 --> 00:32:38,960
assume that here we don't have ustp so
मान लें कि यहाँ हमारे पास USTP नहीं है

637
00:32:38,960 --> 00:32:41,519
this can be converted into Global and uh
इसे वैश्विक और उह में परिवर्तित किया जा सकता है

638
00:32:41,519 --> 00:32:44,360
these values will be written we get
ये मूल्य हमें लिखे जाएंगे

639
00:32:44,360 --> 00:32:45,880
these values only we'll get as an output
ये मान केवल एक आउटपुट के रूप में मिलेंगे

640
00:32:45,880 --> 00:32:50,480
because see uh basically where uh this
क्योंकि उह मूल रूप से देखें जहां उह यह

641
00:32:50,480 --> 00:32:52,919
uh this will get high priority inside
उह इसे अंदर उच्च प्राथमिकता मिलेगी

642
00:32:52,919 --> 00:32:55,480
the bracket because these variables are
ब्रैकेट क्योंकि ये चर हैं

643
00:32:55,480 --> 00:32:57,279
inside the scope and we are having 100
स्कोप के अंदर और हम 100 कर रहे हैं

644
00:32:57,279 --> 00:32:58,799
and 200
और 200

645
00:32:58,799 --> 00:33:00,559
yeah I think this won't be get affected
हाँ, मुझे लगता है कि यह प्रभावित नहीं होगा

646
00:33:00,559 --> 00:33:02,559
inside the function sir so we'll get
फ़ंक्शन के अंदर सर तो हम मिलेंगे

647
00:33:02,559 --> 00:33:04,399
this values only but in this case we'll
यह केवल लेकिन इस मामले में हम करेंगे

648
00:33:04,399 --> 00:33:08,000
get an error here you'll get an error
यहां एक त्रुटि प्राप्त करें आपको एक त्रुटि मिलेगी

649
00:33:08,000 --> 00:33:11,039
yeah you have written comma or plus
हाँ, आपने अल्पविराम या प्लस लिखा है

650
00:33:11,039 --> 00:33:12,919
return arguments of
के तर्क लौटाएं

651
00:33:12,919 --> 00:33:17,240
zero comma right plus plus okay yeah
शून्य अल्पविराम सही प्लस ठीक है हाँ

652
00:33:17,240 --> 00:33:18,760
that's what I'm saying yeah that's what
यही कारण है कि मैं हाँ कह रहा हूँ

653
00:33:18,760 --> 00:33:23,399
say yeah so you meant to say it
हाँ कहो तो आप इसे कहने का मतलब है

654
00:33:23,399 --> 00:33:27,159
will a and a = to 100 and B = to 200 it
ए और ए = से 100 और बी = से 200 से

655
00:33:27,159 --> 00:33:30,159
won't take exactly so without use St
उपयोग किए बिना बिल्कुल ऐसा नहीं होगा

656
00:33:30,159 --> 00:33:33,320
we'll get the output as 300 300 okay
हम आउटपुट को 300 300 ठीक के रूप में प्राप्त करेंगे

657
00:33:33,320 --> 00:33:35,880
yeah yeah because uh
हाँ, क्योंकि उह

658
00:33:35,880 --> 00:33:40,240
this us you will receive exactly error
यह हमें बिल्कुल त्रुटि प्राप्त होगी

659
00:33:40,240 --> 00:33:43,480
error error error yeah because ustri
त्रुटि त्रुटि त्रुटि हाँ क्योंकि ustri

660
00:33:43,480 --> 00:33:45,600
chly stricks for the keyword we should
कीवर्ड के लिए chly स्ट्रिक्स हमें चाहिए

661
00:33:45,600 --> 00:33:47,120
assign the variables with any kind of
किसी भी तरह के साथ चर असाइन करें

662
00:33:47,120 --> 00:33:49,120
keyword where let all con so in this
कीवर्ड जहां सभी को इस में चोर होने दें

663
00:33:49,120 --> 00:33:51,320
case we are not we are assigning without
मामला हम नहीं हैं हम बिना असाइन कर रहे हैं

664
00:33:51,320 --> 00:33:52,840
uh the keyboards so we might get an
उह कीबोर्ड इसलिए हम एक प्राप्त कर सकते हैं

665
00:33:52,840 --> 00:33:56,519
error here so without H St we'll get 300
यहाँ त्रुटि के बिना h st हम 300 प्राप्त करेंगे

666
00:33:56,519 --> 00:33:58,919
as an output because this console.log
एक आउटपुट के रूप में क्योंकि यह कंसोल.लॉग

667
00:33:58,919 --> 00:34:01,200
won't be printed because in in a
एक में मुद्रित नहीं होगा क्योंकि एक में

668
00:34:01,200 --> 00:34:04,600
function if we if we write any kind of
यदि हम किसी भी तरह का लिखते हैं तो कार्य करें

669
00:34:04,600 --> 00:34:07,360
expressions or values out next to the
अभिव्यक्ति या मान के बगल में

670
00:34:07,360 --> 00:34:09,719
return so the function thinks this is
वापसी तो फ़ंक्शन को लगता है कि यह है

671
00:34:09,719 --> 00:34:12,679
the last line okay so yeah so after
अंतिम पंक्ति ठीक है तो हाँ के बाद

672
00:34:12,679 --> 00:34:14,679
return won't be uh any line won't get
रिटर्न नहीं होगा कि कोई भी लाइन नहीं मिलेगी

673
00:34:14,679 --> 00:34:17,000
executed or okay so you will receive err
निष्पादित या ठीक है तो आप गलत प्राप्त करेंगे

674
00:34:17,000 --> 00:34:19,040
output no no no we we will not get an
आउटपुट नहीं नहीं नहीं हम हम नहीं मिलेंगे

675
00:34:19,040 --> 00:34:22,639
error so this will get undefined I think
त्रुटि तो यह मुझे लगता है कि अपरिभाषित हो जाएगा

676
00:34:22,639 --> 00:34:26,199
okay okay they're undefined and on the
ठीक है ठीक है वे अपरिभाषित हैं और पर

677
00:34:26,199 --> 00:34:28,800
return on the return then uh if we have
वापसी पर लौटें तो अगर हमारे पास है तो उह

678
00:34:28,800 --> 00:34:31,639
UST strict uh we definitely get an error
Ust सख्त उह हम निश्चित रूप से एक त्रुटि प्राप्त करते हैं

679
00:34:31,639 --> 00:34:33,399
so if we don't have UST strict we'll get
इसलिए अगर हमारे पास सख्त सख्त नहीं है तो हम प्राप्त करेंगे

680
00:34:33,399 --> 00:34:36,280
300 as an output okay no UST strict will
300 एक आउटपुट के रूप में ठीक है कोई ust सख्त होगा

681
00:34:36,280 --> 00:34:39,199
be there so now what will be the output
वहाँ हो तो अब आउटपुट क्या होगा

682
00:34:39,199 --> 00:34:44,719
now yes we will get an error sir because
अब हाँ हमें एक त्रुटि मिलेगी सर क्योंकि

683
00:34:44,719 --> 00:34:49,000
yeah okay so if you remove UST strict
हाँ ठीक है तो अगर आप ust सख्त हटाते हैं

684
00:34:49,000 --> 00:34:54,399
you will receive output as 300 and
आपको 300 के रूप में आउटपुट प्राप्त होगा और

685
00:34:54,399 --> 00:34:58,839
undefined yeah okay after okay I thought
अपरिभाषित हाँ ठीक है ठीक है के बाद मैंने सोचा था

686
00:34:58,839 --> 00:35:01,040
after return statement any statement
वापसी के बयान के बाद कोई बयान

687
00:35:01,040 --> 00:35:03,280
doesn't work I thought yeah yeah exactly
काम नहीं करता है मैंने सोचा हाँ हाँ बिल्कुल

688
00:35:03,280 --> 00:35:06,040
yeah but you told me
हाँ, लेकिन आपने मुझे बताया

689
00:35:06,040 --> 00:35:08,640
undefined yeah I was thinking like uh no
अपरिभाषित हाँ, मैं उह नहीं की तरह सोच रहा था

690
00:35:08,640 --> 00:35:10,480
no first I said no sir this this
नहीं पहले मैंने कहा कि यह नहीं सर

691
00:35:10,480 --> 00:35:12,760
statement won't get executed totally so
कथन पूरी तरह से निष्पादित नहीं होगा

692
00:35:12,760 --> 00:35:16,480
undefined will appear or not no no no
अपरिभाषित दिखाई देगा या नहीं नहीं नहीं

693
00:35:16,480 --> 00:35:18,680
will not appear I guess not sure this
दिखाई नहीं देगा मुझे लगता है कि यह निश्चित नहीं है

694
00:35:18,680 --> 00:35:20,839
won't this statement won't get executed
क्या यह कथन निष्पादित नहीं होगा

695
00:35:20,839 --> 00:35:23,240
no sir this line won't get up here okay
नहीं सर यह लाइन यहाँ ठीक नहीं होगी

696
00:35:23,240 --> 00:35:26,480
it was say okay fine so okay so this
यह ठीक है ठीक है तो ठीक है तो यह ठीक है

697
00:35:26,480 --> 00:35:29,079
code won't uh
कोड उह नहीं होगा

698
00:35:29,079 --> 00:35:31,520
execute yeah right now because uh we'll
अभी हाँ, क्योंकि हम हम हम करेंगे

699
00:35:31,520 --> 00:35:33,400
get an error here okay so now what will
यहाँ एक त्रुटि प्राप्त करें ठीक है तो अब क्या होगा

700
00:35:33,400 --> 00:35:35,359
be the output you will receive error you
आउटपुट हो जो आपको त्रुटि मिलेगी

701
00:35:35,359 --> 00:35:38,200
me to say yes yes now we get we'll
मुझे कहने के लिए हाँ हाँ अब हमें हम मिलेंगे

702
00:35:38,200 --> 00:35:41,720
receive error okay run this
त्रुटि प्राप्त करें ठीक है इसे चलाएं

703
00:35:46,280 --> 00:35:50,800
then yes sir so arguments arguments uh
तो हाँ सर तो तर्क तर्क उह

704
00:35:50,800 --> 00:35:55,400
ARG write return arguments WR uh a don't
Arg राइट रिटर्न तर्क wr uh a नहीं

705
00:35:55,400 --> 00:35:58,720
write args WR AR
लिखें args wr ar

706
00:35:58,720 --> 00:36:02,960
arguments arguments okay yes yes
तर्क तर्क ठीक है हाँ हाँ

707
00:36:02,960 --> 00:36:05,640
yes yeah can I run this and you will
हाँ हाँ, मैं इसे चला सकता हूँ और आप करेंगे

708
00:36:05,640 --> 00:36:09,440
receive error right yeah run this yeah
त्रुटि प्राप्त करें ठीक है हाँ यह हाँ चलाएं

709
00:36:09,440 --> 00:36:11,440
yeah so these values are overwriting
हाँ, इसलिए ये मूल्य अधिलेखित हैं

710
00:36:11,440 --> 00:36:15,720
with this one okay okay so you got it
इस के साथ ठीक है ठीक है तो आपको यह मिल गया

711
00:36:15,720 --> 00:36:18,839
right yeah yeah I got it sir so they
ठीक है, हाँ, मुझे यह सर मिला है

712
00:36:18,839 --> 00:36:21,319
they are overwriting by these values yes
वे इन मूल्यों के द्वारा अधिलेखित कर रहे हैं हाँ

713
00:36:21,319 --> 00:36:23,680
if you had written where then it would
अगर आपने लिखा होता तो यह कहाँ होता

714
00:36:23,680 --> 00:36:26,200
have taken that yeah yeah yeah because
कि हाँ हाँ, हाँ क्योंकि

715
00:36:26,200 --> 00:36:28,119
yeah yeah I got it
हाँ, हाँ मुझे मिल गया

716
00:36:28,119 --> 00:36:29,920
okay so it directly going into the
ठीक है तो यह सीधे में जा रहा है

717
00:36:29,920 --> 00:36:31,640
global object but it is not assuming it
वैश्विक वस्तु लेकिन यह इसे नहीं मान रहा है

718
00:36:31,640 --> 00:36:34,640
as a v so it is in a global object so it
एक v के रूप में इसलिए यह एक वैश्विक वस्तु में है इसलिए यह

719
00:36:34,640 --> 00:36:36,520
these are over written by they they
ये उनके द्वारा लिखे गए हैं

720
00:36:36,520 --> 00:36:39,760
won't be taken 100 to 100 because of uh
उह की वजह से 100 से 100 नहीं लिया जाएगा

721
00:36:39,760 --> 00:36:41,640
yeah yeah exactly they are not defined
हाँ, वास्तव में वे परिभाषित नहीं हैं

722
00:36:41,640 --> 00:36:45,520
with yeah I got it I got I got it yeah
हाँ के साथ मुझे यह मिल गया है मुझे मिल गया है यह हाँ

723
00:36:45,520 --> 00:36:47,880
thank you thank you for this okay can
इस ठीक हो सकते हैं के लिए धन्यवाद

724
00:36:47,880 --> 00:36:51,640
you tell me the uh any mutable array
आप मुझे किसी भी उत्परिवर्तित सरणी को बताओ

725
00:36:51,640 --> 00:36:55,520
examples mutable AR examples yes um you
उदाहरण उत्परिवर्तनीय ar उदाहरण हाँ उम आप

726
00:36:55,520 --> 00:36:59,040
know firstly what what is mutable
सबसे पहले पता है कि क्या उत्परिवर्तनीय है

727
00:36:59,040 --> 00:37:01,560
yeah yeah so changing the original yep
हाँ हाँ तो मूल हां बदल रहा है

728
00:37:01,560 --> 00:37:04,720
yep modifying the original yes so in
हां मूल हां में संशोधित करना

729
00:37:04,720 --> 00:37:08,880
examples for each for each for what for
प्रत्येक के लिए प्रत्येक के लिए उदाहरण क्या के लिए

730
00:37:08,880 --> 00:37:11,560
each does so basically for each mutates
प्रत्येक मूल रूप से प्रत्येक उत्परिवर्तितों के लिए ऐसा करता है

731
00:37:11,560 --> 00:37:14,040
the original AR for each only used for
प्रत्येक के लिए मूल एआर केवल के लिए उपयोग किया जाता है

732
00:37:14,040 --> 00:37:16,280
iteration purpose yeah yeah iteration
पुनरावृत्ति उद्देश्य हाँ पुनरावृत्ति

733
00:37:16,280 --> 00:37:18,760
but we won't get a separate array as map
लेकिन हमें नक्शे के रूप में एक अलग सरणी नहीं मिलेगी

734
00:37:18,760 --> 00:37:21,880
so far is used only for iteration okay
अब तक केवल पुनरावृत्ति के लिए उपयोग किया जाता है ठीक है

735
00:37:21,880 --> 00:37:23,319
uh so you're asking about the array
उह तो आप सरणी के बारे में पूछ रहे हैं

736
00:37:23,319 --> 00:37:26,480
methods right yes array methods so shift
तरीके सही हाँ सरणी तरीके तो शिफ्ट

737
00:37:26,480 --> 00:37:30,079
method uh is it mutable Arrow no no
विधि उह यह उत्परिवर्तनीय तीर नहीं है

738
00:37:30,079 --> 00:37:32,800
shift yes yes it's it's a mutable Arrow
शिफ्ट हाँ हाँ यह एक उत्परिवर्ती तीर है

739
00:37:32,800 --> 00:37:35,920
yes sure so shift yes I guess so shift
हाँ यकीन है कि शिफ्ट हाँ मुझे लगता है कि शिफ्ट

740
00:37:35,920 --> 00:37:37,880
and shift is used to add elements from
और शिफ्ट का उपयोग तत्वों को जोड़ने के लिए किया जाता है

741
00:37:37,880 --> 00:37:40,800
starting I guess shift and
शुरू करने से मुझे लगता है कि शिफ्ट और

742
00:37:40,800 --> 00:37:44,319
shift yeah and
शिफ्ट हाँ और

743
00:37:44,319 --> 00:37:48,640
slice slice slice yeah slice slice and
स्लाइस स्लाइस स्लाइस यस स्लाइस स्लाइस और

744
00:37:48,640 --> 00:37:52,280
slice is nothing but uh no no no okay
स्लाइस कुछ भी नहीं है, लेकिन उह नहीं नहीं ठीक है

745
00:37:52,280 --> 00:37:55,000
you know it right slice
आप इसे सही स्लाइस जानते हैं

746
00:37:55,000 --> 00:37:58,040
slice or not yes okay
स्लाइस या नहीं हाँ ठीक है

747
00:37:58,040 --> 00:38:02,319
okay so if you slice not sure of that
ठीक है तो अगर आप स्लाइस नहीं करते हैं

748
00:38:02,319 --> 00:38:07,160
but okay okay what slice does so we can
लेकिन ठीक है ठीक है कि स्लाइस क्या करता है हम कर सकते हैं

749
00:38:07,160 --> 00:38:09,040
get uh slice or give the particular
उह स्लाइस प्राप्त करें या विशेष दें

750
00:38:09,040 --> 00:38:10,520
values from starting index to ending
सूचकांक शुरू करने से लेकर समाप्ति तक मूल्य

751
00:38:10,520 --> 00:38:13,040
index so we can mention that no no
सूचकांक इसलिए हम उल्लेख कर सकते हैं कि नहीं नहीं

752
00:38:13,040 --> 00:38:16,880
what's the function of it uh splice
इसका क्या कार्य उह स्प्लिस है

753
00:38:16,880 --> 00:38:19,160
you're asking slice or splice
आप स्लाइस या स्प्लिस पूछ रहे हैं

754
00:38:19,160 --> 00:38:22,319
splice splice yes okay so if we want to
स्प्लिस स्प्लिस हाँ ठीक है तो हम चाहते हैं

755
00:38:22,319 --> 00:38:24,160
remove remove particular element from
से विशेष तत्व निकालें

756
00:38:24,160 --> 00:38:26,640
the particular index so uh we can use
विशेष सूचकांक तो उह हम उपयोग कर सकते हैं

757
00:38:26,640 --> 00:38:29,079
splice method that okay for removing
स्प्लिस विधि जो हटाने के लिए ठीक है

758
00:38:29,079 --> 00:38:31,800
only it is used for removing or adding
केवल इसका उपयोग हटाने या जोड़ने के लिए किया जाता है

759
00:38:31,800 --> 00:38:35,280
also for removing adding okay that's it
यह भी हटाने के लिए ठीक है

760
00:38:35,280 --> 00:38:38,560
yeah you you can remove it or you can
हाँ, आप इसे हटा सकते हैं या आप कर सकते हैं

761
00:38:38,560 --> 00:38:42,119
add it yeah you can't replace it yeah we
इसे जोड़ें हाँ आप इसे प्रतिस्थापित नहीं कर सकते हैं

762
00:38:42,119 --> 00:38:44,440
can replace I think we can replace it
मुझे लगता है कि हम इसे बदल सकते हैं, की जगह ले सकते हैं

763
00:38:44,440 --> 00:38:47,359
yeah okay so I don't know whether that
हाँ ठीक है तो मुझे नहीं पता कि क्या

764
00:38:47,359 --> 00:38:50,079
mutates or not I guess okay and what
म्यूटेट्स या नहीं मुझे लगता है कि ठीक है और क्या

765
00:38:50,079 --> 00:38:53,200
slice method does slice method for
स्लाइस विधि के लिए स्लाइस विधि करता है

766
00:38:53,200 --> 00:38:55,040
example there are four elements in an
उदाहरण में चार तत्व हैं

767
00:38:55,040 --> 00:38:57,520
array we particularly want from second
सरणी हम विशेष रूप से दूसरे से चाहते हैं

768
00:38:57,520 --> 00:38:59,160
index to last index so we can use SCE
इंडेक्स टू लास्ट इंडेक्स ताकि हम एससीई का उपयोग कर सकें

769
00:38:59,160 --> 00:39:00,839
method and we can retrieve that values
विधि और हम उस मूल्यों को पुनः प्राप्त कर सकते हैं

770
00:39:00,839 --> 00:39:03,119
from the array okay from the array we
सरणी से ठीक है हम सरणी से ठीक हैं

771
00:39:03,119 --> 00:39:07,079
can access a certain portion you exactly
आप वास्तव में एक निश्चित हिस्से तक पहुंच सकते हैं

772
00:39:07,079 --> 00:39:10,480
yes yes yes okay fine fine yeah you know
हाँ हाँ ठीक है ठीक है ठीक है हाँ आप जानते हैं

773
00:39:10,480 --> 00:39:13,560
about find method right exactly yes I
सही विधि के बारे में ठीक है हाँ मैं

774
00:39:13,560 --> 00:39:17,960
know what it does so uh we can find a
पता है कि यह क्या करता है उह हम एक पा सकते हैं

775
00:39:17,960 --> 00:39:20,839
particular value using uh a find method
UH एक खोज विधि का उपयोग करके विशेष मूल्य

776
00:39:20,839 --> 00:39:24,280
okay so the number so for example uh if
ठीक है तो संख्या तो उदाहरण के लिए उह अगर

777
00:39:24,280 --> 00:39:27,839
you can find uh with the uh names or of
आप उह नामों के साथ उह पा सकते हैं या

778
00:39:27,839 --> 00:39:30,359
particular expression using find method
खोज विधि का उपयोग करके विशेष अभिव्यक्ति

779
00:39:30,359 --> 00:39:32,040
so if the number is greater than two or
इसलिए यदि संख्या दो से अधिक है या

780
00:39:32,040 --> 00:39:33,800
something yeah so we can use this kind
कुछ हाँ तो हम इस तरह का उपयोग कर सकते हैं

781
00:39:33,800 --> 00:39:36,200
of expression okay so Suppose there is a
अभिव्यक्ति ठीक है तो मान लीजिए कि वहाँ एक है

782
00:39:36,200 --> 00:39:41,040
array 1 2 3 4 5 6 7 8 and we are
सरणी 1 2 3 4 5 6 7 8 और हम हैं

783
00:39:41,040 --> 00:39:44,480
applying greater than four okay in find
फाइंड में चार से अधिक ठीक है

784
00:39:44,480 --> 00:39:47,760
method so what it will return the output
विधि तो यह क्या आउटपुट लौटाएगा

785
00:39:47,760 --> 00:39:51,599
guess repe question hello uh maybe got
लगता है repe प्रश्न हैलो उह शायद मिल गया

786
00:39:51,599 --> 00:39:54,000
stuck okay so what I was saying uh the
ठीक है तो मैं क्या कह रहा था उह

787
00:39:54,000 --> 00:39:58,079
find method is there okay and uh
खोज विधि ठीक है और उह

788
00:39:58,079 --> 00:40:01,800
there are array elements 1 2 3 4 5 6 7 8
सरणी तत्व 1 2 3 4 5 6 7 8 हैं

789
00:40:01,800 --> 00:40:03,880
okay and you are applying a find
ठीक है और आप एक खोज कर रहे हैं

790
00:40:03,880 --> 00:40:06,920
condition with a condition greater than
एक शर्त के साथ स्थिति से अधिक

791
00:40:06,920 --> 00:40:10,440
four greater than four okay so so we
चार से अधिक चार ठीक है तो हम

792
00:40:10,440 --> 00:40:15,640
will get 5678 sir 5678 are you sure yeah
5678 SIR 5678 मिल जाएगा

793
00:40:15,640 --> 00:40:18,160
uh so okay uh you can do and show me the
उह ठीक है उह आप कर सकते हैं और मुझे दिखा सकते हैं

794
00:40:18,160 --> 00:40:21,160
output
आउटपुट

795
00:40:53,240 --> 00:40:57,000
5678 right yes yes sir okay uh run this
5678 ठीक है हाँ हाँ सर ठीक है उह इसे चलाओ

796
00:40:57,000 --> 00:40:59,240
then
तब

797
00:40:59,839 --> 00:41:03,520
one sec sir one sec
एक सेकंड सर वन सेकंड

798
00:41:08,160 --> 00:41:10,440
yeah so it iterates over the each
हाँ तो यह प्रत्येक पर पुनरावृत्ति करता है

799
00:41:10,440 --> 00:41:11,760
element and it checks whether the number
तत्व और यह जांचता है कि क्या नंबर

800
00:41:11,760 --> 00:41:14,400
is greater than four or not yes please
कृपया चार से अधिक है या नहीं, कृपया

801
00:41:14,400 --> 00:41:18,720
don't put on the yeah yeah so I'm
हाँ, हाँ, मैं हूँ पर मत डालो

802
00:41:18,720 --> 00:41:20,319
confused whether this number
उलझन में है कि क्या यह संख्या है

803
00:41:20,319 --> 00:41:22,560
particularly checks for one number or it
विशेष रूप से एक नंबर या आईटी के लिए चेक

804
00:41:22,560 --> 00:41:25,960
gives all the numbers which one number
सभी संख्याएं देता है जो एक संख्या देता है

805
00:41:25,960 --> 00:41:28,119
you want to say no no one
आप किसी को नहीं कहना चाहते हैं

806
00:41:28,119 --> 00:41:30,280
so see uh
तो उह देखें

807
00:41:30,280 --> 00:41:33,960
like I'm I I'm guessing we'll get output
जैसे मैं मैं अनुमान लगा रहा हूं कि हम आउटपुट प्राप्त करेंगे

808
00:41:33,960 --> 00:41:39,240
as a 5678 567 okay yeah because uh these
5678 567 के रूप में ठीक है हाँ क्योंकि उह ये

809
00:41:39,240 --> 00:41:42,079
filter condition if we apply in filter
फ़िल्टर स्थिति यदि हम फ़िल्टर में आवेदन करते हैं

810
00:41:42,079 --> 00:41:44,880
condition num greater than four so what
स्थिति चार से अधिक संख्या है तो क्या

811
00:41:44,880 --> 00:41:48,079
it will provide then so it it it gives
यह तब प्रदान करेगा तो यह यह देता है

812
00:41:48,079 --> 00:41:51,200
an another array uh satisfying this
एक और सरणी उह इसे संतुष्ट कर रहा है

813
00:41:51,200 --> 00:41:54,760
condition so 56 78 it will provide
स्थिति तो 56 78 यह प्रदान करेगा

814
00:41:54,760 --> 00:41:58,040
exactly and filter condition is also
बिल्कुल और फ़िल्टर की स्थिति भी है

815
00:41:58,040 --> 00:42:01,200
please don't put that yeah yeah yeah so
कृपया उस हाँ हाँ हाँ, तो मत डालो

816
00:42:01,200 --> 00:42:04,079
filter and condition what I didn't
फ़िल्टर और शर्त जो मैंने नहीं किया

817
00:42:04,079 --> 00:42:05,800
that's what I didn't R the program
यही मैंने कार्यक्रम नहीं किया है

818
00:42:05,800 --> 00:42:08,079
because I'm I'm very much sure that the
क्योंकि मुझे बहुत यकीन है कि मैं

819
00:42:08,079 --> 00:42:10,359
output is
आउटपुट है

820
00:42:10,359 --> 00:42:13,240
wrong I'm very much sure the output is
गलत मुझे यकीन है कि आउटपुट है

821
00:42:13,240 --> 00:42:15,520
wrong so that's why I did TR this
गलत इसलिए मैंने यह किया था

822
00:42:15,520 --> 00:42:17,520
condition so that's what uh I'm running
शर्त तो यह है कि मैं क्या चल रहा हूँ

823
00:42:17,520 --> 00:42:19,520
in my so see the filter also does the
मेरे तो देखें फिल्टर भी करता है

824
00:42:19,520 --> 00:42:23,599
same thing so uh so both both are same
एक ही बात तो उह तो दोनों एक ही हैं

825
00:42:23,599 --> 00:42:26,200
yeah yeah so both are not same see find
हाँ हाँ तो दोनों एक ही नहीं देख रहे हैं

826
00:42:26,200 --> 00:42:28,000
find method is so for example we can
विधि खोजें उदाहरण के लिए हम कर सकते हैं

827
00:42:28,000 --> 00:42:29,400
assume that we have a four array of
मान लें कि हमारे पास चार सरणी है

828
00:42:29,400 --> 00:42:33,359
objects so in each object we have ages
वस्तुएं तो प्रत्येक वस्तु में हमारे पास उम्र है

829
00:42:33,359 --> 00:42:35,240
so if we want to particular if you want
इसलिए अगर हम चाहते हैं तो हम विशेष रूप से चाहते हैं

830
00:42:35,240 --> 00:42:36,520
to find particular name with a
एक के साथ विशेष नाम खोजने के लिए

831
00:42:36,520 --> 00:42:39,400
particular age so we can use find method
विशेष आयु इसलिए हम खोज विधि का उपयोग कर सकते हैं

832
00:42:39,400 --> 00:42:41,880
but this is a kind of filter method yeah
लेकिन यह एक प्रकार का फ़िल्टर विधि है हाँ

833
00:42:41,880 --> 00:42:45,839
okay so okay for a particular element if
ठीक है तो एक विशेष तत्व के लिए ठीक है अगर

834
00:42:45,839 --> 00:42:49,119
you want to find exactly yes yes so if
आप बिल्कुल हाँ हाँ तो खोजना चाहते हैं

835
00:42:49,119 --> 00:42:54,119
see if we if we if we do like this yeah
देखें कि क्या हम अगर हम यह पसंद करते हैं तो हम यह पसंद करते हैं

836
00:42:54,119 --> 00:42:57,800
so we'll get four sir four okay you will
तो हम चार सर चार मिलेंगे ठीक है आप करेंगे

837
00:42:57,800 --> 00:43:01,000
receive four yeah in fine and if you
ठीक है, ठीक है और यदि आप

838
00:43:01,000 --> 00:43:02,880
write the same
वही लिखें

839
00:43:02,880 --> 00:43:05,000
condition please don't
शर्त कृपया नहीं

840
00:43:05,000 --> 00:43:10,040
put okay so if we write filter with this
ठीक है अगर हम इसके साथ फ़िल्टर लिखते हैं

841
00:43:10,040 --> 00:43:12,960
condition don't you won't receive four
शर्त आप चार प्राप्त नहीं करेंगे

842
00:43:12,960 --> 00:43:15,960
as a output with Filter condition filter
फ़िल्टर स्थिति फ़िल्टर के साथ एक आउटपुट के रूप में

843
00:43:15,960 --> 00:43:17,960
basically removes removes out the
मूल रूप से हटाता है हटा देता है

844
00:43:17,960 --> 00:43:19,720
elements sir see basically filter
तत्व सर मूल रूप से फ़िल्टर देखते हैं

845
00:43:19,720 --> 00:43:23,640
filters the AR yeah so so it filters the
एआर हाँ को फ़िल्टर करें ताकि यह फ़िल्टर करें

846
00:43:23,640 --> 00:43:25,440
array and it gives the another array as
सरणी और यह एक और सरणी के रूप में देता है

847
00:43:25,440 --> 00:43:28,680
a result Okay so containing only that
एक परिणाम ठीक है तो केवल इतना है

848
00:43:28,680 --> 00:43:32,800
one so okay so you told me 56 78 will be
एक तो ठीक है तो तुमने मुझसे कहा था 56 78 होगा

849
00:43:32,800 --> 00:43:35,599
the output right now you can't uh like
अभी आउटपुट आप की तरह नहीं कर सकते

850
00:43:35,599 --> 00:43:39,040
you told me 56 78 right in fine no yeah
आपने मुझे 56 78 ठीक नहीं कहा है

851
00:43:39,040 --> 00:43:41,839
that's what I'm So yeah so the filter
यही कारण है कि मैं बहुत हाँ हूँ तो फिल्टर

852
00:43:41,839 --> 00:43:43,680
also doing this sir so that's not I
यह भी कर रहा है सर इसलिए मैं नहीं है

853
00:43:43,680 --> 00:43:45,800
didn't run the program I'm pretty sure
कार्यक्रम नहीं चला रहा हूँ मुझे पूरा यकीन है

854
00:43:45,800 --> 00:43:48,079
that the output is wrong so this is this
यह आउटपुट गलत है इसलिए यह है

855
00:43:48,079 --> 00:43:50,960
is yeah so this is for sure find is only
हाँ, तो यह सुनिश्चित करने के लिए है कि केवल है

856
00:43:50,960 --> 00:43:54,119
particularly to finding only one kind uh
विशेष रूप से केवल एक तरह का उह खोजने के लिए

857
00:43:54,119 --> 00:43:56,720
one element uh from the find method sir
खोज विधि से एक तत्व उह सर

858
00:43:56,720 --> 00:44:00,119
okay so find you can't uh you can't do
ठीक है तो आप उह नहीं कर सकते आप नहीं कर सकते

859
00:44:00,119 --> 00:44:02,440
greater than for human to say like you
आप की तरह कहने के लिए इंसान से अधिक

860
00:44:02,440 --> 00:44:05,200
have to find out the one element only
केवल एक तत्व का पता लगाना है

861
00:44:05,200 --> 00:44:07,400
else we can't apply the condition human
और हम हालत मानव को लागू नहीं कर सकते

862
00:44:07,400 --> 00:44:09,640
so if you want if if I want to use if I
तो अगर आप चाहते हैं कि अगर मैं उपयोग करना चाहता हूं तो मैं

863
00:44:09,640 --> 00:44:11,280
want to get more elements as a result I
एक परिणाम के रूप में अधिक तत्व प्राप्त करना चाहते हैं

864
00:44:11,280 --> 00:44:13,160
can use filter method sir yeah that
फ़िल्टर विधि का उपयोग कर सकते हैं सर हाँ

865
00:44:13,160 --> 00:44:16,440
answer but inside find method if we
उत्तर लेकिन अंदर की विधि के अंदर अगर हम

866
00:44:16,440 --> 00:44:19,920
apply num greater than four yeah so I'm
चार से अधिक संख्या लागू करें हाँ तो मैं हूँ

867
00:44:19,920 --> 00:44:22,480
coming to so so if you want to find the
ऐसा आ रहा है अगर आप ढूंढना चाहते हैं

868
00:44:22,480 --> 00:44:24,800
particular index of four like that we
चार का विशेष सूचकांक हम पसंद करते हैं

869
00:44:24,800 --> 00:44:27,160
can use find index but coming to find
खोज का उपयोग कर सकते हैं, लेकिन खोजने के लिए आ रहा है

870
00:44:27,160 --> 00:44:30,720
and uh so we are just uh so previous was
और उह तो हम सिर्फ उह हैं इसलिए पिछले थे

871
00:44:30,720 --> 00:44:33,520
like this sir this is the condition yes
इस सर की तरह यह शर्त है हाँ

872
00:44:33,520 --> 00:44:36,480
yes find number greater than four so
हाँ संख्या को चार से अधिक संख्या का पता लगाएं

873
00:44:36,480 --> 00:44:38,520
basically it is filtering out all the
मूल रूप से यह सभी को फ़िल्टर कर रहा है

874
00:44:38,520 --> 00:44:41,359
numbers I guess 5 6 7 8 will not get as
संख्या मुझे लगता है कि 5 6 7 8 के रूप में नहीं मिलेगा

875
00:44:41,359 --> 00:44:43,319
an output sir so
एक आउटपुट सर तो

876
00:44:43,319 --> 00:44:46,440
what yeah that's what I think five will
क्या हाँ, मुझे लगता है कि पाँच क्या होगा

877
00:44:46,440 --> 00:44:48,680
be coming as an output because it retes
एक आउटपुट के रूप में आ रहा है क्योंकि यह बनाए रखता है

878
00:44:48,680 --> 00:44:53,119
it retrieves only one element uh me okay
यह केवल एक तत्व उह मुझे ठीक करता है

879
00:44:53,119 --> 00:44:57,119
yeah okay took you five minutes to check
हाँ ठीक है आपको जाँच करने में पांच मिनट लग गए

880
00:44:57,119 --> 00:44:59,119
no no no that's what that's why I didn't
नहीं नहीं, यही कारण है कि मैंने ऐसा क्यों नहीं किया

881
00:44:59,119 --> 00:45:01,599
R the program I'm pretty much because
कार्यक्रम कार्यक्रम बहुत ज्यादा है क्योंकि

882
00:45:01,599 --> 00:45:04,200
see filter also do the same and why why
देखें फिल्टर भी ऐसा ही करते हैं और क्यों

883
00:45:04,200 --> 00:45:06,000
find method is what find method is doing
विधि का पता लगाएं क्या विधि कर रहा है

884
00:45:06,000 --> 00:45:07,880
so that's what basically that's what I
तो यह मूल रूप से यही है कि मैं क्या है

885
00:45:07,880 --> 00:45:10,079
was thinking so it it only checks the
सोच रहा था तो यह केवल जाँच करता है

886
00:45:10,079 --> 00:45:12,359
particular number so if five is greater
विशेष संख्या तो अगर पांच अधिक है

887
00:45:12,359 --> 00:45:14,359
than four so why will I get 678 as an
चार से अधिक तो मैं 678 के रूप में क्यों मिलेगा

888
00:45:14,359 --> 00:45:16,079
output so that's why I was confused
आउटपुट तो इसीलिए मैं उलझन में था

889
00:45:16,079 --> 00:45:18,520
there okay yeah so yeah yeah so if you
ठीक है हाँ तो हाँ हाँ तो अगर तुम तो

890
00:45:18,520 --> 00:45:20,800
want more elements we can use filter I'm
अधिक तत्व चाहते हैं हम फ़िल्टर का उपयोग कर सकते हैं मैं हूँ

891
00:45:20,800 --> 00:45:23,200
sorry I wasted a lot of time for this
क्षमा करें, मैंने इसके लिए बहुत समय बर्बाद किया

892
00:45:23,200 --> 00:45:25,680
okay no worries no worries no worries
ठीक है कोई चिंता नहीं कि कोई चिंता नहीं है

893
00:45:25,680 --> 00:45:28,520
yeah okay write map
हाँ ठीक है मानचित्र लिखो

894
00:45:28,520 --> 00:45:32,800
condition here yes okay okay and tell me
यहाँ शर्त हाँ ठीक है ठीक है और मुझे बताओ

895
00:45:32,800 --> 00:45:35,480
what will be the output yeah we can get
आउटपुट क्या होगा हाँ हम प्राप्त कर सकते हैं

896
00:45:35,480 --> 00:45:38,400
another array with this sir another
इस सर के साथ एक और सरणी

897
00:45:38,400 --> 00:45:41,559
array means yeah basically we'll get
सरणी का मतलब है हाँ मूल रूप से हम प्राप्त करेंगे

898
00:45:41,559 --> 00:45:44,680
result of uh see map AR checks for the
UH के परिणाम के लिए मानचित्र Ar चेक देखें

899
00:45:44,680 --> 00:45:47,960
entire elements 1 2 3 so number greater
संपूर्ण तत्व 1 2 3 तो संख्या अधिक

900
00:45:47,960 --> 00:45:50,839
than four
चार से

901
00:45:52,200 --> 00:45:54,800
map this is also doing the same thing
मैप भी यही काम कर रहा है

902
00:45:54,800 --> 00:45:57,520
over here so it will be
यहाँ पर यह होगा

903
00:45:57,520 --> 00:46:00,160
filtering out right 5 6 7 8 will be the
सही 5 6 7 8 को फ़िल्टर करना होगा

904
00:46:00,160 --> 00:46:03,079
output yeah I'm guessing that only sir
आउटपुट हाँ, मैं अनुमान लगा रहा हूँ कि केवल सर

905
00:46:03,079 --> 00:46:06,880
definition of map method it goes
मानचित्र विधि की परिभाषा यह जाती है

906
00:46:06,880 --> 00:46:10,839
herewhere yeah see map basically uh give
यहाँ हाँ देखें मानचित्र मूल रूप से उह दे

907
00:46:10,839 --> 00:46:15,680
the result of uh map basically tries to
UH मानचित्र का परिणाम मूल रूप से कोशिश करता है

908
00:46:15,680 --> 00:46:18,079
imute the original array and give
मूल सरणी को imute और दे

909
00:46:18,079 --> 00:46:23,200
this another array as a result yeah so
एक परिणाम के रूप में यह एक और सरणी हाँ तो

910
00:46:23,200 --> 00:46:25,119
yeah also it is doing the same thing so
हाँ, यह एक ही काम कर रहा है

911
00:46:25,119 --> 00:46:27,599
it will give 56 78
यह 56 78 देगा

912
00:46:27,599 --> 00:46:30,640
yeah yeah and filter if you apply then
हाँ हाँ और फ़िल्टर यदि आप आवेदन करते हैं तो

913
00:46:30,640 --> 00:46:32,520
yeah it is also doing the same thing I'm
हाँ, यह भी वही काम कर रहा है मैं

914
00:46:32,520 --> 00:46:34,040
not sure with the map method so I don't
मानचित्र विधि के साथ निश्चित नहीं है इसलिए मैं नहीं

915
00:46:34,040 --> 00:46:36,680
want to waste more time okay okay okay
अधिक समय बर्बाद करना चाहते हैं ठीक है ठीक है

916
00:46:36,680 --> 00:46:38,359
you can learn this
आप यह सीख सकते हैं

917
00:46:38,359 --> 00:46:40,520
then
तब

918
00:46:40,520 --> 00:46:45,400
yeah oh okay I I I I I seriously thought
हाँ ओह ठीक है मैं मैं मैं गंभीरता से सोचा था

919
00:46:45,400 --> 00:46:48,400
the solution but I was not sure so this
समाधान लेकिन मुझे यकीन नहीं था कि यह

920
00:46:48,400 --> 00:46:49,960
condition will apply on each element
प्रत्येक तत्व पर स्थिति लागू होगी

921
00:46:49,960 --> 00:46:53,119
exactly okay okay okay in the mapod okay
बिल्कुल ठीक है ठीक है ठीक है

922
00:46:53,119 --> 00:46:57,040
okay uh we'll move to react GS okay uh
ठीक है उह हम रिएक्ट करने के लिए आगे बढ़ेंगे gs ठीक है उह

923
00:46:57,040 --> 00:46:59,319
can you tell me can you tell me the
क्या आप मुझे बता सकते हैं कि क्या आप मुझे बता सकते हैं

924
00:46:59,319 --> 00:47:01,800
difference between react and Angular
प्रतिक्रिया और कोणीय के बीच अंतर

925
00:47:01,800 --> 00:47:05,480
JS react and angular yes okay basically
जेएस रिएक्ट और कोणीय हाँ ठीक है मूल रूप से

926
00:47:05,480 --> 00:47:07,760
uh I didn't work on angular so I'm not
उह मैं कोणीय पर काम नहीं किया इसलिए मैं नहीं हूं

927
00:47:07,760 --> 00:47:10,440
aware much of angular coming to you must
आपके पास आ रहा है कोणीय के बारे में पता होना चाहिए

928
00:47:10,440 --> 00:47:13,960
be awaring aware of Frameworks yeah
फ्रेमवर्क के बारे में जागरूक हो

929
00:47:13,960 --> 00:47:16,640
basically yeah yeah so basically react
मूल रूप से हाँ हाँ तो मूल रूप से प्रतिक्रिया

930
00:47:16,640 --> 00:47:19,680
Works uh with the help of hooks sir so
हुक सर की मदद से उह काम करता है

931
00:47:19,680 --> 00:47:22,280
like before starting react GS you didn't
जैसे कि रिएक्ट जीएस शुरू करने से पहले आपने नहीं किया

932
00:47:22,280 --> 00:47:24,839
compare any other Frameworks with react
प्रतिक्रिया के साथ किसी भी अन्य फ्रेमवर्क की तुलना करें

933
00:47:24,839 --> 00:47:27,559
GS or like you just
जीएस या आप की तरह बस

934
00:47:27,559 --> 00:47:30,520
had an idea that react react is more
एक विचार था कि प्रतिक्रिया प्रतिक्रिया अधिक है

935
00:47:30,520 --> 00:47:33,559
familiar n and react is more familiar to
परिचित n और प्रतिक्रिया अधिक परिचित है

936
00:47:33,559 --> 00:47:36,800
use so it can be familiar like uh
उपयोग करें तो यह उह की तरह परिचित हो सकता है

937
00:47:36,800 --> 00:47:38,400
familiar in the sense it can be less
इस अर्थ में परिचित यह कम हो सकता है

938
00:47:38,400 --> 00:47:40,440
comp complexity compared to another
एक और की तुलना में जटिल जटिलता

939
00:47:40,440 --> 00:47:43,559
Frameworks or angular or views okay so
फ्रेमवर्क या कोणीय या दृश्य ठीक है

940
00:47:43,559 --> 00:47:45,800
yeah so I was comparing uh so what is
हाँ तो मैं उह की तुलना कर रहा था तो क्या है

941
00:47:45,800 --> 00:47:47,960
what so react basically runs with the
मूल रूप से क्या प्रतिक्रिया के साथ चलती है

942
00:47:47,960 --> 00:47:50,359
help of hooks and State Management okay
हुक और राज्य प्रबंधन की मदद ठीक है

943
00:47:50,359 --> 00:47:53,079
okay yeah so this cannot be done in
ठीक है हाँ तो यह नहीं किया जा सकता है

944
00:47:53,079 --> 00:47:56,240
angular of us if I'm not wrong okay and
अगर मैं गलत नहीं हूं तो हम में से कोणीय

945
00:47:56,240 --> 00:48:00,359
uh the this react is a framework right
उह यह प्रतिक्रिया एक रूपरेखा सही है

946
00:48:00,359 --> 00:48:02,880
no no it's a library sir it's a library
नहीं नहीं यह एक पुस्तकालय है सर यह एक पुस्तकालय है

947
00:48:02,880 --> 00:48:05,680
okay so angular and VJ are Frameworks so
ठीक है तो कोणीय और वीजे फ्रेमवर्क हैं

948
00:48:05,680 --> 00:48:08,599
coming to react is a library okay and uh
प्रतिक्रिया करने के लिए आ रहा है एक पुस्तकालय ठीक है और उह

949
00:48:08,599 --> 00:48:10,520
you do you know the difference between
आप के बीच अंतर जानते हैं

950
00:48:10,520 --> 00:48:13,760
framework and Library yeah so see uh
फ्रेमवर्क और लाइब्रेरी हाँ तो उह देखें

951
00:48:13,760 --> 00:48:16,720
basically Library contains modules
मूल रूप से पुस्तकालय में मॉड्यूल होते हैं

952
00:48:16,720 --> 00:48:19,319
framework contains libraries so inside
फ्रेमवर्क में लाइब्रेरी होते हैं, इसलिए अंदर

953
00:48:19,319 --> 00:48:20,920
libraries we may have n number of
पुस्तकालयों में हमारे पास n की संख्या हो सकती है

954
00:48:20,920 --> 00:48:23,640
modules so but inside one Library we
मॉड्यूल तो लेकिन एक पुस्तकालय के अंदर हम

955
00:48:23,640 --> 00:48:26,800
only have modules okay so can you tell
केवल मॉड्यूल ठीक है तो आप बता सकते हैं

956
00:48:26,800 --> 00:48:29,520
tell me the difference between uh use
मुझे उह उपयोग के बीच का अंतर बताओ

957
00:48:29,520 --> 00:48:32,160
memo and use callback use memo and use
मेमो और उपयोग कॉलबैक का उपयोग मेमो और उपयोग करें

958
00:48:32,160 --> 00:48:34,079
callback okay so these are M used for
कॉलबैक ठीक है तो इनका उपयोग किया जाता है के लिए उपयोग किया जाता है

959
00:48:34,079 --> 00:48:35,920
the performance optimization in the
में प्रदर्शन अनुकूलन

960
00:48:35,920 --> 00:48:38,800
websites so for example uh if you want
यदि आप चाहते हैं कि उदाहरण के लिए वेबसाइटें

961
00:48:38,800 --> 00:48:42,559
to uh prevent a component uh if if you
यदि आप यदि आप एक घटक को रोकते हैं तो उह को रोकें

962
00:48:42,559 --> 00:48:44,960
want to prevent a comp see let's say for
एक COMP को रोकना चाहते हैं देखें कि चलो कहते हैं

963
00:48:44,960 --> 00:48:48,319
for example I have a complex calculation
उदाहरण के लिए मेरी एक जटिल गणना है

964
00:48:48,319 --> 00:48:51,119
inside one function so I know the result
एक फ़ंक्शन के अंदर इसलिए मुझे परिणाम पता है

965
00:48:51,119 --> 00:48:53,160
uh after every render I know the result
उह हर रेंडर के बाद मुझे परिणाम पता है

966
00:48:53,160 --> 00:48:55,319
is same so why should the component
ऐसा ही है कि घटक क्यों होना चाहिए

967
00:48:55,319 --> 00:48:57,119
render every time so in this kind of
इस तरह के हर बार रेंडर करें

968
00:48:57,119 --> 00:48:59,400
cases I can use use memo to prevent
उन मामलों को मैं रोकने के लिए मेमो का उपयोग कर सकता हूं

969
00:48:59,400 --> 00:49:01,839
unnecessary renders to reduce the
कम करने के लिए अनावश्यक प्रतिपादन करता है

970
00:49:01,839 --> 00:49:03,359
perform to increase the performance
प्रदर्शन बढ़ाने के लिए प्रदर्शन करें

971
00:49:03,359 --> 00:49:06,359
optimization so what use call back does
ऑप्टिमाइज़ेशन तो कॉल बैक का उपयोग क्या करता है

972
00:49:06,359 --> 00:49:09,960
so basically use use memo Works only for
तो मूल रूप से उपयोग ज्ञापन का उपयोग केवल के लिए काम करता है

973
00:49:09,960 --> 00:49:12,440
the expressions and values so use call
भाव और मान इसलिए कॉल का उपयोग करें

974
00:49:12,440 --> 00:49:14,400
back only works with the functions so if
वापस केवल कार्यों के साथ काम करता है तो अगर

975
00:49:14,400 --> 00:49:16,720
we want to prevent a function from the
हम एक फ़ंक्शन को रोकना चाहते हैं

976
00:49:16,720 --> 00:49:18,760
render an unnecessary render we can use
एक अनावश्यक रेंडर रेंडर करें जिसका हम उपयोग कर सकते हैं

977
00:49:18,760 --> 00:49:21,079
use call back okay okay we have a
कॉल बैक बैक ओके ठीक है, हमारे पास ए

978
00:49:21,079 --> 00:49:22,720
particular derived state or if you have
विशेष रूप से व्युत्पन्न राज्य या यदि आपके पास है

979
00:49:22,720 --> 00:49:25,480
a particular value or the calculation so
एक विशेष मूल्य या गणना तो

980
00:49:25,480 --> 00:49:26,720
it's not a function it's just a
यह एक समारोह नहीं है यह सिर्फ एक है

981
00:49:26,720 --> 00:49:28,240
calculation or it's just an array of
गणना या यह सिर्फ एक सरणी है

982
00:49:28,240 --> 00:49:30,760
objects or we can say just an initial
वस्तुएं या हम सिर्फ एक प्रारंभिक कह सकते हैं

983
00:49:30,760 --> 00:49:33,839
State passing to the component as props
प्रॉप्स के रूप में घटक को गुजरना राज्य

984
00:49:33,839 --> 00:49:35,559
so in
तो

985
00:49:35,559 --> 00:49:38,160
the okay
ठीक

986
00:49:38,160 --> 00:49:41,880
okay so uh you have worked on functional
ठीक है तो उह आपने कार्यात्मक पर काम किया है

987
00:49:41,880 --> 00:49:44,359
right not class I have on function
राइट क्लास मेरे पास फ़ंक्शन पर है

988
00:49:44,359 --> 00:49:47,440
function components okay uh
समारोह घटक ठीक है उह

989
00:49:47,440 --> 00:49:51,440
so so uh do you know life cycle methods
तो उह क्या आप जीवन चक्र के तरीकों को जानते हैं

990
00:49:51,440 --> 00:49:54,799
life cycle methods yes I'm not sure sir
जीवन चक्र के तरीके हाँ मुझे यकीन नहीं है सर

991
00:49:54,799 --> 00:49:57,480
I don't know that unmount mounting
मुझे नहीं पता कि अनमाउंट माउंटिंग

992
00:49:57,480 --> 00:49:59,280
updating yeah yeah yeah unmounting
अद्यतन हाँ हाँ हाँ unmounting

993
00:49:59,280 --> 00:50:01,160
mounting yes so these are the life cycle
बढ़ते हाँ तो ये जीवन चक्र हैं

994
00:50:01,160 --> 00:50:04,200
methods okay so how you can do in uh
विधियाँ ठीक हैं तो आप उह में कैसे कर सकते हैं

995
00:50:04,200 --> 00:50:06,599
functional components mounting and
कार्यात्मक घटक बढ़ते और

996
00:50:06,599 --> 00:50:09,040
unmounting mounting updating say
अनमाउंटिंग माउंटिंग अपडेटिंग का कहना है

997
00:50:09,040 --> 00:50:11,480
basically uh uh I have worked on a
मूल रूप से उह उह मैंने एक पर काम किया है

998
00:50:11,480 --> 00:50:13,760
project called uh like I was switching
उह की तरह मैं स्विच कर रहा था

999
00:50:13,760 --> 00:50:15,880
some of the movies with the help of API
एपीआई की मदद से कुछ फिल्में

1000
00:50:15,880 --> 00:50:18,200
okay so I want to uh see for example I
ठीक है तो मैं उदाहरण के लिए uh देखना चाहता हूं

1001
00:50:18,200 --> 00:50:20,599
want to render create another component
एक और घटक बनाना चाहते हैं

1002
00:50:20,599 --> 00:50:23,160
okay so I want to render with a
ठीक है इसलिए मैं एक के साथ रेंडर करना चाहता हूं

1003
00:50:23,160 --> 00:50:25,079
particular expression is true or false
विशेष अभिव्यक्ति सही या गलत है

1004
00:50:25,079 --> 00:50:27,079
so if if the statement is true I want to
इसलिए अगर बयान सच है तो मैं चाहता हूं

1005
00:50:27,079 --> 00:50:28,960
mount the component so there I can use
घटक को माउंट करें ताकि मैं उपयोग कर सकूं

1006
00:50:28,960 --> 00:50:30,599
conditional rendering in the parent
माता -पिता में सशर्त प्रतिपादन

1007
00:50:30,599 --> 00:50:33,000
component whereas and the main component
घटक जबकि और मुख्य घटक

1008
00:50:33,000 --> 00:50:34,920
so that it basically renders or mounts
ताकि यह मूल रूप से प्रतिपादन या माउंट करता है

1009
00:50:34,920 --> 00:50:38,480
or unmounts based on the condition so so
या इस स्थिति के आधार पर unmounts

1010
00:50:38,480 --> 00:50:41,440
yeah so it's it's Sim it's very nearer
हाँ, तो यह सिम है यह बहुत निकट है

1011
00:50:41,440 --> 00:50:44,880
to this okay but I guess yeah so I'm not
यह ठीक है, लेकिन मुझे लगता है कि हाँ मैं नहीं हूँ

1012
00:50:44,880 --> 00:50:47,480
sure of that so we can mount or unmount
इसके बारे में यकीन है कि हम माउंट या अनमाउंट कर सकते हैं

1013
00:50:47,480 --> 00:50:49,520
the particular component in the UI or
UI या में विशेष घटक

1014
00:50:49,520 --> 00:50:51,440
Dom with the with the help of a
एक की मदद के साथ डोम

1015
00:50:51,440 --> 00:50:52,920
particular condition so we can
विशेष स्थिति तो हम कर सकते हैं

1016
00:50:52,920 --> 00:50:54,680
conditional rendering we can
सशर्त प्रतिपादन हम कर सकते हैं

1017
00:50:54,680 --> 00:50:56,640
conditionally render whether whether the
सशर्त रूप से प्रस्तुत करें कि क्या

1018
00:50:56,640 --> 00:50:58,599
component is mounting or not mounting
घटक बढ़ रहा है या नहीं बढ़ रहा है

1019
00:50:58,599 --> 00:51:00,960
can you tell me the use can you tell me
क्या आप मुझे बता सकते हैं कि आप मुझे बता सकते हैं

1020
00:51:00,960 --> 00:51:03,000
the use effect
उपयोग प्रभाव

1021
00:51:03,000 --> 00:51:06,119
syntax okay can I write here yeah if you
सिंटैक्स ठीक है मैं यहाँ हाँ लिख सकता हूँ यदि आप

1022
00:51:06,119 --> 00:51:08,880
can see it's fine if you can if you want
यदि आप चाहें तो देख सकते हैं कि यह ठीक है

1023
00:51:08,880 --> 00:51:12,200
to write that's
यह लिखने के लिए

1024
00:51:13,400 --> 00:51:16,960
also yeah so this is the syntax okay so
इसके अलावा हाँ तो यह वाक्यविन्यास ठीक है तो

1025
00:51:16,960 --> 00:51:22,960
us okay so dependency suppose uh okay if
हमें ठीक है तो निर्भरता मान लीजिए उह ठीक है

1026
00:51:22,960 --> 00:51:26,599
you want to run on a prop change if you
यदि आप एक प्रोप चेंज पर दौड़ना चाहते हैं तो आप

1027
00:51:26,599 --> 00:51:28,440
want to run this call back function on a
इस कॉल बैक फ़ंक्शन को एक पर चलाना चाहते हैं

1028
00:51:28,440 --> 00:51:30,559
particular prop change Suppose there is
विशेष रूप से प्रोप चेंज मान लीजिए कि वहाँ है

1029
00:51:30,559 --> 00:51:34,599
a uh ABC Suppose there is a ABC State
एक उह एबीसी मान लीजिए कि एक एबीसी राज्य है

1030
00:51:34,599 --> 00:51:40,760
and you want to render on that St State
और आप उस सेंट राज्य पर प्रस्तुत करना चाहते हैं

1031
00:51:41,559 --> 00:51:45,240
change okay so this is the initial state
ठीक है, इसलिए यह प्रारंभिक अवस्था है

1032
00:51:45,240 --> 00:51:48,240
so uh we are passing this prop to this
तो उह हम इस प्रोप को पारित कर रहे हैं

1033
00:51:48,240 --> 00:51:50,799
component right so what you will do if
घटक सही तो आप क्या करेंगे अगर

1034
00:51:50,799 --> 00:51:54,040
you want to just run this use I just
आप बस इस उपयोग को चलाना चाहते हैं मैं बस

1035
00:51:54,040 --> 00:51:56,880
okay I can just uh access this prop as a
ठीक है, मैं सिर्फ इस प्रोप को एक के रूप में एक्सेस कर सकता हूं

1036
00:51:56,880 --> 00:52:01,040
dependency got okay fine so what's the
निर्भरता ठीक है ठीक है तो क्या है

1037
00:52:01,040 --> 00:52:03,480
difference between use State and user
उपयोग राज्य और उपयोगकर्ता के बीच अंतर

1038
00:52:03,480 --> 00:52:06,079
have you worked on user Ed user yes yes
क्या आपने उपयोगकर्ता ईडी उपयोगकर्ता पर काम किया है हाँ हाँ

1039
00:52:06,079 --> 00:52:08,400
I okay so what's the difference I'm
मैं ठीक हूं तो मैं क्या अंतर कर रहा हूँ

1040
00:52:08,400 --> 00:52:11,200
sorry sir use red user and use State
क्षमा करें सर लाल उपयोगकर्ता का उपयोग करें और राज्य का उपयोग करें

1041
00:52:11,200 --> 00:52:15,440
okay so uh see basically use reducer is
ठीक है, इसलिए उह देखें मूल रूप से रिड्यूसर का उपयोग करें

1042
00:52:15,440 --> 00:52:18,960
a more easiest way to access the State
राज्य तक पहुंचने का एक अधिक आसान तरीका

1043
00:52:18,960 --> 00:52:22,160
Management see if you want for example
प्रबंधन देखें कि क्या आप उदाहरण के लिए चाहते हैं

1044
00:52:22,160 --> 00:52:25,880
uh there is ABC State and uh another
उह वहाँ एबीसी राज्य और उह एक और है

1045
00:52:25,880 --> 00:52:27,960
state there is called DBC so here
राज्य को यहाँ dbc कहा जाता है

1046
00:52:27,960 --> 00:52:29,559
unnecessarily we are creating two kind
अनावश्यक रूप से हम दो तरह का निर्माण कर रहे हैं

1047
00:52:29,559 --> 00:52:31,680
of H States variables over here and we
एच के यहाँ और हम पर चर हैं

1048
00:52:31,680 --> 00:52:34,640
are increasing the memory so use reducer
मेमोरी बढ़ा रहे हैं इसलिए रिड्यूसर का उपयोग करें

1049
00:52:34,640 --> 00:52:36,680
basically works with the initial State
मूल रूप से प्रारंभिक राज्य के साथ काम करता है

1050
00:52:36,680 --> 00:52:38,599
and the reducer function so we can
और reducer कार्य तो हम कर सकते हैं

1051
00:52:38,599 --> 00:52:40,440
Define n number of State variables in
में राज्य चर की संख्या को परिभाषित करें

1052
00:52:40,440 --> 00:52:42,280
inside the switch cases and we can just
स्विच मामलों के अंदर और हम बस कर सकते हैं

1053
00:52:42,280 --> 00:52:45,240
pass uh the dispatch function and we can
उह पास डिस्पैच फ़ंक्शन और हम कर सकते हैं

1054
00:52:45,240 --> 00:52:46,839
update the function inside the use
उपयोग के अंदर फ़ंक्शन को अपडेट करें

1055
00:52:46,839 --> 00:52:49,240
reducer itself so it basically uh
reducer ही यह मूल रूप से उह है

1056
00:52:49,240 --> 00:52:51,319
reduces the it basically increases the
इसे कम करता है मूल रूप से बढ़ता है

1057
00:52:51,319 --> 00:52:54,520
performance optimization sir which use R
प्रदर्शन अनुकूलन सर जो आर का उपयोग करते हैं

1058
00:52:54,520 --> 00:52:58,000
user okay okay so use reducer is much
उपयोगकर्ता ठीक है ठीक है इसलिए उपयोग करना बहुत अधिक है

1059
00:52:58,000 --> 00:53:01,359
more preferred human yes yes yes because
अधिक पसंदीदा मानव हाँ हाँ हाँ क्योंकि

1060
00:53:01,359 --> 00:53:04,040
we can uh we can manage the entire
हम कर सकते हैं हम पूरे का प्रबंधन कर सकते हैं

1061
00:53:04,040 --> 00:53:07,280
websites uh State inside a switch case
एक स्विच केस के अंदर वेबसाइट यूएच राज्य

1062
00:53:07,280 --> 00:53:10,000
Okay okay so okay yeah we don't need to
ठीक है ठीक है तो ठीक है हाँ, हमें जरूरत नहीं है

1063
00:53:10,000 --> 00:53:11,960
create any any number of you state
आप किसी भी संख्या को आप राज्य बनाएं

1064
00:53:11,960 --> 00:53:14,720
variables so we can just assign uh all
चर तो हम बस सभी को असाइन कर सकते हैं

1065
00:53:14,720 --> 00:53:16,160
the state variables inside the initial
प्रारंभिक के अंदर राज्य चर

1066
00:53:16,160 --> 00:53:18,000
State and we can pass that object as a
राज्य और हम उस वस्तु को एक के रूप में पारित कर सकते हैं

1067
00:53:18,000 --> 00:53:22,240
pro as a parameter to the US user hook
अमेरिकी उपयोगकर्ता हुक के लिए एक पैरामीटर के रूप में प्रो

1068
00:53:22,240 --> 00:53:24,720
okay okay uh what's the difference
ठीक है ठीक है उह क्या अंतर है

1069
00:53:24,720 --> 00:53:28,599
between uh Contex Redux context API
UH संदर्भ redux संदर्भ एपीआई के बीच

1070
00:53:28,599 --> 00:53:29,680
basically works for the smaller
मूल रूप से छोटे के लिए काम करता है

1071
00:53:29,680 --> 00:53:32,559
application sir so context API is an
आवेदन सर तो संदर्भ एपीआई एक है

1072
00:53:32,559 --> 00:53:35,119
inbuilt version of the react but whereas
प्रतिक्रिया का इनबिल्ट संस्करण लेकिन जबकि जबकि

1073
00:53:35,119 --> 00:53:36,599
Redux is an external library for
Redux के लिए एक बाहरी पुस्तकालय है

1074
00:53:36,599 --> 00:53:39,079
managing Global State okay so it is also
वैश्विक राज्य का प्रबंधन ठीक है तो यह भी है

1075
00:53:39,079 --> 00:53:41,880
similar to The Used reducer Redux works
उपयोग किए गए Reducer Redux कामों के समान

1076
00:53:41,880 --> 00:53:45,119
are similar to The use reducer so uh uh
उपयोग reducer के समान हैं इसलिए उह उह

1077
00:53:45,119 --> 00:53:46,839
the difference is uh in Redux we need to
अंतर UH में Redux में हमें चाहिए

1078
00:53:46,839 --> 00:53:49,400
create a store uh for managing all kinds
सभी प्रकार के प्रबंधन के लिए एक स्टोर उह बनाएं

1079
00:53:49,400 --> 00:53:51,559
of global state in that and we need to
उसमें वैश्विक राज्य और हमें इसकी आवश्यकता है

1080
00:53:51,559 --> 00:53:53,680
import the modules so basically redex
मॉड्यूल आयात करें ताकि मूल रूप से Redex

1081
00:53:53,680 --> 00:53:56,599
works of as an external Library external
बाहरी पुस्तकालय बाहरी के रूप में काम करता है

1082
00:53:56,599 --> 00:53:59,559
module so we need to import that and we
मॉड्यूल इसलिए हमें वह आयात करने की आवश्यकता है और हम

1083
00:53:59,559 --> 00:54:01,400
need to work coming to context API it is
संदर्भ एपीआई में आने के लिए काम करने की आवश्यकता है

1084
00:54:01,400 --> 00:54:03,119
an inbuilt version of react and we can
प्रतिक्रिया का एक इनबिल्ट संस्करण और हम कर सकते हैं

1085
00:54:03,119 --> 00:54:06,040
manage the state for the simpler and
सरल के लिए राज्य का प्रबंधन करें और

1086
00:54:06,040 --> 00:54:09,119
smaller applications okay so prop do you
छोटे अनुप्रयोग ठीक है तो आप प्रोप करते हैं

1087
00:54:09,119 --> 00:54:12,480
know what is prop trailing yes yes I'm
पता है कि क्या है हाँ हाँ मैं हूँ

1088
00:54:12,480 --> 00:54:15,599
of so proping for example uh if we have
उदाहरण के लिए उह के लिए इतना है कि अगर हमारे पास है

1089
00:54:15,599 --> 00:54:18,880
a main component as one and we have a uh
एक के रूप में एक मुख्य घटक और हमारे पास एक उह है

1090
00:54:18,880 --> 00:54:22,240
child component until six see if we if
छह तक बाल घटक देखें अगर हम अगर हम

1091
00:54:22,240 --> 00:54:24,040
you want to access the prop which is
आप उस प्रोप का उपयोग करना चाहते हैं जो है

1092
00:54:24,040 --> 00:54:27,040
passed at the one and the same ins so we
एक और एक ही ins पर पारित किया गया है तो हम

1093
00:54:27,040 --> 00:54:29,640
need to pass the props for the
के लिए प्रॉप्स पास करने की आवश्यकता है

1094
00:54:29,640 --> 00:54:33,799
entire also okay to prevent this we
हम इसे रोकने के लिए भी ठीक है

1095
00:54:33,799 --> 00:54:35,480
actually use context API or redex to
वास्तव में संदर्भ एपीआई या REDEX का उपयोग करें

1096
00:54:35,480 --> 00:54:37,559
manage the state globally so that can be
विश्व स्तर पर राज्य का प्रबंधन करें ताकि हो सके

1097
00:54:37,559 --> 00:54:40,160
available with all all the every
सभी के साथ उपलब्ध है

1098
00:54:40,160 --> 00:54:42,280
component which is used inside yeah
घटक जो हाँ के अंदर उपयोग किया जाता है

1099
00:54:42,280 --> 00:54:44,839
exactly yes okay okay you haven't worked
बिल्कुल हाँ ठीक है ठीक है आपने काम नहीं किया है

1100
00:54:44,839 --> 00:54:48,680
with class right yeah yeah no no okay uh
क्लास राइट के साथ हाँ हाँ नहीं ठीक उह

1101
00:54:48,680 --> 00:54:50,440
see basically the time of starting uh
मूल रूप से उह शुरू करने का समय देखें

1102
00:54:50,440 --> 00:54:52,400
learning react only I was startingly
सीखना प्रतिक्रिया केवल मैं शुरू था

1103
00:54:52,400 --> 00:54:53,880
focusing on functional components more
कार्यात्मक घटकों पर अधिक ध्यान केंद्रित करना

1104
00:54:53,880 --> 00:54:58,319
than class class comp no it is no it is
क्लास क्लास कॉम्प की तुलना में यह नहीं है कि यह नहीं है

1105
00:54:58,880 --> 00:55:02,520
uh there is a app.js file in react so
उह वहाँ एक app.js फ़ाइल है प्रतिक्रिया में है

1106
00:55:02,520 --> 00:55:06,079
what's the role of app.js file so all
App.js फ़ाइल की भूमिका क्या है इसलिए सभी

1107
00:55:06,079 --> 00:55:08,520
the uh main logic presents inside the
उह मुख्य तर्क अंदर प्रस्तुत करता है

1108
00:55:08,520 --> 00:55:11,160
log app.js and uh we'll render that
लॉग app.js और उह हम इसे प्रस्तुत करेंगे

1109
00:55:11,160 --> 00:55:14,359
app.js file inside the index.js okay
app.js फ़ाइल index.js ठीक है

1110
00:55:14,359 --> 00:55:17,720
okay so that index.js helps to uh
ठीक है ताकि index.js UH में मदद करता है

1111
00:55:17,720 --> 00:55:21,440
connect uh start the server okay so the
कनेक्ट उह सर्वर शुरू करें तो ठीक है

1112
00:55:21,440 --> 00:55:24,160
basic code it is present you me to yeah
बुनियादी कोड यह मुझे हाँ करने के लिए मौजूद है

1113
00:55:24,160 --> 00:55:27,599
for example uh if we uh first create uh
उदाहरण के लिए उह अगर हम पहले उह बनाते हैं

1114
00:55:27,599 --> 00:55:30,319
uh create a project using CRM or a white
उह सीआरएम या एक सफेद का उपयोग करके एक परियोजना बनाएं

1115
00:55:30,319 --> 00:55:32,760
so basically the main logic we need to
तो मूल रूप से मुख्य तर्क हमें करने की आवश्यकता है

1116
00:55:32,760 --> 00:55:35,839
write uh is uh inside we should write
लिखो उह उह अंदर है जिसे हमें लिखना चाहिए

1117
00:55:35,839 --> 00:55:39,240
inside app.js so that files r r render
अंदर app.js ताकि फ़ाइलें r r रेंडर

1118
00:55:39,240 --> 00:55:41,480
inside the server so that is basically
सर्वर के अंदर ताकि मूल रूप से हो

1119
00:55:41,480 --> 00:55:43,720
present inside the index.js so this is
Index.js के अंदर मौजूद है तो यह है

1120
00:55:43,720 --> 00:55:45,559
the format so if you want to remove
यदि आप हटाना चाहते हैं तो प्रारूप तो

1121
00:55:45,559 --> 00:55:48,039
app.js as a main file we can create a
app.js एक मुख्य फ़ाइल के रूप में हम एक बना सकते हैं

1122
00:55:48,039 --> 00:55:49,720
custom components that we want and we
कस्टम घटक जो हम चाहते हैं और हम

1123
00:55:49,720 --> 00:55:51,920
can render that inside the
अंदर ही प्रस्तुत कर सकते हैं

1124
00:55:51,920 --> 00:55:57,039
index.js okay uh can you tell me uh Js
index.js ठीक है उह आप मुझे उह js बता सकते हैं

1125
00:55:57,039 --> 00:56:00,960
firstly tell me what is js6 uh js6 uh
सबसे पहले मुझे बताएं कि JS6 UH JS6 UH क्या है

1126
00:56:00,960 --> 00:56:03,760
basically react is invented uh for the
मूल रूप से प्रतिक्रिया का आविष्कार UH के लिए किया गया है

1127
00:56:03,760 --> 00:56:06,280
purpose of jsx only so jsx is nothing
JSX का उद्देश्य केवल JSX कुछ भी नहीं है

1128
00:56:06,280 --> 00:56:08,160
but we can write HTML JavaScript and
लेकिन हम HTML जावास्क्रिप्ट लिख सकते हैं और

1129
00:56:08,160 --> 00:56:11,960
react inside one particular format so
एक विशेष प्रारूप के अंदर प्रतिक्रिया करें

1130
00:56:11,960 --> 00:56:14,720
previously without react uh we we can uh
पहले बिना प्रतिक्रिया के उह हम उह कर सकते हैं

1131
00:56:14,720 --> 00:56:17,119
we used to see HTML for separate file
हम अलग फ़ाइल के लिए HTML देखते थे

1132
00:56:17,119 --> 00:56:19,400
CSS for separate file and JavaScript for
अलग फ़ाइल और जावास्क्रिप्ट के लिए सीएसएस

1133
00:56:19,400 --> 00:56:21,680
separate file right so jsx helps to
अलग फ़ाइल सही तो jsx मदद करता है

1134
00:56:21,680 --> 00:56:24,000
write all these particular statements
ये सभी विशेष कथन लिखें

1135
00:56:24,000 --> 00:56:26,599
inside one particular component that is
एक विशेष घटक के अंदर जो है

1136
00:56:26,599 --> 00:56:29,760
called react okay so web browsers can
कहा जाता है कि वेब ब्राउज़र ठीक हो सकते हैं

1137
00:56:29,760 --> 00:56:35,000
read jsx directly right web browsers yes
JSX सीधे सही वेब ब्राउज़र पढ़ें

1138
00:56:35,000 --> 00:56:37,520
it can be read by the virtual D we do
यह वर्चुअल डी द्वारा पढ़ा जा सकता है

1139
00:56:37,520 --> 00:56:41,079
render on the uh web page right so
UH वेब पेज पर सही रेंडर करें

1140
00:56:41,079 --> 00:56:43,200
exactly they are understandable with
वास्तव में वे समझ में आ रहे हैं

1141
00:56:43,200 --> 00:56:47,200
browsers right I guess yeah yeah it may
ब्राउज़र्स सही है मुझे लगता है कि हाँ यह हो सकता है

1142
00:56:47,200 --> 00:56:49,680
be understandable but uh for uh
उह के लिए समझ योग्य हो लेकिन उह

1143
00:56:49,680 --> 00:56:51,680
rerenders or for updating particular
Rerenders या विशेष रूप से अद्यतन करने के लिए

1144
00:56:51,680 --> 00:56:54,280
components first a virtual Dom reads the
घटक पहले एक वर्चुअल डोम पढ़ता है

1145
00:56:54,280 --> 00:56:56,680
code base and after updating the virtual
कोड बेस और वर्चुअल को अपडेट करने के बाद

1146
00:56:56,680 --> 00:56:59,960
Dom it directly Paints in the UI I guess
डोम यह सीधे यूआई में पेंट करता है मुझे लगता है

1147
00:56:59,960 --> 00:57:03,480
so Babel what's the role of bble then
तो बाबेल की भूमिका क्या है

1148
00:57:03,480 --> 00:57:07,720
Babel yes not sure what B is Sir uh you
बाबेल हाँ निश्चित नहीं है कि बी क्या है सर उह आप

1149
00:57:07,720 --> 00:57:10,520
don't know B compiler yeah okay no
पता नहीं बी संकलक हाँ ठीक नहीं है

1150
00:57:10,520 --> 00:57:12,720
worries no worries okay tell me the
चिंता कोई चिंता नहीं है ठीक है मुझे बताओ

1151
00:57:12,720 --> 00:57:14,559
difference between the real Dome and the
असली गुंबद और के बीच अंतर

1152
00:57:14,559 --> 00:57:15,880
virtual
आभासी

1153
00:57:15,880 --> 00:57:21,799
Dome yeah real uh see uh uh for example
गुंबद हाँ असली उह उदाहरण के लिए उह उह देखें

1154
00:57:21,799 --> 00:57:23,720
there are three states that are
तीन राज्य हैं जो हैं

1155
00:57:23,720 --> 00:57:26,559
frequently updating on every random so
बार -बार हर यादृच्छिक पर अपडेट करना

1156
00:57:26,559 --> 00:57:30,000
uh uh our uh main updated values
उह हमारे उह मुख्य अद्यतन मान

1157
00:57:30,000 --> 00:57:32,160
directly won't be get affected into UI
सीधे यूआई में प्रभावित नहीं होगा

1158
00:57:32,160 --> 00:57:34,920
so first the code uh that update happens
तो पहले कोड UH है कि अपडेट होता है

1159
00:57:34,920 --> 00:57:36,960
in the virtual Dom so after the virtual
वर्चुअल डोम में इसलिए वर्चुअल के बाद

1160
00:57:36,960 --> 00:57:39,520
Dom it gets printed in the UI yeah so
डोम यह ui में मुद्रित हो जाता है हाँ तो

1161
00:57:39,520 --> 00:57:41,200
virtual Dom is nothing but the code can
वर्चुअल डोम कुछ भी नहीं है लेकिन कोड कर सकता है

1162
00:57:41,200 --> 00:57:43,039
be readable in the virtual Dom not in
वर्चुअल डोम में पठनीय नहीं है

1163
00:57:43,039 --> 00:57:45,880
the main do okay but uh what's the
मुख्य करो ठीक है, लेकिन उह क्या है

1164
00:57:45,880 --> 00:57:49,440
functionality like what is the
कार्यक्षमता जैसी क्या है

1165
00:57:49,440 --> 00:57:51,960
speciality of why virtual Dom is
वर्चुअल डोम की विशेषता क्यों है

1166
00:57:51,960 --> 00:57:54,280
introduced we can go ahead with the real
पेश किया गया हम असली के साथ आगे बढ़ सकते हैं

1167
00:57:54,280 --> 00:57:57,240
Dom no no virtual Dom is is introduced
डोम नो वर्चुअल डोम पेश किया गया है

1168
00:57:57,240 --> 00:58:00,240
uh for capturing all the updates and all
सभी अपडेट और सभी को कैप्चर करने के लिए उह

1169
00:58:00,240 --> 00:58:02,440
the renders happening in the so can't
एसओ में हो रहा है रेंडर नहीं कर सकते

1170
00:58:02,440 --> 00:58:07,480
real D do okay so if we update if if the
असली डी ठीक है तो अगर हम अपडेट करते हैं तो अगर हम अपडेट करते हैं

1171
00:58:07,480 --> 00:58:09,880
real Dom directly takes the updates so
असली डोम सीधे अपडेट लेता है

1172
00:58:09,880 --> 00:58:13,559
it cannot uh it cannot update the result
यह उह नहीं हो सकता है यह परिणाम को अपडेट नहीं कर सकता है

1173
00:58:13,559 --> 00:58:15,880
frequently right so that's what uh my
बार -बार सही है कि क्या उह मेरी

1174
00:58:15,880 --> 00:58:16,640
guess
अनुमान

1175
00:58:16,640 --> 00:58:21,559
is okay okay uh have you worked with
ठीक है ठीक है उह आपने साथ काम किया है

1176
00:58:21,559 --> 00:58:24,839
forms yeah so form validation how do you
फॉर्म्स यस तो वैलिडेशन फॉर्मेशन आप कैसे करते हैं

1177
00:58:24,839 --> 00:58:27,920
do I with the controll elements yeah
क्या मैं नियंत्रक तत्वों के साथ हाँ

1178
00:58:27,920 --> 00:58:30,359
with the controll elements we can uh uh
नियंत्रक तत्वों के साथ हम उह उह कर सकते हैं

1179
00:58:30,359 --> 00:58:33,280
first of all uh let's see I have an name
सबसे पहले उह देखते हैं कि मेरे पास एक नाम है

1180
00:58:33,280 --> 00:58:36,119
and password two forms two input values
और पासवर्ड दो फॉर्म दो इनपुट मान

1181
00:58:36,119 --> 00:58:38,240
yeah so uh if we want to handle this
अगर हम इसे संभालना चाहते हैं तो हाँ, उह

1182
00:58:38,240 --> 00:58:40,960
form using UST State uh I must create a
UST राज्य UH का उपयोग करके फॉर्म मैं एक बनाना होगा

1183
00:58:40,960 --> 00:58:42,599
a variable for name and variable for
नाम और चर के लिए एक चर

1184
00:58:42,599 --> 00:58:44,920
password okay and uh I need to provide
पासवर्ड ठीक है और उह मुझे प्रदान करने की आवश्यकता है

1185
00:58:44,920 --> 00:58:47,839
the value and onchange prop to the input
इनपुट के लिए मूल्य और onchange प्रोप

1186
00:58:47,839 --> 00:58:50,520
uh input tag so after that I need to
उह इनपुट टैग तो उसके बाद मुझे जरूरत है

1187
00:58:50,520 --> 00:58:52,880
submit the form using onsubmit okay on
OnSubmit का उपयोग करके फॉर्म जमा करें ठीक है

1188
00:58:52,880 --> 00:58:55,799
the form okay yeah so if I we can handle
फॉर्म ठीक है हाँ तो अगर मैं हम संभाल सकते हैं

1189
00:58:55,799 --> 00:58:57,640
the form easily and we can retrieve the
फॉर्म आसानी से और हम पुनः प्राप्त कर सकते हैं

1190
00:58:57,640 --> 00:58:59,440
values so that are frequently changing
मान ताकि अक्सर बदल रहे हो

1191
00:58:59,440 --> 00:59:01,440
inside the props what are higher order
प्रॉप्स के अंदर उच्च क्रम क्या हैं

1192
00:59:01,440 --> 00:59:03,799
components in react higher order
प्रतिक्रिया उच्च क्रम में घटक

1193
00:59:03,799 --> 00:59:07,680
components yes okay higher
घटक हाँ ठीक है

1194
00:59:07,680 --> 00:59:11,960
component it I heard it but uh for now
घटक यह मैंने इसे सुना लेकिन अब के लिए उह

1195
00:59:11,960 --> 00:59:13,359
I'm not able to remember that okay no
मैं याद नहीं कर पा रहा हूँ कि ठीक नहीं है

1196
00:59:13,359 --> 00:59:16,280
worries no worries do you know about
चिंता नहीं कि आप के बारे में कोई चिंता नहीं है

1197
00:59:16,280 --> 00:59:19,960
synthetic event in react synthetic event
रिएक्ट सिंथेटिक घटना में सिंथेटिक घटना

1198
00:59:19,960 --> 00:59:22,920
yes no sir okay no it is no it is no it
हाँ नहीं सर ठीक है नहीं, यह नहीं है यह नहीं है

1199
00:59:22,920 --> 00:59:25,720
is okay you have started working with
क्या ठीक है, आपने साथ काम करना शुरू कर दिया है

1200
00:59:25,720 --> 00:59:31,319
the Redux right yes so there is a
Redux सही हाँ तो वहाँ एक है

1201
00:59:31,319 --> 00:59:34,240
action exactly yes yes so what what's
कार्रवाई बिल्कुल हाँ हाँ तो क्या है

1202
00:59:34,240 --> 00:59:35,960
that action
वह कार्रवाई

1203
00:59:35,960 --> 00:59:39,000
is action is nothing but uh what is the
क्या कार्रवाई कुछ भी नहीं है, लेकिन उह क्या है

1204
00:59:39,000 --> 00:59:40,640
type of an action for example I have a
उदाहरण के लिए एक क्रिया का प्रकार मेरे पास है

1205
00:59:40,640 --> 00:59:43,240
basic counter here see have a counter
बेसिक काउंटर यहाँ देखें एक काउंटर है

1206
00:59:43,240 --> 00:59:44,960
with increment and decrement values with
के साथ वृद्धि और घटाव मूल्यों के साथ

1207
00:59:44,960 --> 00:59:47,400
the buttons okay so I can uh I can just
बटन ठीक है तो मैं उह मैं बस कर सकते हैं

1208
00:59:47,400 --> 00:59:49,720
provide the action type uh for example
उदाहरण के लिए एक्शन प्रकार UH प्रदान करें

1209
00:59:49,720 --> 00:59:52,400
action type as a string Inc so I can
एक स्ट्रिंग इंक के रूप में एक्शन प्रकार तो मैं कर सकता हूं

1210
00:59:52,400 --> 00:59:54,520
give a particular type to increment and
वृद्धि के लिए एक विशेष प्रकार दें और

1211
00:59:54,520 --> 00:59:55,559
I can give a particular type to
मैं एक विशेष प्रकार दे सकता हूं

1212
00:59:55,559 --> 00:59:57,119
decrement so these are called as an
घटाव तो इन्हें एक कहा जाता है

1213
00:59:57,119 --> 00:59:59,039
actions so with the help of actions I
क्रियाओं की मदद से कार्रवाई मैं

1214
00:59:59,039 --> 01:00:01,160
can dispatch a function so what should
एक फ़ंक्शन को भेज सकते हैं ताकि क्या होना चाहिए

1215
01:00:01,160 --> 01:00:03,359
be done there so okay so it contains
वहाँ किया जाना तो ठीक है तो इसमें शामिल है

1216
01:00:03,359 --> 01:00:06,680
information you exactly exactly so what
जानकारी आपको बिल्कुल वैसा ही क्या है

1217
01:00:06,680 --> 01:00:08,240
what if I press increment so I need to
क्या होगा अगर मैं वृद्धि को दबाता हूं तो मुझे जरूरत है

1218
01:00:08,240 --> 01:00:09,799
provide the logic inside the dispatch
प्रेषण के अंदर तर्क प्रदान करें

1219
01:00:09,799 --> 01:00:12,400
function so that uh using the type
कार्य करें ताकि उह प्रकार का उपयोग करके

1220
01:00:12,400 --> 01:00:14,520
accessing the type in dispatch it it
इसे भेजने में प्रकार तक पहुंचना

1221
01:00:14,520 --> 01:00:18,559
updates the uh code okay uh do you know
UH कोड को अपडेट करता है ठीक है उह क्या आप जानते हैं

1222
01:00:18,559 --> 01:00:21,960
about just just yeah I heard it but I
बस के बारे में हाँ, मैंने इसे सुना लेकिन मैं

1223
01:00:21,960 --> 01:00:23,799
didn't work I think it's a testing tool
मुझे लगता है कि यह एक परीक्षण उपकरण है

1224
01:00:23,799 --> 01:00:26,559
for react component testing components
प्रतिक्रिया घटक परीक्षण घटकों के लिए

1225
01:00:26,559 --> 01:00:29,319
right yes yeah so you I was about to
ठीक है हाँ, तो तुम मैं के बारे में था

1226
01:00:29,319 --> 01:00:32,240
work on react texting tool and just also
रिएक्ट टेक्स्टिंग टूल पर काम करें और बस भी

1227
01:00:32,240 --> 01:00:34,920
so but till now I didn't worked on it
इसलिए लेकिन अब तक मैंने इस पर काम नहीं किया

1228
01:00:34,920 --> 01:00:37,319
okay okay no worries uh do you know
ठीक है ठीक है कोई चिंता नहीं है उह आप जानते हैं

1229
01:00:37,319 --> 01:00:41,880
about weback yes yes so basically uh uh
weback हाँ हाँ के बारे में तो मूल रूप से उह उह

1230
01:00:41,880 --> 01:00:43,960
it's a it's similar to the CRM in white
यह एक सफेद रंग में सीआरएम के समान है

1231
01:00:43,960 --> 01:00:46,039
right if I'm not wrong hearing for the
अगर मैं गलत सुनवाई नहीं कर रहा हूँ

1232
01:00:46,039 --> 01:00:48,640
first time or like no no I heard it but
पहली बार या नहीं, नहीं मैंने इसे सुना लेकिन

1233
01:00:48,640 --> 01:00:51,440
uh I didn't went through it okay no it
उह मैं इसके माध्यम से नहीं गया यह ठीक नहीं है

1234
01:00:51,440 --> 01:00:53,520
is then no it is no it
तब यह नहीं है कि यह नहीं है

1235
01:00:53,520 --> 01:00:57,160
is uh do you know about re react
क्या आप फिर से प्रतिक्रिया के बारे में जानते हैं

1236
01:00:57,160 --> 01:01:01,520
native yes yes so how react actually is
देशी हाँ हाँ तो वास्तव में कैसे प्रतिक्रिया है

1237
01:01:01,520 --> 01:01:02,960
different I have made a few projects
अलग मैंने कुछ परियोजनाएं बनाई हैं

1238
01:01:02,960 --> 01:01:04,640
using react native also okay so how
रिएक्ट देशी का उपयोग करना भी ठीक है तो कैसे

1239
01:01:04,640 --> 01:01:08,079
react is different from react native uh
रिएक्ट रिएक्ट देशी उह से अलग है

1240
01:01:08,079 --> 01:01:10,200
I can say in react we can directly
मैं रिएक्ट में कह सकता हूं कि हम सीधे कर सकते हैं

1241
01:01:10,200 --> 01:01:12,680
access the index. CSS file so I'm
सूचकांक तक पहुँचें। CSS फ़ाइल तो मैं हूँ

1242
01:01:12,680 --> 01:01:14,599
particularly talking about few examples
विशेष रूप से कुछ उदाहरणों के बारे में बात कर रहे हैं

1243
01:01:14,599 --> 01:01:16,400
that right so react native is mainly
यह सही है कि रिएक्ट देशी मुख्य रूप से है

1244
01:01:16,400 --> 01:01:18,359
used for implementing Mobile Android and
मोबाइल एंड्रॉइड को लागू करने के लिए उपयोग किया जाता है और

1245
01:01:18,359 --> 01:01:20,520
iOS applications okay inside the mobile
IOS एप्लिकेशन मोबाइल के अंदर ठीक है

1246
01:01:20,520 --> 01:01:23,960
so uh I'm talking about uh so let's say
तो उह मैं उह के बारे में बात कर रहा हूँ तो चलो कहते हैं

1247
01:01:23,960 --> 01:01:25,599
I can say one example so in react we can
मैं एक उदाहरण कह सकता हूं इसलिए प्रतिक्रिया में हम कर सकते हैं

1248
01:01:25,599 --> 01:01:28,280
directly access the index.css file and
सीधे index.css फ़ाइल तक पहुंचें और

1249
01:01:28,280 --> 01:01:31,680
we can use that file directly using uh
हम उस फ़ाइल का उपयोग सीधे UH का उपयोग करके कर सकते हैं

1250
01:01:31,680 --> 01:01:34,079
the index. CSS yeah but coming to react
सूचकांक। Css हाँ, लेकिन प्रतिक्रिया करने के लिए आ रहा है

1251
01:01:34,079 --> 01:01:35,799
native we cannot use that file directly
देशी हम उस फ़ाइल का सीधे उपयोग नहीं कर सकते

1252
01:01:35,799 --> 01:01:39,680
so we we need to use uh Styles object
इसलिए हमें UH शैलियों की वस्तु का उपयोग करने की आवश्यकता है

1253
01:01:39,680 --> 01:01:41,319
okay inside the react native so we
रिएक्ट देशी के अंदर ठीक है तो हम

1254
01:01:41,319 --> 01:01:43,839
cannot access the index.css file
Index.css फ़ाइल तक पहुंच नहीं सकते

1255
01:01:43,839 --> 01:01:45,839
directly inside the react native app and
सीधे रिएक्ट देशी ऐप के अंदर और

1256
01:01:45,839 --> 01:01:48,160
we can work we cannot work with that so
हम काम कर सकते हैं हम उसके साथ काम नहीं कर सकते

1257
01:01:48,160 --> 01:01:49,920
there are few similarities yeah like
कुछ समानताएं हैं जैसे हाँ

1258
01:01:49,920 --> 01:01:53,359
this and uh uh we need to use um
यह और उह उह हमें उम का उपयोग करने की आवश्यकता है

1259
01:01:53,359 --> 01:01:56,160
particular uh inbuilt keywords for navig
NAVIG के लिए विशेष रूप से UH इनबिल्ट कीवर्ड

1260
01:01:56,160 --> 01:01:58,359
and all for viewing text and so there
और सभी पाठ देखने के लिए और इसलिए वहाँ

1261
01:01:58,359 --> 01:02:02,359
are particular access for that okay uh
उस ठीक उह के लिए विशेष पहुंच हैं

1262
01:02:02,359 --> 01:02:04,880
so have you worked with Progressive web
तो क्या आपने प्रगतिशील वेब के साथ काम किया है

1263
01:02:04,880 --> 01:02:08,119
apps no sir can you elaborate more can
ऐप्स नो सर आप अधिक विस्तृत कर सकते हैं

1264
01:02:08,119 --> 01:02:10,520
you elaborate more so that I can like it
आप अधिक विस्तृत हैं ताकि मैं इसे पसंद कर सकूं

1265
01:02:10,520 --> 01:02:13,799
is compatible with different devices
विभिन्न उपकरणों के साथ संगत है

1266
01:02:13,799 --> 01:02:16,440
okay okay so okay Android or iOS also
ठीक है ठीक है तो ठीक है Android या iOS भी

1267
01:02:16,440 --> 01:02:18,680
yeah okay
हाँ ठीक है

1268
01:02:18,680 --> 01:02:22,520
okay okay uh okay we will move to HTML
ठीक है ठीक है उह ठीक है हम html में चले जाएंगे

1269
01:02:22,520 --> 01:02:25,839
uh okay
उह ठीक है

1270
01:02:28,079 --> 01:02:31,839
do you know about uh void elements in
क्या आप यूएच शून्य तत्वों के बारे में जानते हैं

1271
01:02:31,839 --> 01:02:35,200
HTML wi elements
HTML WI तत्व

1272
01:02:35,200 --> 01:02:39,119
yes no sir I'm not aware of that
हाँ नहीं सर मुझे इसके बारे में पता नहीं है

1273
01:02:39,119 --> 01:02:45,000
why okay okay no sir okay so Suppose
ठीक क्यों ठीक है नहीं सर ठीक है तो मान लीजिए

1274
01:02:45,000 --> 01:02:48,559
there is a uh there is no closing tag
एक उह है कोई समापन टैग नहीं है

1275
01:02:48,559 --> 01:02:51,240
there is no closing tag okay yeah so
कोई समापन टैग ठीक नहीं है, तो हाँ

1276
01:02:51,240 --> 01:02:56,119
what that element is known as then
उस तत्व को तब किसके रूप में जाना जाता है

1277
01:02:56,119 --> 01:02:58,559
I think they're called as Mt tax empty
मुझे लगता है कि उन्हें एमटी टैक्स खाली कहा जाता है

1278
01:02:58,559 --> 01:03:01,400
tax so can you give me an example for
कर तो क्या आप मुझे एक उदाहरण दे सकते हैं

1279
01:03:01,400 --> 01:03:06,480
empty tax uh we can uh tell BR HR BR for
खाली कर उह हम उह के लिए br hr br बता सकते हैं

1280
01:03:06,480 --> 01:03:08,880
breaking line HR for horizontal line
क्षैतिज रेखा के लिए ब्रेकिंग लाइन एचआर

1281
01:03:08,880 --> 01:03:12,039
image image tag yeah so these are the
छवि छवि टैग हाँ तो ये हैं

1282
01:03:12,039 --> 01:03:12,880
empty
खाली

1283
01:03:12,880 --> 01:03:17,359
tags okay there is a data list tag and
टैग ठीक है एक डेटा सूची टैग है और

1284
01:03:17,359 --> 01:03:20,039
there is a select tag have you heard of
एक चुनिंदा टैग है जिसके बारे में आपने सुना है

1285
01:03:20,039 --> 01:03:22,880
it yeah yeah I know about the select I
यह हाँ, मैं चुनिंदा के बारे में जानता हूँ

1286
01:03:22,880 --> 01:03:24,599
guess I know about the data list also I
मुझे लगता है कि मैं डेटा सूची के बारे में भी जानता हूं

1287
01:03:24,599 --> 01:03:27,200
think it comes under the list TXS right
लगता है कि यह सूची TXS के तहत आता है

1288
01:03:27,200 --> 01:03:28,880
yes unordered list ordered list data
हाँ अनियंत्रित सूची ने सूची डेटा का आदेश दिया

1289
01:03:28,880 --> 01:03:32,279
list yes have you worked on it no no I
सूची हाँ क्या आपने इस पर काम किया है नहीं मैं नहीं

1290
01:03:32,279 --> 01:03:34,680
didn't work on the data list but I guess
डेटा सूची में काम नहीं किया, लेकिन मुझे लगता है

1291
01:03:34,680 --> 01:03:36,559
I I'm pretty sure it comes under the
मुझे पूरा यकीन है कि यह के तहत आता है

1292
01:03:36,559 --> 01:03:40,680
list but I have worked yeah yeah in yeah
सूची लेकिन मैंने हाँ में हाँ काम किया है हाँ

1293
01:03:40,680 --> 01:03:42,640
I didn't worked on the data list and all
मैंने डेटा सूची और सभी पर काम नहीं किया

1294
01:03:42,640 --> 01:03:44,720
I have worked only on o and ul and
मैंने केवल ओ और उल पर काम किया है और

1295
01:03:44,720 --> 01:03:46,079
coming to select tag I have worked on
चुनिंदा टैग के लिए आ रहा है मैंने काम किया है

1296
01:03:46,079 --> 01:03:50,200
the select tag so data is like uh it
टैग का चयन करें तो डेटा उह की तरह है

1297
01:03:50,200 --> 01:03:53,240
provides the options predefined options
विकल्प पूर्वनिर्धारित विकल्प प्रदान करता है

1298
01:03:53,240 --> 01:03:56,160
for input Fields so Suppose there is so
इनपुट फ़ील्ड के लिए तो मान लीजिए कि ऐसा है

1299
01:03:56,160 --> 01:03:58,599
there are certain options
कुछ विकल्प हैं

1300
01:03:58,599 --> 01:04:02,200
so all for example value yeah so it
तो सभी उदाहरण के लिए मूल्य हाँ तो यह

1301
01:04:02,200 --> 01:04:04,200
provides a certain options for that
उसके लिए एक निश्चित विकल्प प्रदान करता है

1302
01:04:04,200 --> 01:04:07,000
particular input element so for that
उसके लिए विशेष इनपुट तत्व ऐसा है

1303
01:04:07,000 --> 01:04:09,760
purpose we use data okay so max length
उद्देश्य हम डेटा ठीक है इसलिए अधिकतम लंबाई

1304
01:04:09,760 --> 01:04:12,039
length like this right yeah like for
इस तरह की लंबाई के लिए हाँ के लिए की तरह हाँ

1305
01:04:12,039 --> 01:04:13,920
example like Suppose there is a value
उदाहरण की तरह उदाहरण एक मूल्य है

1306
01:04:13,920 --> 01:04:16,119
and uh there are certain values that you
और उह कुछ मूल्य हैं जो आप हैं

1307
01:04:16,119 --> 01:04:18,960
can select so those
उन लोगों का चयन कर सकते हैं

1308
01:04:18,960 --> 01:04:21,799
options uh it helps us to provide data
विकल्प उह यह हमें डेटा प्रदान करने में मदद करता है

1309
01:04:21,799 --> 01:04:26,119
list okay uh so re what is the use of
सूची ठीक है उह तो फिर से क्या उपयोग है

1310
01:04:26,119 --> 01:04:31,240
required attribute required yes okay uh
आवश्यक विशेषता आवश्यक हाँ ठीक है उह

1311
01:04:31,240 --> 01:04:33,680
let's say for example I have one two and
उदाहरण के लिए कहते हैं कि मेरे पास एक दो हैं और

1312
01:04:33,680 --> 01:04:36,839
three input tags okay so uh and there
तीन इनपुट टैग ठीक है तो उह और वहाँ

1313
01:04:36,839 --> 01:04:40,319
there is a submit button okay so if I I
एक सबमिट बटन ठीक है, तो अगर मैं

1314
01:04:40,319 --> 01:04:42,839
filled first input tag and I fill second
पहला इनपुट टैग भरा और मैं दूसरा भरता हूं

1315
01:04:42,839 --> 01:04:45,319
input tag and I did not fill third input
इनपुट टैग और मैंने तीसरा इनपुट नहीं भरा

1316
01:04:45,319 --> 01:04:47,359
tag if I press submit this form will get
टैग अगर मैं दबा देता हूं तो यह फॉर्म मिल जाएगा

1317
01:04:47,359 --> 01:04:49,559
submitted because I did not provide any
सबमिट किया गया क्योंकि मैंने कोई प्रदान नहीं किया

1318
01:04:49,559 --> 01:04:51,520
kind of required attribute to any of the
किसी भी के लिए आवश्यक विशेषता की तरह

1319
01:04:51,520 --> 01:04:53,880
inputs so if I provide required to the
इनपुट्स तो अगर मैं आवश्यकता प्रदान करता हूं

1320
01:04:53,880 --> 01:04:57,119
particular input that is necessary and
विशेष रूप से इनपुट जो आवश्यक है और

1321
01:04:57,119 --> 01:04:59,200
Dom will update us that please this this
डोम हमें यह अपडेट करेगा कि कृपया यह

1322
01:04:59,200 --> 01:05:02,640
field is required okay before okay so
ठीक होने से पहले फील्ड ठीक है

1323
01:05:02,640 --> 01:05:05,200
that is compulsion un okay yes yes that
यह मजबूरी है, ठीक है हाँ हाँ

1324
01:05:05,200 --> 01:05:07,760
is compulsion okay we can declare that
क्या मजबूरी ठीक है हम यह घोषित कर सकते हैं

1325
01:05:07,760 --> 01:05:09,680
that compulsion using required attribute
आवश्यक विशेषता का उपयोग करके उस मजबूरी

1326
01:05:09,680 --> 01:05:12,680
attribute yeah yeah okay yeah so there
विशेषता हाँ हाँ ठीक है हाँ तो वहाँ

1327
01:05:12,680 --> 01:05:15,839
is a no validate attribute in HTML do
HTML में कोई मान्य विशेषता नहीं है

1328
01:05:15,839 --> 01:05:18,400
you know about it validate no valid no
आप इसके बारे में जानते हैं कि कोई मान्य नहीं मान मान्य है

1329
01:05:18,400 --> 01:05:21,720
validate attribute no Val I'm not so
मान्य विशेषता कोई वैल मैं ऐसा नहीं हूं

1330
01:05:21,720 --> 01:05:23,119
what is this used for it is used for
इसके लिए इसका उपयोग किस लिए किया जाता है

1331
01:05:23,119 --> 01:05:26,599
forms and all yes in forms we use
रूपों और सभी रूपों में हम उपयोग करते हैं

1332
01:05:26,599 --> 01:05:30,599
like uh even if the input like okay it
उह की तरह भले ही इनपुट ठीक है

1333
01:05:30,599 --> 01:05:33,599
contains else it will fail the Val
इसमें शामिल हैं यह वैल को विफल कर देगा

1334
01:05:33,599 --> 01:05:38,559
validation okay okay yeah I got okay
सत्यापन ठीक है ठीक है हाँ मैं ठीक हो गया

1335
01:05:38,559 --> 01:05:40,760
okay so whether this this input T must
ठीक है तो क्या यह इनपुट टी चाहिए

1336
01:05:40,760 --> 01:05:43,279
be uh must filled with 10 values 10
उह 10 मान 10 से भरा होना चाहिए

1337
01:05:43,279 --> 01:05:46,200
characters so if if that is false or
वर्ण तो अगर वह गलत है या

1338
01:05:46,200 --> 01:05:49,480
that will fail right yes okay uh so
यह विफल हो जाएगा हाँ ठीक है उह तो

1339
01:05:49,480 --> 01:05:53,680
there is HTML and there is xhtml so can
HTML है और वहाँ XHTML है

1340
01:05:53,680 --> 01:05:56,559
you tell me the difference between those
आप मुझे उन के बीच अंतर बताते हैं

1341
01:05:56,559 --> 01:06:00,160
to HTML is a document for the Dom so
HTML के लिए DOM के लिए एक दस्तावेज है

1342
01:06:00,160 --> 01:06:01,960
it's a document object model so it
यह एक दस्तावेज़ ऑब्जेक्ट मॉडल है इसलिए यह

1343
01:06:01,960 --> 01:06:04,839
provides a basic structure uh to the Dom
डोम को एक मूल संरचना UH प्रदान करता है

1344
01:06:04,839 --> 01:06:07,960
but I'm not xhtml I heard I heard of it
लेकिन मैं XHTML नहीं हूं मैंने सुना है मैंने इसके बारे में सुना है

1345
01:06:07,960 --> 01:06:11,279
but uh I didn't uh deeply V to it okay
लेकिन उह मैं इसे ठीक नहीं था, यह ठीक है

1346
01:06:11,279 --> 01:06:14,279
no worries uh we will move to CSS can
कोई चिंता नहीं है उह हम सीएसएस कर सकते हैं

1347
01:06:14,279 --> 01:06:15,480
you tell
आप बताओ

1348
01:06:15,480 --> 01:06:18,480
me
मुझे

1349
01:06:18,680 --> 01:06:21,200
uh about the CSS
सीएसएस के बारे में उह

1350
01:06:21,200 --> 01:06:24,359
combinators CSS combinators yes can you
कॉम्बिनेटर्स सीएसएस कॉम्बिनेटर्स हां कर सकते हैं

1351
01:06:24,359 --> 01:06:26,279
elaborate it more sir
इसे और अधिक सर

1352
01:06:26,279 --> 01:06:31,640
okay noes uh can you tell me about Pudo
ठीक है नोस उह आप मुझे पुडो के बारे में बता सकते हैं

1353
01:06:31,640 --> 01:06:35,400
classes in CSS pseudo classes
CSS छद्म कक्षाओं में कक्षाएं

1354
01:06:35,400 --> 01:06:39,799
yes I think that is uh can be writed as
हाँ मुझे लगता है कि उह के रूप में लिख दिया जा सकता है

1355
01:06:39,799 --> 01:06:43,480
like this I'm not it helps us to yes
इस तरह मैं यह नहीं है कि यह हमें हाँ करने में मदद करता है

1356
01:06:43,480 --> 01:06:47,160
like yeah with a single like with with
जैसे के साथ एक ही के साथ हाँ

1357
01:06:47,160 --> 01:06:49,640
single we don't
सिंगल हम नहीं

1358
01:06:49,640 --> 01:06:52,680
try Okay so for example I have I'm
उदाहरण के लिए ठीक है, मैं हूँ

1359
01:06:52,680 --> 01:06:55,920
having a button okay so I can provide a
एक बटन ठीक होने के नाते मैं एक प्रदान कर सकता हूँ

1360
01:06:55,920 --> 01:06:59,839
style to this button and uh so if I want
इस बटन के लिए शैली और उह तो अगर मैं चाहता हूँ

1361
01:06:59,839 --> 01:07:02,119
if I want another style only with the
अगर मुझे केवल एक और शैली चाहिए

1362
01:07:02,119 --> 01:07:04,319
hover effect so like if if that is
होवर प्रभाव तो जैसे कि अगर वह है

1363
01:07:04,319 --> 01:07:06,480
happen I can use like this
हो रहा है मैं इस तरह का उपयोग कर सकता हूं

1364
01:07:06,480 --> 01:07:10,680
sir so I can handle the hover events and
सर तो मैं होवर की घटनाओं को संभाल सकता हूं और

1365
01:07:10,680 --> 01:07:12,559
extra events so the these are called
अतिरिक्त घटनाएं तो इन्हें कहा जाता है

1366
01:07:12,559 --> 01:07:15,760
SoDo elements okay so this H is called s
सोडो तत्व ठीक है इसलिए इस h को s कहा जाता है

1367
01:07:15,760 --> 01:07:17,680
element
तत्व

1368
01:07:17,680 --> 01:07:22,599
okay so uh do you know how can we add 3D
ठीक है तो उह क्या आप जानते हैं कि हम 3 डी कैसे जोड़ सकते हैं

1369
01:07:22,599 --> 01:07:25,160
transformation using CSS 3D
CSS 3D का उपयोग करके परिवर्तन

1370
01:07:25,160 --> 01:07:26,720
transformation
परिवर्तन

1371
01:07:26,720 --> 01:07:29,359
yes like you're saying the animations
हाँ जैसे आप एनिमेशन कह रहे हैं

1372
01:07:29,359 --> 01:07:32,359
right yes
ठीक है हाँ

1373
01:07:32,359 --> 01:07:35,000
okay uh for setting the animation we can
ठीक है उह एनीमेशन सेट करने के लिए हम कर सकते हैं

1374
01:07:35,000 --> 01:07:37,720
use animation attribute in the parent
माता -पिता में एनीमेशन विशेषता का उपयोग करें

1375
01:07:37,720 --> 01:07:40,200
class like there are certain methods
क्लास जैसे कुछ तरीके हैं

1376
01:07:40,200 --> 01:07:43,640
like there is a rotate 3D have you
जैसे कि एक घूर्णन 3 डी आपके पास है

1377
01:07:43,640 --> 01:07:45,960
worked on it okay no no no I didn't work
इस पर काम किया ठीक है नहीं, नहीं, मैंने काम नहीं किया

1378
01:07:45,960 --> 01:07:48,839
on I was I just creating the basic tool
मैं पर मैं सिर्फ मूल उपकरण बना रहा था

1379
01:07:48,839 --> 01:07:51,640
okay no it is okay so there is a certain
ठीक है नहीं, यह ठीक है इसलिए एक निश्चित है

1380
01:07:51,640 --> 01:07:54,200
property which helps us for image
संपत्ति जो हमें छवि के लिए मदद करती है

1381
01:07:54,200 --> 01:07:56,799
reflection in CSS do you know
CSS में प्रतिबिंब क्या आप जानते हैं

1382
01:07:56,799 --> 01:07:58,720
about
के बारे में

1383
01:07:58,720 --> 01:08:03,880
IM okay so uh image above the image
Im ठीक है तो छवि के ऊपर उह छवि

1384
01:08:03,880 --> 01:08:05,279
right you're talking about that right
सही आप उस अधिकार के बारे में बात कर रहे हैं

1385
01:08:05,279 --> 01:08:07,279
yes so for
हाँ तो के लिए

1386
01:08:07,279 --> 01:08:09,839
reflection it's it's an overlay I think
प्रतिबिंब यह एक ओवरले है जो मुझे लगता है

1387
01:08:09,839 --> 01:08:13,160
so certain property is there for it okay
तो कुछ संपत्ति इसके लिए ठीक है

1388
01:08:13,160 --> 01:08:16,679
um I think image overlay or image hidden
उम मुझे लगता है कि छवि ओवरले या छवि छिपी हुई है

1389
01:08:16,679 --> 01:08:21,319
no display overlay right I think no no
कोई प्रदर्शन ओवरले सही मुझे लगता है कि नहीं नहीं

1390
01:08:21,319 --> 01:08:23,600
okay something reflect kind of thing is
ठीक है कुछ इस तरह की बात है

1391
01:08:23,600 --> 01:08:26,080
there reflect
वहाँ प्रतिबिंबित

1392
01:08:26,080 --> 01:08:28,799
something is there with a
एक के साथ कुछ है

1393
01:08:28,799 --> 01:08:33,080
reflect do you have you worked on
प्रतिबिंबित करें कि आपने काम किया है

1394
01:08:33,080 --> 01:08:35,439
it do you know about the difference
यह आप अंतर के बारे में जानते हैं

1395
01:08:35,439 --> 01:08:37,839
between flexbox and grid flexbox and
फ्लेक्सबॉक्स और ग्रिड फ्लेक्सबॉक्स के बीच और

1396
01:08:37,839 --> 01:08:42,520
grid yes yeah uh basically uh Flex box
ग्रिड हाँ हाँ उह मूल रूप से उह फ्लेक्स बॉक्स

1397
01:08:42,520 --> 01:08:44,759
if we Flex box or grid are both are used
यदि हम फ्लेक्स बॉक्स या ग्रिड दोनों का उपयोग किया जाता है

1398
01:08:44,759 --> 01:08:48,120
for the responsiveness okay so main uh
जवाबदेही के लिए ठीक है तो मुख्य उह

1399
01:08:48,120 --> 01:08:50,279
major people will prefer grid because
प्रमुख लोग ग्रिड पसंद करेंगे क्योंकि

1400
01:08:50,279 --> 01:08:53,839
inside grid we can manually uh manually
ग्रिड के अंदर हम मैन्युअल रूप से मैन्युअल रूप से उह कर सकते हैं

1401
01:08:53,839 --> 01:08:55,479
give how many columns and how many rows
कितने कॉलम और कितनी पंक्तियों को दें

1402
01:08:55,479 --> 01:08:57,600
we want inside the particular component
हम विशेष घटक के अंदर चाहते हैं

1403
01:08:57,600 --> 01:08:59,120
or inside the particular line or
या विशेष लाइन के अंदर या

1404
01:08:59,120 --> 01:09:03,238
something so yeah so then basically both
कुछ तो हाँ तो मूल रूप से दोनों

1405
01:09:03,238 --> 01:09:05,719
are used for uh responsiveness as I said
जैसा कि मैंने कहा है, उह जवाबदेही के लिए उपयोग किया जाता है

1406
01:09:05,719 --> 01:09:10,520
so yeah okay so flexbox is a 2d yeah I
तो हाँ ठीक है तो फ्लेक्सबॉक्स एक 2 डी हाँ है

1407
01:09:10,520 --> 01:09:13,319
think it's a 2d are you sure yes sir and
लगता है कि यह एक 2 डी है क्या आपको यकीन है कि हाँ सर और

1408
01:09:13,319 --> 01:09:15,679
grid
ग्रिड

1409
01:09:15,920 --> 01:09:19,520
is grid works as a 3D I think
क्या ग्रिड एक 3 डी के रूप में काम करता है मुझे लगता है

1410
01:09:19,520 --> 01:09:22,880
3D yeah but I'm not sure of that okay so
3 डी हाँ, लेकिन मुझे यकीन नहीं है कि ठीक है

1411
01:09:22,880 --> 01:09:27,198
3D you told me 3D layout so
3 डी आपने मुझे 3 डी लेआउट बताया

1412
01:09:27,198 --> 01:09:30,479
rows are there okay column yeah rows are
पंक्तियाँ ठीक हैं स्तंभ हाँ पंक्तियाँ हैं

1413
01:09:30,479 --> 01:09:33,640
there columns are there yeah and what is
वहाँ स्तंभ हैं हाँ और क्या है

1414
01:09:33,640 --> 01:09:36,479
the third layout as you told me that it
तीसरा लेआउट जैसा कि आपने मुझे बताया था कि यह

1415
01:09:36,479 --> 01:09:40,960
is a 3D layout okay so coming to row is
एक 3 डी लेआउट ठीक है इसलिए पंक्ति में आ रहा है

1416
01:09:40,960 --> 01:09:43,359
one dimension and column is another
एक आयाम और स्तंभ दूसरा है

1417
01:09:43,359 --> 01:09:47,600
dimension yeah you told me 3D right yeah
आयाम हाँ आपने मुझे 3 डी सही हाँ कहा

1418
01:09:47,600 --> 01:09:50,120
so that's why I ask you what's the third
इसलिए मैं आपसे पूछता हूं कि तीसरा क्या है

1419
01:09:50,120 --> 01:09:53,839
dimension we can just
आयाम हम बस कर सकते हैं

1420
01:09:53,880 --> 01:09:56,280
ask no sir I'm not getting the point
पूछो नहीं सर मुझे बात नहीं मिल रही है

1421
01:09:56,280 --> 01:10:01,080
right now okay so uh and flex boox okay
अभी ठीक है तो उह और फ्लेक्स boox ठीक है

1422
01:10:01,080 --> 01:10:05,360
grid is a 3D you told me right yeah and
ग्रिड एक 3 डी है जिसे आपने मुझे सही हाँ और बताया है

1423
01:10:05,360 --> 01:10:06,760
flex box
फ्लेक्स बॉक्स

1424
01:10:06,760 --> 01:10:07,790
is
है

1425
01:10:07,790 --> 01:10:09,320
[Music]
[संगीत]

1426
01:10:09,320 --> 01:10:13,080
2D are you sure I know both works as a
2 डी क्या आपको यकीन है कि मुझे पता है कि दोनों एक के रूप में काम करते हैं

1427
01:10:13,080 --> 01:10:15,679
responsive to the CSS but I did not
सीएसएस के लिए उत्तरदायी लेकिन मैंने नहीं किया

1428
01:10:15,679 --> 01:10:19,520
study in depth of this both yeah
इस दोनों की गहराई में अध्ययन करें

1429
01:10:19,520 --> 01:10:22,040
okay but both both are used to manage
ठीक है, लेकिन दोनों का उपयोग करने के लिए उपयोग किया जाता है

1430
01:10:22,040 --> 01:10:24,400
the columns and rows sir yeah for layout
लेआउट के लिए स्तंभ और पंक्तियाँ सर हाँ

1431
01:10:24,400 --> 01:10:26,520
purpose it's yeah for the layout purpose
उद्देश्य यह लेआउट उद्देश्य के लिए हाँ है

1432
01:10:26,520 --> 01:10:29,480
both are used to uh uh give a particular
दोनों का उपयोग उह उह एक विशेष देने के लिए किया जाता है

1433
01:10:29,480 --> 01:10:31,800
proper layout to the structure yeah but
संरचना के लिए उचित लेआउट हाँ लेकिन

1434
01:10:31,800 --> 01:10:35,080
but in difference exactly yes yes I
लेकिन अंतर में बिल्कुल हां मैं

1435
01:10:35,080 --> 01:10:37,199
guess in Grid we can manually Define uh
ग्रिड में अनुमान हम मैन्युअल रूप से उह को परिभाषित कर सकते हैं

1436
01:10:37,199 --> 01:10:38,880
the number of colums or the number of
कोलम की संख्या या की संख्या

1437
01:10:38,880 --> 01:10:42,080
columns and rows uh we want okay yeah
कॉलम और पंक्तियाँ उह हम ठीक चाहते हैं हाँ

1438
01:10:42,080 --> 01:10:44,880
and with the using flexbox we can assign
और फ्लेक्सबॉक्स का उपयोग करने के साथ हम असाइन कर सकते हैं

1439
01:10:44,880 --> 01:10:47,440
uh the particular component to be Center
उह विशेष घटक केंद्र होने के लिए

1440
01:10:47,440 --> 01:10:49,960
or uh to yeah to structure the proper
या उचित संरचना करने के लिए हाँ,

1441
01:10:49,960 --> 01:10:53,040
layout so where we want and what we want
लेआउट तो हम कहाँ चाहते हैं और हम क्या चाहते हैं

1442
01:10:53,040 --> 01:10:55,400
and we can use that using flex and come
और हम उस फ्लेक्स का उपयोग करके उपयोग कर सकते हैं और आ सकते हैं

1443
01:10:55,400 --> 01:10:58,080
to grid it is used mainly for creating
ग्रिड करने के लिए इसका उपयोग मुख्य रूप से बनाने के लिए किया जाता है

1444
01:10:58,080 --> 01:11:00,800
layout components yeah both are used for
लेआउट घटक हाँ दोनों के लिए उपयोग किया जाता है

1445
01:11:00,800 --> 01:11:02,800
the same purpose but there is a c both
एक ही उद्देश्य लेकिन एक सी दोनों है

1446
01:11:02,800 --> 01:11:04,760
used for the same yeah yeah certain
एक ही हाँ के लिए उपयोग किया गया हाँ निश्चित है

1447
01:11:04,760 --> 01:11:08,440
difference so that okay fine no it is no
अंतर तो ठीक है ठीक है नहीं यह नहीं है

1448
01:11:08,440 --> 01:11:13,400
it is uh okay uh that's it for the
यह उह ठीक है उह के लिए यह है

1449
01:11:13,400 --> 01:11:16,040
interview
साक्षात्कार
